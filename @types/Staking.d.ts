/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { BigNumber } from 'bignumber.js'

export interface StakingContract extends Truffle.Contract<StakingInstance> {
	'new'(
		_factory: string | BigNumber,
		_rewardsToken: string | BigNumber,
		_stakingToken: string | BigNumber,
		meta?: Truffle.TransactionDetails
	): Promise<StakingInstance>
}

type AllEvents = never

export interface StakingInstance extends Truffle.ContractInstance {
	deposit: {
		(amount: number | BigNumber | string, txDetails?: Truffle.TransactionDetails): Promise<Truffle.TransactionResponse<AllEvents>>
		call(amount: number | BigNumber | string, txDetails?: Truffle.TransactionDetails): Promise<void>
		sendTransaction(amount: number | BigNumber | string, txDetails?: Truffle.TransactionDetails): Promise<string>
		estimateGas(amount: number | BigNumber | string, txDetails?: Truffle.TransactionDetails): Promise<number>
	}

	calculateReward: {
		(txDetails?: Truffle.TransactionDetails): Promise<Truffle.TransactionResponse<AllEvents>>
		call(
			txDetails?: Truffle.TransactionDetails
		): Promise<{
			allowed: boolean
			created: boolean
			level1Tokens: BigNumber
			level2Tokens: BigNumber
			level3Tokens: BigNumber
			level1Reward: BigNumber
			level2Reward: BigNumber
			level3Reward: BigNumber
			tokens: BigNumber
			lastUpdateDate: BigNumber
		}>
		sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>
		estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>
	}
}
