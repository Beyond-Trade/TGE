{
	"contractName": "Staking",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_factory",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_rewardsToken",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_stakingToken",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "deposit",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateReward",
			"outputs": [
				{
					"components": [
						{
							"internalType": "bool",
							"name": "allowed",
							"type": "bool"
						},
						{
							"internalType": "bool",
							"name": "created",
							"type": "bool"
						},
						{
							"internalType": "uint256",
							"name": "level1Tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level2Tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level3Tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level1Reward",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level2Reward",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level3Reward",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "lastUpdateDate",
							"type": "uint256"
						}
					],
					"internalType": "struct Staking.UserData",
					"name": "user",
					"type": "tuple"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"calculateReward\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"created\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"level1Tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level3Tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level1Reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level3Reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Staking.UserData\",\"name\":\"user\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":{\"keccak256\":\"0x2d2747eca3ca0ae004af933e757b50f15766210fb86797262a6db6193cc28a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d0d94861630c38ee50e72c05f4f57035c93b3962dfc6ca9667e384e7ae82e\",\"dweb:/ipfs/QmdRaeAbb7HNompbVYMCtK3X9HMAVS6Tgeg79qmpHZsMx7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
	"bytecode": "0x6080604052620151806000553480156200001857600080fd5b50604051620013bb380380620013bb83398181016040528101906200003e919062000121565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c5565b6000815190506200011b81620001ab565b92915050565b6000806000606084860312156200013757600080fd5b600062000147868287016200010a565b93505060206200015a868287016200010a565b92505060406200016d868287016200010a565b9150509250925092565b600062000184826200018b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001b68162000177565b8114620001c257600080fd5b50565b6111e680620001d56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063725cedd31461003b578063b6b55f2514610059575b600080fd5b610043610075565b6040516100509190610fc4565b60405180910390f35b610073600480360381019061006e9190610e33565b6107c9565b005b61007d610d74565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461022c57600054601e6100d69190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610e5c565b6101809190610ffb565b42111561022b57612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461201b6101da9190611082565b6101e49190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146103db57600054601e6102859190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ed57600080fd5b505afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103259190610e5c565b61032f9190610ffb565b4211156103da57612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610c0a6103899190611082565b6103939190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541461058e57600054602d6104349190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610e5c565b6104de9190610ffb565b42111561058957612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356105389190611082565b6105429190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b6106f3565b600054603c61059d9190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190610e5c565b6106479190610ffb565b4211156106f257612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356106a19190611082565b6106ab9190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392e0150b826040518263ffffffff1660e01b81526004016108249190610fe0565b600060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b505050506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610e5c565b90506001811415610a135781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546109559190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109bb93929190610f8d565b602060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190610e0a565b50610c43565b6002811415610b2c5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610a6e9190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ad493929190610f8d565b602060405180830381600087803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190610e0a565b50610c42565b6003811415610c415781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610b879190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bed93929190610f8d565b602060405180830381600087803b158015610c0757600080fd5b505af1158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190610e0a565b505b5b5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254610c959190610ffb565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bdecea1836040518263ffffffff1660e01b8152600401610d3e9190610fe0565b600060405180830381600087803b158015610d5857600080fd5b505af1158015610d6c573d6000803e3d6000fd5b505050505050565b60405180610140016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050610dda81611182565b92915050565b600081359050610def81611199565b92915050565b600081519050610e0481611199565b92915050565b600060208284031215610e1c57600080fd5b6000610e2a84828501610dcb565b91505092915050565b600060208284031215610e4557600080fd5b6000610e5384828501610de0565b91505092915050565b600060208284031215610e6e57600080fd5b6000610e7c84828501610df5565b91505092915050565b610e8e816110dc565b82525050565b610e9d816110ee565b82525050565b61014082016000820151610eba6000850182610e94565b506020820151610ecd6020850182610e94565b506040820151610ee06040850182610f6f565b506060820151610ef36060850182610f6f565b506080820151610f066080850182610f6f565b5060a0820151610f1960a0850182610f6f565b5060c0820151610f2c60c0850182610f6f565b5060e0820151610f3f60e0850182610f6f565b50610100820151610f54610100850182610f6f565b50610120820151610f69610120850182610f6f565b50505050565b610f788161111a565b82525050565b610f878161111a565b82525050565b6000606082019050610fa26000830186610e85565b610faf6020830185610e85565b610fbc6040830184610f7e565b949350505050565b600061014082019050610fda6000830184610ea3565b92915050565b6000602082019050610ff56000830184610f7e565b92915050565b60006110068261111a565b91506110118361111a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104657611045611124565b5b828201905092915050565b600061105c8261111a565b91506110678361111a565b92508261107757611076611153565b5b828204905092915050565b600061108d8261111a565b91506110988361111a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110d1576110d0611124565b5b828202905092915050565b60006110e7826110fa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61118b816110ee565b811461119657600080fd5b50565b6111a28161111a565b81146111ad57600080fd5b5056fea2646970667358221220eb946e97060d95e0f966fa5da7f7b18f83d51a70029357a689d508288239853f64736f6c63430008010033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063725cedd31461003b578063b6b55f2514610059575b600080fd5b610043610075565b6040516100509190610fc4565b60405180910390f35b610073600480360381019061006e9190610e33565b6107c9565b005b61007d610d74565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461022c57600054601e6100d69190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610e5c565b6101809190610ffb565b42111561022b57612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461201b6101da9190611082565b6101e49190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146103db57600054601e6102859190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ed57600080fd5b505afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103259190610e5c565b61032f9190610ffb565b4211156103da57612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610c0a6103899190611082565b6103939190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541461058e57600054602d6104349190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610e5c565b6104de9190610ffb565b42111561058957612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356105389190611082565b6105429190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b6106f3565b600054603c61059d9190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190610e5c565b6106479190610ffb565b4211156106f257612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356106a19190611082565b6106ab9190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392e0150b826040518263ffffffff1660e01b81526004016108249190610fe0565b600060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b505050506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610e5c565b90506001811415610a135781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546109559190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109bb93929190610f8d565b602060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190610e0a565b50610c43565b6002811415610b2c5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610a6e9190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ad493929190610f8d565b602060405180830381600087803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190610e0a565b50610c42565b6003811415610c415781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610b879190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bed93929190610f8d565b602060405180830381600087803b158015610c0757600080fd5b505af1158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190610e0a565b505b5b5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254610c959190610ffb565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bdecea1836040518263ffffffff1660e01b8152600401610d3e9190610fe0565b600060405180830381600087803b158015610d5857600080fd5b505af1158015610d6c573d6000803e3d6000fd5b505050505050565b60405180610140016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050610dda81611182565b92915050565b600081359050610def81611199565b92915050565b600081519050610e0481611199565b92915050565b600060208284031215610e1c57600080fd5b6000610e2a84828501610dcb565b91505092915050565b600060208284031215610e4557600080fd5b6000610e5384828501610de0565b91505092915050565b600060208284031215610e6e57600080fd5b6000610e7c84828501610df5565b91505092915050565b610e8e816110dc565b82525050565b610e9d816110ee565b82525050565b61014082016000820151610eba6000850182610e94565b506020820151610ecd6020850182610e94565b506040820151610ee06040850182610f6f565b506060820151610ef36060850182610f6f565b506080820151610f066080850182610f6f565b5060a0820151610f1960a0850182610f6f565b5060c0820151610f2c60c0850182610f6f565b5060e0820151610f3f60e0850182610f6f565b50610100820151610f54610100850182610f6f565b50610120820151610f69610120850182610f6f565b50505050565b610f788161111a565b82525050565b610f878161111a565b82525050565b6000606082019050610fa26000830186610e85565b610faf6020830185610e85565b610fbc6040830184610f7e565b949350505050565b600061014082019050610fda6000830184610ea3565b92915050565b6000602082019050610ff56000830184610f7e565b92915050565b60006110068261111a565b91506110118361111a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104657611045611124565b5b828201905092915050565b600061105c8261111a565b91506110678361111a565b92508261107757611076611153565b5b828204905092915050565b600061108d8261111a565b91506110988361111a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110d1576110d0611124565b5b828202905092915050565b60006110e7826110fa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61118b816110ee565b811461119657600080fd5b50565b6111a28161111a565b81146111ad57600080fd5b5056fea2646970667358221220eb946e97060d95e0f966fa5da7f7b18f83d51a70029357a689d508288239853f64736f6c63430008010033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:1117:14",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "70:80:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "80:22:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:14"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "89:5:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "89:13:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "80:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "138:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "111:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "111:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "111:33:14"
								}
							]
						},
						"name": "abi_decode_t_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "48:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "56:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "64:5:14",
								"type": ""
							}
						],
						"src": "7:143:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "267:485:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "313:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "322:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "325:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "315:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "315:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "315:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "288:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "297:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "284:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "284:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "309:2:14",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "280:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "280:32:14"
									},
									"nodeType": "YulIf",
									"src": "277:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "339:128:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "354:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "368:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "358:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "383:74:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "429:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "440:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "425:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "425:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "449:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "393:31:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "393:64:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "383:6:14"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "477:129:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "492:16:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "506:2:14",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "496:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "522:74:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "568:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "579:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "564:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "564:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "588:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "532:31:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:64:14"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "522:6:14"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "616:129:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "631:16:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "645:2:14",
												"type": "",
												"value": "64"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "635:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "661:74:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "707:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "718:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "703:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "703:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "727:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "671:31:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "671:64:14"
											},
											"variableNames": [
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "661:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "221:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "232:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "244:6:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "252:6:14",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "260:6:14",
								"type": ""
							}
						],
						"src": "156:596:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "803:51:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "813:35:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "842:5:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "824:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "824:24:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "813:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "785:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "795:7:14",
								"type": ""
							}
						],
						"src": "758:96:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "905:81:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "915:65:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "930:5:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "937:42:14",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "926:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "926:54:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "915:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "887:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "897:7:14",
								"type": ""
							}
						],
						"src": "860:126:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1035:79:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1092:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1101:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1104:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1094:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "1094:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1094:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1058:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1083:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "1065:17:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "1065:24:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "1055:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1055:35:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "1048:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1048:43:14"
									},
									"nodeType": "YulIf",
									"src": "1045:2:14"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1028:5:14",
								"type": ""
							}
						],
						"src": "992:122:14"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 14,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:6667:14",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "67:77:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "77:22:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "92:6:14"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "86:5:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "86:13:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "77:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "132:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_bool",
											"nodeType": "YulIdentifier",
											"src": "108:23:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "108:30:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "108:30:14"
								}
							]
						},
						"name": "abi_decode_t_bool_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "45:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "53:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "61:5:14",
								"type": ""
							}
						],
						"src": "7:137:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "202:87:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "212:29:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "234:6:14"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "221:12:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "221:20:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "212:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "277:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "250:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "250:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "250:33:14"
								}
							]
						},
						"name": "abi_decode_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "180:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "188:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "196:5:14",
								"type": ""
							}
						],
						"src": "150:139:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "358:80:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "368:22:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "383:6:14"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "377:5:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "377:13:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "368:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "426:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "399:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "399:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "399:33:14"
								}
							]
						},
						"name": "abi_decode_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "336:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "344:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "352:5:14",
								"type": ""
							}
						],
						"src": "295:143:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "518:204:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "564:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "573:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "576:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "566:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "566:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "566:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "539:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "548:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "535:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "535:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "560:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "531:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "531:32:14"
									},
									"nodeType": "YulIf",
									"src": "528:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "590:125:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "605:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "619:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "609:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "634:71:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "677:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "688:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "673:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "673:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "697:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_bool_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "644:28:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "644:61:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "634:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_bool_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "488:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "499:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "511:6:14",
								"type": ""
							}
						],
						"src": "444:278:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "794:196:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "840:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "849:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "852:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "842:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "842:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "842:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "815:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "824:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "811:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "811:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "836:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "807:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "807:32:14"
									},
									"nodeType": "YulIf",
									"src": "804:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "866:117:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "881:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "895:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "885:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "910:63:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "945:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "956:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "941:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "941:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "965:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "920:20:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "920:53:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "910:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "764:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "775:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "787:6:14",
								"type": ""
							}
						],
						"src": "728:262:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1073:207:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1119:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1128:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1131:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1121:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "1121:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1121:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1094:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1103:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1090:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1090:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1115:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1086:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1086:32:14"
									},
									"nodeType": "YulIf",
									"src": "1083:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "1145:128:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1160:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1174:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1164:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1189:74:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1235:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1246:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1231:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "1231:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1255:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1199:31:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1199:64:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1189:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1043:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1054:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1066:6:14",
								"type": ""
							}
						],
						"src": "996:284:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1351:53:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1368:3:14"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1391:5:14"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "1373:17:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1373:24:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1361:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1361:37:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1361:37:14"
								}
							]
						},
						"name": "abi_encode_t_address_to_t_address_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1339:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1346:3:14",
								"type": ""
							}
						],
						"src": "1286:118:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1459:50:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1476:3:14"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1496:5:14"
													}
												],
												"functionName": {
													"name": "cleanup_t_bool",
													"nodeType": "YulIdentifier",
													"src": "1481:14:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1481:21:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1469:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1469:34:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1469:34:14"
								}
							]
						},
						"name": "abi_encode_t_bool_to_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1447:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1454:3:14",
								"type": ""
							}
						],
						"src": "1410:99:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1687:1847:14",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1697:28:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1713:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1718:6:14",
												"type": "",
												"value": "0x0140"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1709:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1709:16:14"
									},
									"variables": [
										{
											"name": "tail",
											"nodeType": "YulTypedName",
											"src": "1701:4:14",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1735:161:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1773:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1803:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1810:4:14",
																"type": "",
																"value": "0x00"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1799:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "1799:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1793:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1793:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "1777:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "1857:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1875:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1880:4:14",
																"type": "",
																"value": "0x00"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1871:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "1871:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool",
													"nodeType": "YulIdentifier",
													"src": "1829:27:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1829:57:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1829:57:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1906:161:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1944:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1974:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1981:4:14",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1970:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "1970:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1964:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1964:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "1948:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2028:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2046:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2051:4:14",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2042:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2042:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool",
													"nodeType": "YulIdentifier",
													"src": "2000:27:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2000:57:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2000:57:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2077:172:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2120:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2150:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2157:4:14",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2146:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2146:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2140:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2140:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2124:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2210:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2228:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2233:4:14",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2224:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2224:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2176:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2176:63:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2176:63:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2259:172:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2302:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2332:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2339:4:14",
																"type": "",
																"value": "0x60"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2328:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2328:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2322:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2322:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2306:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2392:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2410:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2415:4:14",
																"type": "",
																"value": "0x60"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2406:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2406:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2358:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2358:63:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2358:63:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2441:172:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2484:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2514:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2521:4:14",
																"type": "",
																"value": "0x80"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2510:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2510:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2504:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2504:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2488:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2574:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2592:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2597:4:14",
																"type": "",
																"value": "0x80"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2588:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2588:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2540:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2540:63:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2540:63:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2623:172:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2666:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2696:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2703:4:14",
																"type": "",
																"value": "0xa0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2692:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2692:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2686:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2686:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2670:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2756:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2774:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2779:4:14",
																"type": "",
																"value": "0xa0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2770:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2770:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2722:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2722:63:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2722:63:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2805:172:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2848:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2878:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2885:4:14",
																"type": "",
																"value": "0xc0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2874:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2874:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2868:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2868:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2852:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2938:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2956:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2961:4:14",
																"type": "",
																"value": "0xc0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2952:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2952:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2904:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2904:63:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2904:63:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2987:172:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3030:43:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3060:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3067:4:14",
																"type": "",
																"value": "0xe0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3056:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "3056:16:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3050:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3050:23:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "3034:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "3120:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3138:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3143:4:14",
																"type": "",
																"value": "0xe0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3134:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "3134:14:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3086:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3086:63:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3086:63:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "3169:170:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3206:45:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3236:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3243:6:14",
																"type": "",
																"value": "0x0100"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3232:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "3232:18:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3226:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3226:25:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "3210:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "3298:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3316:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3321:6:14",
																"type": "",
																"value": "0x0100"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3312:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "3312:16:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3264:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3264:65:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3264:65:14"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "3349:178:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3394:45:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3424:5:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3431:6:14",
																"type": "",
																"value": "0x0120"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3420:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "3420:18:14"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3414:5:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3414:25:14"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "3398:12:14",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "3486:12:14"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3504:3:14"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3509:6:14",
																"type": "",
																"value": "0x0120"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3500:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "3500:16:14"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3452:33:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3452:65:14"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3452:65:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1674:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1681:3:14",
								"type": ""
							}
						],
						"src": "1573:1961:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3595:53:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3612:3:14"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3635:5:14"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3617:17:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3617:24:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3605:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3605:37:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3605:37:14"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "3583:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3590:3:14",
								"type": ""
							}
						],
						"src": "3540:108:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3719:53:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3736:3:14"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3759:5:14"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3741:17:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3741:24:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3729:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3729:37:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3729:37:14"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "3707:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3714:3:14",
								"type": ""
							}
						],
						"src": "3654:118:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3932:288:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3942:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3954:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3965:2:14",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3950:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3950:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3942:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4022:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4035:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4046:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4031:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4031:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3978:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3978:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3978:71:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "4103:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4116:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4127:2:14",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4112:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4112:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4059:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4059:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4059:72:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "4185:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4198:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4209:2:14",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4194:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4194:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4141:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4141:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4141:72:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3888:9:14",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "3900:6:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "3908:6:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3916:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3927:4:14",
								"type": ""
							}
						],
						"src": "3778:442:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4372:173:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4382:27:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4394:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4405:3:14",
												"type": "",
												"value": "320"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4390:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4390:19:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4382:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4511:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4524:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4535:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4520:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4520:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4419:91:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4419:119:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4419:119:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_struct$_UserData_$31_memory_ptr__to_t_struct$_UserData_$31_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4344:9:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "4356:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4367:4:14",
								"type": ""
							}
						],
						"src": "4226:319:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4649:124:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4659:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4671:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4682:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4667:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4667:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4659:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4739:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4752:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4763:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4748:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4748:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4695:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4695:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4695:71:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4621:9:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "4633:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4644:4:14",
								"type": ""
							}
						],
						"src": "4551:222:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4823:261:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4833:25:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "4856:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "4838:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4838:20:14"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "4833:1:14"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "4867:25:14",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "4890:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "4872:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4872:20:14"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "4867:1:14"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5030:22:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "5032:16:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "5032:18:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5032:18:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "4951:1:14"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4958:66:14",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5026:1:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "4954:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4954:74:14"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "4948:2:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4948:81:14"
									},
									"nodeType": "YulIf",
									"src": "4945:2:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5062:16:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5073:1:14"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5076:1:14"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5069:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5069:9:14"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "5062:3:14"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "4810:1:14",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "4813:1:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "4819:3:14",
								"type": ""
							}
						],
						"src": "4779:305:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5132:143:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5142:25:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5165:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "5147:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5147:20:14"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "5142:1:14"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "5176:25:14",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5199:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "5181:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5181:20:14"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "5176:1:14"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5223:22:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x12",
														"nodeType": "YulIdentifier",
														"src": "5225:16:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "5225:18:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5225:18:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5220:1:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "5213:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5213:9:14"
									},
									"nodeType": "YulIf",
									"src": "5210:2:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5255:14:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5264:1:14"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5267:1:14"
											}
										],
										"functionName": {
											"name": "div",
											"nodeType": "YulIdentifier",
											"src": "5260:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5260:9:14"
									},
									"variableNames": [
										{
											"name": "r",
											"nodeType": "YulIdentifier",
											"src": "5255:1:14"
										}
									]
								}
							]
						},
						"name": "checked_div_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "5121:1:14",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "5124:1:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "r",
								"nodeType": "YulTypedName",
								"src": "5130:1:14",
								"type": ""
							}
						],
						"src": "5090:185:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5329:300:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5339:25:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5362:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "5344:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5344:20:14"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "5339:1:14"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "5373:25:14",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5396:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "5378:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5378:20:14"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "5373:1:14"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5571:22:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "5573:16:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "5573:18:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5573:18:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "5483:1:14"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "5476:6:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "5476:9:14"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "5469:6:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5469:17:14"
											},
											{
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5491:1:14"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5498:66:14",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "5566:1:14"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "5494:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "5494:74:14"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5488:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5488:81:14"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "5465:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5465:105:14"
									},
									"nodeType": "YulIf",
									"src": "5462:2:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5603:20:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5618:1:14"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5621:1:14"
											}
										],
										"functionName": {
											"name": "mul",
											"nodeType": "YulIdentifier",
											"src": "5614:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5614:9:14"
									},
									"variableNames": [
										{
											"name": "product",
											"nodeType": "YulIdentifier",
											"src": "5603:7:14"
										}
									]
								}
							]
						},
						"name": "checked_mul_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "5312:1:14",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "5315:1:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "product",
								"nodeType": "YulTypedName",
								"src": "5321:7:14",
								"type": ""
							}
						],
						"src": "5281:348:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5680:51:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5690:35:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "5719:5:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "5701:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5701:24:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5690:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5662:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5672:7:14",
								"type": ""
							}
						],
						"src": "5635:96:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5779:48:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5789:32:14",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5814:5:14"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "5807:6:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5807:13:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "5800:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5800:21:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5789:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5761:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5771:7:14",
								"type": ""
							}
						],
						"src": "5737:90:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5878:81:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5888:65:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "5903:5:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5910:42:14",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "5899:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5899:54:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5888:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5860:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5870:7:14",
								"type": ""
							}
						],
						"src": "5833:126:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6010:32:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6020:16:14",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "6031:5:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6020:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5992:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6002:7:14",
								"type": ""
							}
						],
						"src": "5965:77:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6076:152:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6093:1:14",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6096:77:14",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6086:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6086:88:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6086:88:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6190:1:14",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6193:4:14",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6183:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6183:15:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6183:15:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6214:1:14",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6217:4:14",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "6207:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6207:15:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6207:15:14"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "6048:180:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6262:152:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6279:1:14",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6282:77:14",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6272:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6272:88:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6272:88:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6376:1:14",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6379:4:14",
												"type": "",
												"value": "0x12"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6369:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6369:15:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6369:15:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6400:1:14",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6403:4:14",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "6393:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6393:15:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6393:15:14"
								}
							]
						},
						"name": "panic_error_0x12",
						"nodeType": "YulFunctionDefinition",
						"src": "6234:180:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6460:76:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6514:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6523:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6526:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "6516:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "6516:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6516:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6483:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6505:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "6490:14:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "6490:21:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "6480:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "6480:32:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "6473:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6473:40:14"
									},
									"nodeType": "YulIf",
									"src": "6470:2:14"
								}
							]
						},
						"name": "validator_revert_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6453:5:14",
								"type": ""
							}
						],
						"src": "6420:116:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6585:79:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6642:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6651:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6654:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "6644:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "6644:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6644:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6608:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6633:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "6615:17:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "6615:24:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "6605:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "6605:35:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "6598:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6598:43:14"
									},
									"nodeType": "YulIf",
									"src": "6595:2:14"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6578:5:14",
								"type": ""
							}
						],
						"src": "6542:122:14"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Staking.UserData -> struct Staking.UserData\n    function abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // allowed\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // created\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // level1Tokens\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // level2Tokens\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // level3Tokens\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // level1Reward\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // level2Reward\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // level3Reward\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // tokens\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // lastUpdateDate\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_struct$_UserData_$31_memory_ptr__to_t_struct$_UserData_$31_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 14,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "167:2256:0:-:0;;;204:12;187:29;;2214:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2328:8;2303:7;;:34;;;;;;;;;;;;;;;;;;2363:13;2341:12;;:36;;;;;;;;;;;;;;;;;;2403:13;2381:12;;:36;;;;;;;;;;;;;;;;;;2214:207;;;167:2256;;7:143:14;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:596::-;;;;309:2;297:9;288:7;284:23;280:32;277:2;;;325:1;322;315:12;277:2;368:1;393:64;449:7;440:6;429:9;425:22;393:64;:::i;:::-;383:74;;339:128;506:2;532:64;588:7;579:6;568:9;564:22;532:64;:::i;:::-;522:74;;477:129;645:2;671:64;727:7;718:6;707:9;703:22;671:64;:::i;:::-;661:74;;616:129;267:485;;;;;:::o;758:96::-;;824:24;842:5;824:24;:::i;:::-;813:35;;803:51;;;:::o;860:126::-;;937:42;930:5;926:54;915:65;;905:81;;;:::o;992:122::-;1065:24;1083:5;1065:24;:::i;:::-;1058:5;1055:35;1045:2;;1104:1;1101;1094:12;1045:2;1035:79;:::o;167:2256:0:-;;;;;;;",
	"deployedSourceMap": "167:2256:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:875;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;590:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1336:875;1379:20;;:::i;:::-;1443:1;1409:5;:17;1415:10;1409:17;;;;;;;;;;;;;;;:30;;;:35;1405:201;;1500:6;;1495:2;:11;;;;:::i;:::-;1473:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1455:15;:51;1451:151;;;1591:5;1556;:17;1562:10;1556:17;;;;;;;;;;;;;;;:30;;;1549:4;:37;;;;:::i;:::-;1547:49;;;;:::i;:::-;1514:5;:17;1520:10;1514:17;;;;;;;;;;;;;;;:30;;:82;;;;1451:151;1405:201;1647:1;1613:5;:17;1619:10;1613:17;;;;;;;;;;;;;;;:30;;;:35;1609:201;;1704:6;;1699:2;:11;;;;:::i;:::-;1677:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1659:15;:51;1655:151;;;1795:5;1760;:17;1766:10;1760:17;;;;;;;;;;;;;;;:30;;;1753:4;:37;;;;:::i;:::-;1751:49;;;;:::i;:::-;1718:5;:17;1724:10;1718:17;;;;;;;;;;;;;;;:30;;:82;;;;1655:151;1609:201;1851:1;1817:5;:17;1823:10;1817:17;;;;;;;;;;;;;;;:30;;;:35;1813:367;;1908:6;;1903:2;:11;;;;:::i;:::-;1881:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1863:15;:51;1859:151;;;1999:5;1964;:17;1970:10;1964:17;;;;;;;;;;;;;;;:30;;;1957:4;:37;;;;:::i;:::-;1955:49;;;;:::i;:::-;1922:5;:17;1928:10;1922:17;;;;;;;;;;;;;;;:30;;:82;;;;1859:151;1813:367;;;2074:6;;2069:2;:11;;;;:::i;:::-;2047:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;2029:15;:51;2025:151;;;2165:5;2130;:17;2136:10;2130:17;;;;;;;;;;;;;;;:30;;;2123:4;:37;;;;:::i;:::-;2121:49;;;;:::i;:::-;2088:5;:17;2094:10;2088:17;;;;;;;;;;;;;;;:30;;:82;;;;2025:151;1813:367;2190:5;:17;2196:10;2190:17;;;;;;;;;;;;;;;2183:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:875;:::o;590:743::-;735:7;;;;;;;;;;;:19;;;755:6;735:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:13;782:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;766:31;;814:1;805:5;:10;801:405;;;856:6;822:5;:17;828:10;822:17;;;;;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;;;;;867:12;;;;;;;;;;;:25;;;893:10;913:4;920:6;867:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;801:405;;;951:1;942:5;:10;938:268;;;993:6;959:5;:17;965:10;959:17;;;;;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;;;;;1004:12;;;;;;;;;;;:25;;;1030:10;1050:4;1057:6;1004:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;938:268;;;1088:1;1079:5;:10;1075:131;;;1130:6;1096:5;:17;1102:10;1096:17;;;;;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;;;;;1141:12;;;;;;;;;;;:25;;;1167:10;1187:4;1194:6;1141:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1075:131;938:268;801:405;1237:6;1209:5;:17;1215:10;1209:17;;;;;;;;;;;;;;;:24;;;:34;;;;;;;:::i;:::-;;;;;;;;1282:15;1247:5;:17;1253:10;1247:17;;;;;;;;;;;;;;;:32;;:50;;;;1301:7;;;;;;;;;;;:20;;;1322:6;1301:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:743;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:137:14:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:143::-;;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;358:80;;;;:::o;444:278::-;;560:2;548:9;539:7;535:23;531:32;528:2;;;576:1;573;566:12;528:2;619:1;644:61;697:7;688:6;677:9;673:22;644:61;:::i;:::-;634:71;;590:125;518:204;;;;:::o;728:262::-;;836:2;824:9;815:7;811:23;807:32;804:2;;;852:1;849;842:12;804:2;895:1;920:53;965:7;956:6;945:9;941:22;920:53;:::i;:::-;910:63;;866:117;794:196;;;;:::o;996:284::-;;1115:2;1103:9;1094:7;1090:23;1086:32;1083:2;;;1131:1;1128;1121:12;1083:2;1174:1;1199:64;1255:7;1246:6;1235:9;1231:22;1199:64;:::i;:::-;1189:74;;1145:128;1073:207;;;;:::o;1286:118::-;1373:24;1391:5;1373:24;:::i;:::-;1368:3;1361:37;1351:53;;:::o;1410:99::-;1481:21;1496:5;1481:21;:::i;:::-;1476:3;1469:34;1459:50;;:::o;1573:1961::-;1718:6;1713:3;1709:16;1810:4;1803:5;1799:16;1793:23;1829:57;1880:4;1875:3;1871:14;1857:12;1829:57;:::i;:::-;1735:161;1981:4;1974:5;1970:16;1964:23;2000:57;2051:4;2046:3;2042:14;2028:12;2000:57;:::i;:::-;1906:161;2157:4;2150:5;2146:16;2140:23;2176:63;2233:4;2228:3;2224:14;2210:12;2176:63;:::i;:::-;2077:172;2339:4;2332:5;2328:16;2322:23;2358:63;2415:4;2410:3;2406:14;2392:12;2358:63;:::i;:::-;2259:172;2521:4;2514:5;2510:16;2504:23;2540:63;2597:4;2592:3;2588:14;2574:12;2540:63;:::i;:::-;2441:172;2703:4;2696:5;2692:16;2686:23;2722:63;2779:4;2774:3;2770:14;2756:12;2722:63;:::i;:::-;2623:172;2885:4;2878:5;2874:16;2868:23;2904:63;2961:4;2956:3;2952:14;2938:12;2904:63;:::i;:::-;2805:172;3067:4;3060:5;3056:16;3050:23;3086:63;3143:4;3138:3;3134:14;3120:12;3086:63;:::i;:::-;2987:172;3243:6;3236:5;3232:18;3226:25;3264:65;3321:6;3316:3;3312:16;3298:12;3264:65;:::i;:::-;3169:170;3431:6;3424:5;3420:18;3414:25;3452:65;3509:6;3504:3;3500:16;3486:12;3452:65;:::i;:::-;3349:178;1687:1847;;;:::o;3540:108::-;3617:24;3635:5;3617:24;:::i;:::-;3612:3;3605:37;3595:53;;:::o;3654:118::-;3741:24;3759:5;3741:24;:::i;:::-;3736:3;3729:37;3719:53;;:::o;3778:442::-;;3965:2;3954:9;3950:18;3942:26;;3978:71;4046:1;4035:9;4031:17;4022:6;3978:71;:::i;:::-;4059:72;4127:2;4116:9;4112:18;4103:6;4059:72;:::i;:::-;4141;4209:2;4198:9;4194:18;4185:6;4141:72;:::i;:::-;3932:288;;;;;;:::o;4226:319::-;;4405:3;4394:9;4390:19;4382:27;;4419:119;4535:1;4524:9;4520:17;4511:6;4419:119;:::i;:::-;4372:173;;;;:::o;4551:222::-;;4682:2;4671:9;4667:18;4659:26;;4695:71;4763:1;4752:9;4748:17;4739:6;4695:71;:::i;:::-;4649:124;;;;:::o;4779:305::-;;4838:20;4856:1;4838:20;:::i;:::-;4833:25;;4872:20;4890:1;4872:20;:::i;:::-;4867:25;;5026:1;4958:66;4954:74;4951:1;4948:81;4945:2;;;5032:18;;:::i;:::-;4945:2;5076:1;5073;5069:9;5062:16;;4823:261;;;;:::o;5090:185::-;;5147:20;5165:1;5147:20;:::i;:::-;5142:25;;5181:20;5199:1;5181:20;:::i;:::-;5176:25;;5220:1;5210:2;;5225:18;;:::i;:::-;5210:2;5267:1;5264;5260:9;5255:14;;5132:143;;;;:::o;5281:348::-;;5344:20;5362:1;5344:20;:::i;:::-;5339:25;;5378:20;5396:1;5378:20;:::i;:::-;5373:25;;5566:1;5498:66;5494:74;5491:1;5488:81;5483:1;5476:9;5469:17;5465:105;5462:2;;;5573:18;;:::i;:::-;5462:2;5621:1;5618;5614:9;5603:20;;5329:300;;;;:::o;5635:96::-;;5701:24;5719:5;5701:24;:::i;:::-;5690:35;;5680:51;;;:::o;5737:90::-;;5814:5;5807:13;5800:21;5789:32;;5779:48;;;:::o;5833:126::-;;5910:42;5903:5;5899:54;5888:65;;5878:81;;;:::o;5965:77::-;;6031:5;6020:16;;6010:32;;;:::o;6048:180::-;6096:77;6093:1;6086:88;6193:4;6190:1;6183:15;6217:4;6214:1;6207:15;6234:180;6282:77;6279:1;6272:88;6379:4;6376:1;6369:15;6403:4;6400:1;6393:15;6420:116;6490:21;6505:5;6490:21;:::i;:::-;6483:5;6480:32;6470:2;;6526:1;6523;6516:12;6470:2;6460:76;:::o;6542:122::-;6615:24;6633:5;6615:24;:::i;:::-;6608:5;6605:35;6595:2;;6654:1;6651;6644:12;6595:2;6585:79;:::o",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\ncontract Staking {\n\tuint256 oneDay = 24 * 60 * 60;\n\tstruct UserData {\n\t\tbool allowed;\n\t\tbool created;\n\t\tuint256 level1Tokens;\n\t\tuint256 level2Tokens;\n\t\tuint256 level3Tokens;\n\t\tuint256 level1Reward;\n\t\tuint256 level2Reward;\n\t\tuint256 level3Reward;\n\t\t//\n\t\t//\n\t\tuint256 tokens;\n\t\t//\n\t\t//\n\t\tuint256 lastUpdateDate;\n\t}\n\n\tmapping(address => UserData) users;\n\n\tStakingFactory factory;\n\tIERC20 rewardsToken;\n\tIERC20 stakingToken;\n\n\tfunction deposit(uint256 amount) public {\n\t\t// \t\trequire(users[msg.sender].allowed);\n\t\t// TODO:add fix for update only if success and succeds.\n\t\tfactory.updateLevel(amount);\n\t\tuint256 level = factory.level();\n\t\tif (level == 1) {\n\t\t\tusers[msg.sender].level1Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 2) {\n\t\t\tusers[msg.sender].level2Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 3) {\n\t\t\tusers[msg.sender].level3Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t}\n\t\tusers[msg.sender].tokens += amount;\n\t\tusers[msg.sender].lastUpdateDate = block.timestamp;\n\t\tfactory.updateTokens(amount);\n\t}\n\n\tfunction calculateReward() public returns (UserData memory user) {\n\t\tif (users[msg.sender].level1Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level1Reward = ((8219 * users[msg.sender].level1Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level2Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level2Reward = ((3082 * users[msg.sender].level2Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level3Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 45 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 10000;\n\t\t\t}\n\t\t} else {\n\t\t\tif (block.timestamp > factory.startTime() + 60 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\treturn users[msg.sender];\n\t}\n\n\tconstructor(\n\t\taddress _factory,\n\t\taddress _rewardsToken,\n\t\taddress _stakingToken\n\t) {\n\t\tfactory = StakingFactory(_factory);\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstakingToken = IERC20(_stakingToken);\n\t}\n}\n\ncontract StakingFactory is Ownable {\n\tIERC20 rewardsToken;\n\tuint256 public startTime;\n\tuint256 public level;\n\taddress[] public stakingTokens;\n\n\tstruct StakingRewardsInfo {\n\t\taddress stakingRewards;\n\t\tuint256 rewardAmount;\n\t}\n\n\t// rewards info by staking token\n\tmapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\n\n\tstruct LevelData {\n\t\tuint256 allowedForXCoins;\n\t\tuint256 rewardPercentTimes100;\n\t\tuint256 lockedDuration;\n\t\tuint256 allowedReward;\n\t\tuint256 alloted;\n\t}\n\n\tmapping(uint256 => LevelData) public levels;\n\n\tfunction createLevels() internal onlyOwner {\n\t\tlevels[1] = LevelData(300000, 8219, 30, 246575, 0);\n\t\tlevels[2] = LevelData(600000, 3082, 45, 184932, 0);\n\t\tlevels[3] = LevelData(1000000, 2630, 60, 263014, 0);\n\n\t\tlevel = 1;\n\t}\n\n\tfunction updateLevel(uint256 tokenValue) public {\n\t\tif (levels[level].alloted >= levels[level].allowedForXCoins) {\n\t\t\tlevel += 1;\n\t\t}\n\t}\n\n\tfunction updateTokens(uint256 tokenValue) public {\n\t\tlevels[level].alloted += tokenValue;\n\t}\n\n\tconstructor(address _rewardsToken, uint256 _startTime) {\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstartTime = _startTime;\n\t\tlevel = 1;\n\t\tcreateLevels();\n\t}\n\n\tfunction deploy(address stakingToken, uint256 rewardAmount) public onlyOwner {\n\t\tStakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\n\t\trequire(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\n\n\t\tinfo.stakingRewards = address(new Staking(address(this), address(rewardsToken), stakingToken));\n\t\tinfo.rewardAmount = rewardAmount;\n\t\tstakingTokens.push(stakingToken);\n\t}\n}\n",
	"sourcePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
	"ast": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1444],
			"ERC20": [1343],
			"IERC20": [1421],
			"Ownable": [842],
			"Staking": [350],
			"StakingFactory": [555]
		},
		"id": 556,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 1344,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 843,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 350,
				"linearizedBaseContracts": [350],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 350,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$555",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 555,
								"src": "520:14:0"
							},
							"referencedDeclaration": 555,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$555",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 160,
							"nodeType": "Block",
							"src": "630:703:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 53,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "755:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 50,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "735:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateLevel",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 455,
											"src": "735:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 55,
									"nodeType": "ExpressionStatement",
									"src": "735:27:0"
								},
								{
									"assignments": [57],
									"declarations": [
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 160,
											"src": "766:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 56,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 61,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 58,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "782:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 59,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 359,
											"src": "782:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "782:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "766:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 62,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 57,
											"src": "805:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 63,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "814:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "805:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 88,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 86,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 57,
												"src": "942:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 87,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "951:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "942:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 112,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 110,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "1079:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1088:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "1079:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 134,
											"nodeType": "IfStatement",
											"src": "1075:131:0",
											"trueBody": {
												"id": 133,
												"nodeType": "Block",
												"src": "1091:115:0",
												"statements": [
													{
														"expression": {
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 113,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 116,
																	"indexExpression": {
																		"expression": {
																			"id": 114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1102:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1102:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1096:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1096:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1096:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 120,
														"nodeType": "ExpressionStatement",
														"src": "1096:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 124,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1167:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 128,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1187:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1179:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 126,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1179:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1179:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 130,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1194:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1141:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "1141:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1141:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 132,
														"nodeType": "ExpressionStatement",
														"src": "1141:60:0"
													}
												]
											}
										},
										"id": 135,
										"nodeType": "IfStatement",
										"src": "938:268:0",
										"trueBody": {
											"id": 109,
											"nodeType": "Block",
											"src": "954:115:0",
											"statements": [
												{
													"expression": {
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 89,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "959:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 92,
																"indexExpression": {
																	"expression": {
																		"id": 90,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "965:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "965:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "959:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 94,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "959:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 96,
													"nodeType": "ExpressionStatement",
													"src": "959:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1030:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1030:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 104,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1050:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1042:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1042:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1042:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 106,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 97,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1004:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1421",
																	"typeString": "contract IERC20"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1402,
															"src": "1004:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1004:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 108,
													"nodeType": "ExpressionStatement",
													"src": "1004:60:0"
												}
											]
										}
									},
									"id": 136,
									"nodeType": "IfStatement",
									"src": "801:405:0",
									"trueBody": {
										"id": 85,
										"nodeType": "Block",
										"src": "817:115:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 65,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 68,
															"indexExpression": {
																"expression": {
																	"id": 66,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "828:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "822:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "822:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 70,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "822:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "822:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "893:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "893:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 80,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "913:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "905:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 78,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "905:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "905:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 73,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "867:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1421",
																"typeString": "contract IERC20"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "867:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "867:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 137,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 140,
												"indexExpression": {
													"expression": {
														"id": 138,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1215:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1215:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1209:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 141,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1209:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 142,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1237:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1209:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 144,
									"nodeType": "ExpressionStatement",
									"src": "1209:34:0"
								},
								{
									"expression": {
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 145,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 148,
												"indexExpression": {
													"expression": {
														"id": 146,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1253:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1253:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1247:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 149,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1247:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 150,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1282:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1282:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1247:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 153,
									"nodeType": "ExpressionStatement",
									"src": "1247:50:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 157,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1322:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 154,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1301:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 156,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateTokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 468,
											"src": "1301:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1301:28:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 159,
									"nodeType": "ExpressionStatement",
									"src": "1301:28:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 161,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 350,
						"src": "590:743:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 320,
							"nodeType": "Block",
							"src": "1401:810:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 167,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 170,
												"indexExpression": {
													"expression": {
														"id": 168,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1415:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1415:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1409:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 171,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1409:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1443:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1409:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 205,
									"nodeType": "IfStatement",
									"src": "1405:201:0",
									"trueBody": {
										"id": 204,
										"nodeType": "Block",
										"src": "1446:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 174,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1455:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 176,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1473:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1473:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1495:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 180,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1495:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1473:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1455:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1451:151:0",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "1508:94:0",
													"statements": [
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 184,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1514:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 187,
																		"indexExpression": {
																			"expression": {
																				"id": 185,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1520:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1520:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1514:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1514:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1549:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 190,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1556:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 193,
																								"indexExpression": {
																									"expression": {
																										"id": 191,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1562:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 192,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1562:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1556:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 194,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1556:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1549:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 196,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1548:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1547:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1591:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1547:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1514:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "1514:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 206,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1613:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 209,
												"indexExpression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1619:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1613:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 210,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1613:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 211,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1647:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1613:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 244,
									"nodeType": "IfStatement",
									"src": "1609:201:0",
									"trueBody": {
										"id": 243,
										"nodeType": "Block",
										"src": "1650:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1659:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 215,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1677:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 219,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1677:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1659:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "IfStatement",
												"src": "1655:151:0",
												"trueBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "1712:94:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 223,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1718:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 226,
																		"indexExpression": {
																			"expression": {
																				"id": 224,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1724:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1724:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1718:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1718:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1753:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 229,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1760:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 232,
																								"indexExpression": {
																									"expression": {
																										"id": 230,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1766:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 231,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1766:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1760:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 233,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1760:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1753:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 235,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1752:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 236,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1751:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1795:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1751:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1718:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "1718:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 245,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 248,
												"indexExpression": {
													"expression": {
														"id": 246,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1823:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1823:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1817:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 249,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1817:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 250,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1851:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1817:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 313,
										"nodeType": "Block",
										"src": "2020:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 283,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2029:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2029:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 285,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "2047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "2047:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2069:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 289,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2069:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2047:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2029:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "2025:151:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "2082:94:0",
													"statements": [
														{
															"expression": {
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 293,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "2088:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 296,
																		"indexExpression": {
																			"expression": {
																				"id": 294,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2094:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2094:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2088:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "2088:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 298,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2123:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 299,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "2130:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 302,
																								"indexExpression": {
																									"expression": {
																										"id": 300,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2136:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2136:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2130:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 303,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "2130:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2123:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 305,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2122:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 306,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2121:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2165:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "2121:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2088:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "2088:82:0"
														}
													]
												}
											}
										]
									},
									"id": 314,
									"nodeType": "IfStatement",
									"src": "1813:367:0",
									"trueBody": {
										"id": 282,
										"nodeType": "Block",
										"src": "1854:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 252,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1863:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 254,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1881:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1881:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1903:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 258,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1903:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1881:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1863:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "1859:151:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "1916:94:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 262,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1922:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 265,
																		"indexExpression": {
																			"expression": {
																				"id": 263,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1928:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1922:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1922:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1957:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 268,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1964:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 271,
																								"indexExpression": {
																									"expression": {
																										"id": 269,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1970:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 270,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1970:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1964:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 272,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1964:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1957:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 274,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1956:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 275,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1955:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1955:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1922:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "1922:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 315,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2190:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 318,
										"indexExpression": {
											"expression": {
												"id": 316,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2196:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 317,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2196:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2190:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 166,
									"id": 319,
									"nodeType": "Return",
									"src": "2183:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 321,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 162,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1360:2:0"
						},
						"returnParameters": {
							"id": 166,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 321,
									"src": "1379:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1379:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1379:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1378:22:0"
						},
						"scope": 350,
						"src": "1336:875:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 348,
							"nodeType": "Block",
							"src": "2299:122:0",
							"statements": [
								{
									"expression": {
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 330,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 332,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "2328:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 331,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 555,
												"src": "2313:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$555_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2313:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2303:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$555",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 335,
									"nodeType": "ExpressionStatement",
									"src": "2303:34:0"
								},
								{
									"expression": {
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 336,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2341:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 338,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 325,
													"src": "2363:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 337,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2356:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 339,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2356:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2341:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 341,
									"nodeType": "ExpressionStatement",
									"src": "2341:36:0"
								},
								{
									"expression": {
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 342,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2381:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 344,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "2403:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 343,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2396:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 345,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2396:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2381:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 347,
									"nodeType": "ExpressionStatement",
									"src": "2381:36:0"
								}
							]
						},
						"id": 349,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 328,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2229:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2229:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2249:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 324,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2249:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2274:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2274:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2225:73:0"
						},
						"returnParameters": {
							"id": 329,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2299:0:0"
						},
						"scope": 350,
						"src": "2214:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "167:2256:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 351,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 842,
							"src": "2452:7:0"
						},
						"id": 352,
						"nodeType": "InheritanceSpecifier",
						"src": "2452:7:0"
					}
				],
				"contractDependencies": [350, 842, 1444],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 555,
				"linearizedBaseContracts": [555, 842, 1444],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 355,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2463:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 354,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 353,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "2463:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "2463:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 357,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2485:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 356,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2485:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 359,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2512:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 358,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2512:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 362,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2535:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 360,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2535:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 361,
							"nodeType": "ArrayTypeName",
							"src": "2535:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 367,
						"members": [
							{
								"constant": false,
								"id": 364,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2599:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 363,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2599:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 366,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2625:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 365,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2625:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2569:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 372,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2686:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 371,
							"keyType": {
								"id": 368,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2694:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2686:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 370,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 369,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 367,
									"src": "2705:18:0"
								},
								"referencedDeclaration": 367,
								"src": "2705:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 383,
						"members": [
							{
								"constant": false,
								"id": 374,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2789:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 373,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2789:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 376,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2817:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 375,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2817:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 378,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2850:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 377,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2850:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 380,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2876:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 379,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2876:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 382,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2901:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 381,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2901:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2768:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "b2596a67",
						"id": 388,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2923:43:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
							"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 387,
							"keyType": {
								"id": 384,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2931:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"nodeType": "Mapping",
							"src": "2923:29:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
								"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 386,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 385,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 383,
									"src": "2942:9:0"
								},
								"referencedDeclaration": 383,
								"src": "2942:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$383_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 433,
							"nodeType": "Block",
							"src": "3013:181:0",
							"statements": [
								{
									"expression": {
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 393,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3017:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 395,
											"indexExpression": {
												"hexValue": "31",
												"id": 394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3024:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3017:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3053:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												},
												{
													"hexValue": "30",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3065:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 396,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3029:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3029:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3017:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 404,
									"nodeType": "ExpressionStatement",
									"src": "3017:50:0"
								},
								{
									"expression": {
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 405,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3071:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 407,
											"indexExpression": {
												"hexValue": "32",
												"id": 406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3078:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3071:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3107:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												},
												{
													"hexValue": "30",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3119:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 408,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3083:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 414,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3083:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3071:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 416,
									"nodeType": "ExpressionStatement",
									"src": "3071:50:0"
								},
								{
									"expression": {
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 417,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3125:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 419,
											"indexExpression": {
												"hexValue": "33",
												"id": 418,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3132:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3125:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3162:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												},
												{
													"hexValue": "30",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3174:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 420,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3137:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3137:39:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3125:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 428,
									"nodeType": "ExpressionStatement",
									"src": "3125:51:0"
								},
								{
									"expression": {
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 429,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3181:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 430,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3189:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3181:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 432,
									"nodeType": "ExpressionStatement",
									"src": "3181:9:0"
								}
							]
						},
						"id": 434,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 391,
								"modifierName": {
									"id": 390,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3003:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3003:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 389,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2991:2:0"
						},
						"returnParameters": {
							"id": 392,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3013:0:0"
						},
						"scope": 555,
						"src": "2970:224:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 454,
							"nodeType": "Block",
							"src": "3245:88:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 439,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 441,
												"indexExpression": {
													"id": 440,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3253:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 442,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3253:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"expression": {
												"baseExpression": {
													"id": 443,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 445,
												"indexExpression": {
													"id": 444,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3278:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 446,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "allowedForXCoins",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 374,
											"src": "3278:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3253:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 453,
									"nodeType": "IfStatement",
									"src": "3249:81:0",
									"trueBody": {
										"id": 452,
										"nodeType": "Block",
										"src": "3310:20:0",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3315:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3315:10:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "92e0150b",
						"id": 455,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateLevel",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 437,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3218:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3218:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3217:20:0"
						},
						"returnParameters": {
							"id": 438,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3245:0:0"
						},
						"scope": 555,
						"src": "3197:136:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 467,
							"nodeType": "Block",
							"src": "3385:43:0",
							"statements": [
								{
									"expression": {
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 460,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 462,
												"indexExpression": {
													"id": 461,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3389:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 463,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3389:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 464,
											"name": "tokenValue",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 457,
											"src": "3414:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3389:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 466,
									"nodeType": "ExpressionStatement",
									"src": "3389:35:0"
								}
							]
						},
						"functionSelector": "7bdecea1",
						"id": 468,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateTokens",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 458,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3358:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3357:20:0"
						},
						"returnParameters": {
							"id": 459,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3385:0:0"
						},
						"scope": 555,
						"src": "3336:92:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 492,
							"nodeType": "Block",
							"src": "3486:101:0",
							"statements": [
								{
									"expression": {
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 475,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3490:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 477,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "3512:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 476,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "3505:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 478,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3505:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "3490:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 480,
									"nodeType": "ExpressionStatement",
									"src": "3490:36:0"
								},
								{
									"expression": {
										"id": 483,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 481,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 357,
											"src": "3530:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 482,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 472,
											"src": "3542:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3530:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 484,
									"nodeType": "ExpressionStatement",
									"src": "3530:22:0"
								},
								{
									"expression": {
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 485,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3556:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 486,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3564:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3556:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 488,
									"nodeType": "ExpressionStatement",
									"src": "3556:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 489,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 434,
											"src": "3569:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3569:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 491,
									"nodeType": "ExpressionStatement",
									"src": "3569:14:0"
								}
							]
						},
						"id": 493,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 473,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 470,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3443:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3443:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3466:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3442:43:0"
						},
						"returnParameters": {
							"id": 474,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3486:0:0"
						},
						"scope": 555,
						"src": "3431:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 553,
							"nodeType": "Block",
							"src": "3667:356:0",
							"statements": [
								{
									"assignments": [504],
									"declarations": [
										{
											"constant": false,
											"id": 504,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "3671:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 503,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 502,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 367,
													"src": "3671:18:0"
												},
												"referencedDeclaration": 367,
												"src": "3671:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 508,
									"initialValue": {
										"baseExpression": {
											"id": 505,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 372,
											"src": "3705:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 507,
										"indexExpression": {
											"id": 506,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 495,
											"src": "3738:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3705:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3671:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 516,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 510,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3763:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 364,
													"src": "3763:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3794:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3786:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3763:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3798:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 509,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3755:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3755:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 519,
									"nodeType": "ExpressionStatement",
									"src": "3755:93:0"
								},
								{
									"expression": {
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 520,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3853:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 522,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 364,
											"src": "3853:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3895:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3895:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 534,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3910:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3883:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$350_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 350,
																"src": "3887:7:0"
															},
															"referencedDeclaration": 350,
															"src": "3887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$350",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												],
												"id": 524,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3875:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 538,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3875:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3853:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 540,
									"nodeType": "ExpressionStatement",
									"src": "3853:94:0"
								},
								{
									"expression": {
										"id": 545,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 541,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3951:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 543,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 366,
											"src": "3951:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 544,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 497,
											"src": "3971:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3951:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 546,
									"nodeType": "ExpressionStatement",
									"src": "3951:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 550,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 495,
												"src": "4006:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 547,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 362,
												"src": "3987:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 549,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3987:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3987:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 552,
									"nodeType": "ExpressionStatement",
									"src": "3987:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 554,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 500,
								"modifierName": {
									"id": 499,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3657:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3657:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 498,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3606:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 494,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3606:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3628:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3628:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3605:44:0"
						},
						"returnParameters": {
							"id": 501,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3667:0:0"
						},
						"scope": 555,
						"src": "3590:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "2425:1600:0"
			}
		],
		"src": "32:3994:0"
	},
	"legacyAST": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1444],
			"ERC20": [1343],
			"IERC20": [1421],
			"Ownable": [842],
			"Staking": [350],
			"StakingFactory": [555]
		},
		"id": 556,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 1344,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 843,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 350,
				"linearizedBaseContracts": [350],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 350,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$555",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 555,
								"src": "520:14:0"
							},
							"referencedDeclaration": 555,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$555",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 160,
							"nodeType": "Block",
							"src": "630:703:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 53,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "755:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 50,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "735:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateLevel",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 455,
											"src": "735:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 55,
									"nodeType": "ExpressionStatement",
									"src": "735:27:0"
								},
								{
									"assignments": [57],
									"declarations": [
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 160,
											"src": "766:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 56,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 61,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 58,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "782:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 59,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 359,
											"src": "782:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "782:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "766:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 62,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 57,
											"src": "805:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 63,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "814:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "805:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 88,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 86,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 57,
												"src": "942:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 87,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "951:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "942:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 112,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 110,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "1079:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1088:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "1079:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 134,
											"nodeType": "IfStatement",
											"src": "1075:131:0",
											"trueBody": {
												"id": 133,
												"nodeType": "Block",
												"src": "1091:115:0",
												"statements": [
													{
														"expression": {
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 113,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 116,
																	"indexExpression": {
																		"expression": {
																			"id": 114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1102:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1102:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1096:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1096:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1096:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 120,
														"nodeType": "ExpressionStatement",
														"src": "1096:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 124,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1167:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 128,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1187:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1179:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 126,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1179:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1179:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 130,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1194:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1141:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "1141:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1141:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 132,
														"nodeType": "ExpressionStatement",
														"src": "1141:60:0"
													}
												]
											}
										},
										"id": 135,
										"nodeType": "IfStatement",
										"src": "938:268:0",
										"trueBody": {
											"id": 109,
											"nodeType": "Block",
											"src": "954:115:0",
											"statements": [
												{
													"expression": {
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 89,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "959:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 92,
																"indexExpression": {
																	"expression": {
																		"id": 90,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "965:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "965:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "959:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 94,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "959:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 96,
													"nodeType": "ExpressionStatement",
													"src": "959:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1030:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1030:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 104,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1050:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1042:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1042:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1042:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 106,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 97,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1004:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1421",
																	"typeString": "contract IERC20"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1402,
															"src": "1004:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1004:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 108,
													"nodeType": "ExpressionStatement",
													"src": "1004:60:0"
												}
											]
										}
									},
									"id": 136,
									"nodeType": "IfStatement",
									"src": "801:405:0",
									"trueBody": {
										"id": 85,
										"nodeType": "Block",
										"src": "817:115:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 65,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 68,
															"indexExpression": {
																"expression": {
																	"id": 66,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "828:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "822:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "822:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 70,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "822:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "822:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "893:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "893:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 80,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "913:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "905:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 78,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "905:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "905:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 73,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "867:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1421",
																"typeString": "contract IERC20"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "867:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "867:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 137,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 140,
												"indexExpression": {
													"expression": {
														"id": 138,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1215:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1215:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1209:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 141,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1209:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 142,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1237:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1209:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 144,
									"nodeType": "ExpressionStatement",
									"src": "1209:34:0"
								},
								{
									"expression": {
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 145,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 148,
												"indexExpression": {
													"expression": {
														"id": 146,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1253:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1253:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1247:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 149,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1247:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 150,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1282:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1282:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1247:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 153,
									"nodeType": "ExpressionStatement",
									"src": "1247:50:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 157,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1322:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 154,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1301:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 156,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateTokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 468,
											"src": "1301:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1301:28:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 159,
									"nodeType": "ExpressionStatement",
									"src": "1301:28:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 161,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 350,
						"src": "590:743:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 320,
							"nodeType": "Block",
							"src": "1401:810:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 167,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 170,
												"indexExpression": {
													"expression": {
														"id": 168,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1415:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1415:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1409:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 171,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1409:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1443:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1409:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 205,
									"nodeType": "IfStatement",
									"src": "1405:201:0",
									"trueBody": {
										"id": 204,
										"nodeType": "Block",
										"src": "1446:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 174,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1455:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 176,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1473:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1473:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1495:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 180,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1495:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1473:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1455:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1451:151:0",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "1508:94:0",
													"statements": [
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 184,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1514:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 187,
																		"indexExpression": {
																			"expression": {
																				"id": 185,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1520:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1520:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1514:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1514:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1549:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 190,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1556:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 193,
																								"indexExpression": {
																									"expression": {
																										"id": 191,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1562:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 192,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1562:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1556:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 194,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1556:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1549:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 196,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1548:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1547:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1591:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1547:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1514:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "1514:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 206,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1613:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 209,
												"indexExpression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1619:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1613:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 210,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1613:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 211,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1647:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1613:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 244,
									"nodeType": "IfStatement",
									"src": "1609:201:0",
									"trueBody": {
										"id": 243,
										"nodeType": "Block",
										"src": "1650:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1659:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 215,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1677:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 219,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1677:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1659:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "IfStatement",
												"src": "1655:151:0",
												"trueBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "1712:94:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 223,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1718:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 226,
																		"indexExpression": {
																			"expression": {
																				"id": 224,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1724:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1724:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1718:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1718:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1753:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 229,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1760:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 232,
																								"indexExpression": {
																									"expression": {
																										"id": 230,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1766:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 231,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1766:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1760:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 233,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1760:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1753:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 235,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1752:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 236,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1751:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1795:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1751:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1718:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "1718:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 245,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 248,
												"indexExpression": {
													"expression": {
														"id": 246,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1823:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1823:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1817:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 249,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1817:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 250,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1851:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1817:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 313,
										"nodeType": "Block",
										"src": "2020:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 283,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2029:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2029:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 285,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "2047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "2047:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2069:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 289,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2069:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2047:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2029:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "2025:151:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "2082:94:0",
													"statements": [
														{
															"expression": {
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 293,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "2088:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 296,
																		"indexExpression": {
																			"expression": {
																				"id": 294,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2094:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2094:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2088:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "2088:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 298,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2123:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 299,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "2130:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 302,
																								"indexExpression": {
																									"expression": {
																										"id": 300,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2136:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2136:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2130:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 303,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "2130:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2123:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 305,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2122:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 306,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2121:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2165:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "2121:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2088:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "2088:82:0"
														}
													]
												}
											}
										]
									},
									"id": 314,
									"nodeType": "IfStatement",
									"src": "1813:367:0",
									"trueBody": {
										"id": 282,
										"nodeType": "Block",
										"src": "1854:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 252,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1863:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 254,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1881:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1881:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1903:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 258,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1903:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1881:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1863:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "1859:151:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "1916:94:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 262,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1922:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 265,
																		"indexExpression": {
																			"expression": {
																				"id": 263,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1928:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1922:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1922:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1957:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 268,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1964:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 271,
																								"indexExpression": {
																									"expression": {
																										"id": 269,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1970:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 270,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1970:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1964:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 272,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1964:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1957:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 274,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1956:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 275,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1955:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1955:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1922:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "1922:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 315,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2190:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 318,
										"indexExpression": {
											"expression": {
												"id": 316,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2196:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 317,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2196:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2190:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 166,
									"id": 319,
									"nodeType": "Return",
									"src": "2183:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 321,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 162,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1360:2:0"
						},
						"returnParameters": {
							"id": 166,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 321,
									"src": "1379:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1379:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1379:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1378:22:0"
						},
						"scope": 350,
						"src": "1336:875:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 348,
							"nodeType": "Block",
							"src": "2299:122:0",
							"statements": [
								{
									"expression": {
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 330,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 332,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "2328:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 331,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 555,
												"src": "2313:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$555_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2313:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2303:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$555",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 335,
									"nodeType": "ExpressionStatement",
									"src": "2303:34:0"
								},
								{
									"expression": {
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 336,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2341:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 338,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 325,
													"src": "2363:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 337,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2356:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 339,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2356:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2341:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 341,
									"nodeType": "ExpressionStatement",
									"src": "2341:36:0"
								},
								{
									"expression": {
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 342,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2381:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 344,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "2403:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 343,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2396:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 345,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2396:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2381:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 347,
									"nodeType": "ExpressionStatement",
									"src": "2381:36:0"
								}
							]
						},
						"id": 349,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 328,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2229:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2229:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2249:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 324,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2249:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2274:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2274:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2225:73:0"
						},
						"returnParameters": {
							"id": 329,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2299:0:0"
						},
						"scope": 350,
						"src": "2214:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "167:2256:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 351,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 842,
							"src": "2452:7:0"
						},
						"id": 352,
						"nodeType": "InheritanceSpecifier",
						"src": "2452:7:0"
					}
				],
				"contractDependencies": [350, 842, 1444],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 555,
				"linearizedBaseContracts": [555, 842, 1444],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 355,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2463:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 354,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 353,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "2463:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "2463:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 357,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2485:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 356,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2485:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 359,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2512:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 358,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2512:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 362,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2535:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 360,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2535:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 361,
							"nodeType": "ArrayTypeName",
							"src": "2535:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 367,
						"members": [
							{
								"constant": false,
								"id": 364,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2599:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 363,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2599:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 366,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2625:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 365,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2625:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2569:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 372,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2686:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 371,
							"keyType": {
								"id": 368,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2694:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2686:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 370,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 369,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 367,
									"src": "2705:18:0"
								},
								"referencedDeclaration": 367,
								"src": "2705:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 383,
						"members": [
							{
								"constant": false,
								"id": 374,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2789:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 373,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2789:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 376,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2817:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 375,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2817:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 378,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2850:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 377,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2850:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 380,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2876:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 379,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2876:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 382,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2901:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 381,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2901:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2768:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "b2596a67",
						"id": 388,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2923:43:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
							"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 387,
							"keyType": {
								"id": 384,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2931:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"nodeType": "Mapping",
							"src": "2923:29:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
								"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 386,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 385,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 383,
									"src": "2942:9:0"
								},
								"referencedDeclaration": 383,
								"src": "2942:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$383_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 433,
							"nodeType": "Block",
							"src": "3013:181:0",
							"statements": [
								{
									"expression": {
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 393,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3017:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 395,
											"indexExpression": {
												"hexValue": "31",
												"id": 394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3024:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3017:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3053:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												},
												{
													"hexValue": "30",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3065:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 396,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3029:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3029:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3017:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 404,
									"nodeType": "ExpressionStatement",
									"src": "3017:50:0"
								},
								{
									"expression": {
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 405,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3071:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 407,
											"indexExpression": {
												"hexValue": "32",
												"id": 406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3078:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3071:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3107:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												},
												{
													"hexValue": "30",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3119:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 408,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3083:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 414,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3083:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3071:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 416,
									"nodeType": "ExpressionStatement",
									"src": "3071:50:0"
								},
								{
									"expression": {
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 417,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3125:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 419,
											"indexExpression": {
												"hexValue": "33",
												"id": 418,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3132:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3125:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3162:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												},
												{
													"hexValue": "30",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3174:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 420,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3137:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3137:39:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3125:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 428,
									"nodeType": "ExpressionStatement",
									"src": "3125:51:0"
								},
								{
									"expression": {
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 429,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3181:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 430,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3189:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3181:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 432,
									"nodeType": "ExpressionStatement",
									"src": "3181:9:0"
								}
							]
						},
						"id": 434,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 391,
								"modifierName": {
									"id": 390,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3003:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3003:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 389,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2991:2:0"
						},
						"returnParameters": {
							"id": 392,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3013:0:0"
						},
						"scope": 555,
						"src": "2970:224:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 454,
							"nodeType": "Block",
							"src": "3245:88:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 439,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 441,
												"indexExpression": {
													"id": 440,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3253:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 442,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3253:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"expression": {
												"baseExpression": {
													"id": 443,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 445,
												"indexExpression": {
													"id": 444,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3278:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 446,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "allowedForXCoins",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 374,
											"src": "3278:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3253:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 453,
									"nodeType": "IfStatement",
									"src": "3249:81:0",
									"trueBody": {
										"id": 452,
										"nodeType": "Block",
										"src": "3310:20:0",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3315:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3315:10:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "92e0150b",
						"id": 455,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateLevel",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 437,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3218:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3218:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3217:20:0"
						},
						"returnParameters": {
							"id": 438,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3245:0:0"
						},
						"scope": 555,
						"src": "3197:136:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 467,
							"nodeType": "Block",
							"src": "3385:43:0",
							"statements": [
								{
									"expression": {
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 460,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 462,
												"indexExpression": {
													"id": 461,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3389:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 463,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3389:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 464,
											"name": "tokenValue",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 457,
											"src": "3414:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3389:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 466,
									"nodeType": "ExpressionStatement",
									"src": "3389:35:0"
								}
							]
						},
						"functionSelector": "7bdecea1",
						"id": 468,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateTokens",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 458,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3358:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3357:20:0"
						},
						"returnParameters": {
							"id": 459,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3385:0:0"
						},
						"scope": 555,
						"src": "3336:92:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 492,
							"nodeType": "Block",
							"src": "3486:101:0",
							"statements": [
								{
									"expression": {
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 475,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3490:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 477,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "3512:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 476,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "3505:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 478,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3505:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "3490:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 480,
									"nodeType": "ExpressionStatement",
									"src": "3490:36:0"
								},
								{
									"expression": {
										"id": 483,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 481,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 357,
											"src": "3530:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 482,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 472,
											"src": "3542:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3530:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 484,
									"nodeType": "ExpressionStatement",
									"src": "3530:22:0"
								},
								{
									"expression": {
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 485,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3556:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 486,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3564:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3556:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 488,
									"nodeType": "ExpressionStatement",
									"src": "3556:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 489,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 434,
											"src": "3569:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3569:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 491,
									"nodeType": "ExpressionStatement",
									"src": "3569:14:0"
								}
							]
						},
						"id": 493,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 473,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 470,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3443:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3443:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3466:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3442:43:0"
						},
						"returnParameters": {
							"id": 474,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3486:0:0"
						},
						"scope": 555,
						"src": "3431:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 553,
							"nodeType": "Block",
							"src": "3667:356:0",
							"statements": [
								{
									"assignments": [504],
									"declarations": [
										{
											"constant": false,
											"id": 504,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "3671:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 503,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 502,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 367,
													"src": "3671:18:0"
												},
												"referencedDeclaration": 367,
												"src": "3671:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 508,
									"initialValue": {
										"baseExpression": {
											"id": 505,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 372,
											"src": "3705:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 507,
										"indexExpression": {
											"id": 506,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 495,
											"src": "3738:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3705:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3671:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 516,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 510,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3763:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 364,
													"src": "3763:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3794:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3786:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3763:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3798:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 509,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3755:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3755:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 519,
									"nodeType": "ExpressionStatement",
									"src": "3755:93:0"
								},
								{
									"expression": {
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 520,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3853:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 522,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 364,
											"src": "3853:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3895:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3895:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 534,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3910:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3883:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$350_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 350,
																"src": "3887:7:0"
															},
															"referencedDeclaration": 350,
															"src": "3887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$350",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												],
												"id": 524,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3875:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 538,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3875:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3853:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 540,
									"nodeType": "ExpressionStatement",
									"src": "3853:94:0"
								},
								{
									"expression": {
										"id": 545,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 541,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3951:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 543,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 366,
											"src": "3951:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 544,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 497,
											"src": "3971:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3951:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 546,
									"nodeType": "ExpressionStatement",
									"src": "3951:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 550,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 495,
												"src": "4006:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 547,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 362,
												"src": "3987:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 549,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3987:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3987:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 552,
									"nodeType": "ExpressionStatement",
									"src": "3987:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 554,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 500,
								"modifierName": {
									"id": 499,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3657:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3657:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 498,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3606:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 494,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3606:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3628:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3628:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3605:44:0"
						},
						"returnParameters": {
							"id": 501,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3667:0:0"
						},
						"scope": 555,
						"src": "3590:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "2425:1600:0"
			}
		],
		"src": "32:3994:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.1+commit.df193b15.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-03-31T09:03:56.806Z",
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
