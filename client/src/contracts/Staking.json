{
	"contractName": "Staking",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_factory",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_rewardsToken",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_stakingToken",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "deposit",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "calculateReward",
			"outputs": [
				{
					"components": [
						{
							"internalType": "bool",
							"name": "allowed",
							"type": "bool"
						},
						{
							"internalType": "bool",
							"name": "created",
							"type": "bool"
						},
						{
							"internalType": "uint256",
							"name": "level1Tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level2Tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level3Tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level1Reward",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level2Reward",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "level3Reward",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "tokens",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "lastUpdateDate",
							"type": "uint256"
						}
					],
					"internalType": "struct Staking.UserData",
					"name": "user",
					"type": "tuple"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"calculateReward\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"created\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"level1Tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level3Tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level1Reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level3Reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Staking.UserData\",\"name\":\"user\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":{\"keccak256\":\"0xdfc62c1260bf56109382c560a130ca874e9bcd922b2a758a0180b87ed3b50fdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b830295d8aa0ba20d9e982df367b54f9a85c88d7426ce66b0beef466a163fe72\",\"dweb:/ipfs/QmZK2kJDhywisKHcKVGHrzZpuokRxKQRDBqakmPqW4Nd9u\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
	"bytecode": "0x6080604052620151806000553480156200001857600080fd5b50604051620012823803806200128283398181016040528101906200003e919062000121565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c5565b6000815190506200011b81620001ab565b92915050565b6000806000606084860312156200013757600080fd5b600062000147868287016200010a565b93505060206200015a868287016200010a565b92505060406200016d868287016200010a565b9150509250925092565b600062000184826200018b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001b68162000177565b8114620001c257600080fd5b50565b6110ad80620001d56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063725cedd31461003b578063b6b55f2514610059575b600080fd5b610043610075565b6040516100509190610ea6565b60405180910390f35b610073600480360381019061006e9190610d15565b6107c5565b005b61007d610c56565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461022b57600054601e6100d69190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610d3e565b6101809190610ec2565b42111561022a576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461201b6101d99190610f49565b6101e39190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146103d957600054601e6102849190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190610d3e565b61032e9190610ec2565b4211156103d8576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610c0a6103879190610f49565b6103919190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541461058b57600054602d6104329190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561049a57600080fd5b505afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610d3e565b6104dc9190610ec2565b421115610586576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356105359190610f49565b61053f9190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b6106ef565b600054603c61059a9190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610d3e565b6106449190610ec2565b4211156106ee576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a3561069d9190610f49565b6106a79190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b15801561082f57600080fd5b505afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190610d3e565b905060018114156109825781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546108c49190610ec2565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161092a93929190610e6f565b602060405180830381600087803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190610cec565b50610bb2565b6002811415610a9b5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546109dd9190610ec2565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a4393929190610e6f565b602060405180830381600087803b158015610a5d57600080fd5b505af1158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190610cec565b50610bb1565b6003811415610bb05781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610af69190610ec2565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b5c93929190610e6f565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190610cec565b505b5b5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254610c049190610ec2565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055505050565b60405180610140016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050610cbc81611049565b92915050565b600081359050610cd181611060565b92915050565b600081519050610ce681611060565b92915050565b600060208284031215610cfe57600080fd5b6000610d0c84828501610cad565b91505092915050565b600060208284031215610d2757600080fd5b6000610d3584828501610cc2565b91505092915050565b600060208284031215610d5057600080fd5b6000610d5e84828501610cd7565b91505092915050565b610d7081610fa3565b82525050565b610d7f81610fb5565b82525050565b61014082016000820151610d9c6000850182610d76565b506020820151610daf6020850182610d76565b506040820151610dc26040850182610e51565b506060820151610dd56060850182610e51565b506080820151610de86080850182610e51565b5060a0820151610dfb60a0850182610e51565b5060c0820151610e0e60c0850182610e51565b5060e0820151610e2160e0850182610e51565b50610100820151610e36610100850182610e51565b50610120820151610e4b610120850182610e51565b50505050565b610e5a81610fe1565b82525050565b610e6981610fe1565b82525050565b6000606082019050610e846000830186610d67565b610e916020830185610d67565b610e9e6040830184610e60565b949350505050565b600061014082019050610ebc6000830184610d85565b92915050565b6000610ecd82610fe1565b9150610ed883610fe1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0d57610f0c610feb565b5b828201905092915050565b6000610f2382610fe1565b9150610f2e83610fe1565b925082610f3e57610f3d61101a565b5b828204905092915050565b6000610f5482610fe1565b9150610f5f83610fe1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9857610f97610feb565b5b828202905092915050565b6000610fae82610fc1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61105281610fb5565b811461105d57600080fd5b50565b61106981610fe1565b811461107457600080fd5b5056fea2646970667358221220c2e07187f583bfc26299ff8204cc2f4c57b1f8279d0c955c486a44440c7c2b0b64736f6c63430008010033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063725cedd31461003b578063b6b55f2514610059575b600080fd5b610043610075565b6040516100509190610ea6565b60405180910390f35b610073600480360381019061006e9190610d15565b6107c5565b005b61007d610c56565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461022b57600054601e6100d69190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610d3e565b6101809190610ec2565b42111561022a576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461201b6101d99190610f49565b6101e39190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146103d957600054601e6102849190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190610d3e565b61032e9190610ec2565b4211156103d8576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610c0a6103879190610f49565b6103919190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541461058b57600054602d6104329190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561049a57600080fd5b505afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610d3e565b6104dc9190610ec2565b421115610586576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356105359190610f49565b61053f9190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b6106ef565b600054603c61059a9190610f49565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610d3e565b6106449190610ec2565b4211156106ee576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a3561069d9190610f49565b6106a79190610f18565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b15801561082f57600080fd5b505afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190610d3e565b905060018114156109825781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546108c49190610ec2565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161092a93929190610e6f565b602060405180830381600087803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097c9190610cec565b50610bb2565b6002811415610a9b5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546109dd9190610ec2565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a4393929190610e6f565b602060405180830381600087803b158015610a5d57600080fd5b505af1158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190610cec565b50610bb1565b6003811415610bb05781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610af69190610ec2565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b5c93929190610e6f565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190610cec565b505b5b5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254610c049190610ec2565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055505050565b60405180610140016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050610cbc81611049565b92915050565b600081359050610cd181611060565b92915050565b600081519050610ce681611060565b92915050565b600060208284031215610cfe57600080fd5b6000610d0c84828501610cad565b91505092915050565b600060208284031215610d2757600080fd5b6000610d3584828501610cc2565b91505092915050565b600060208284031215610d5057600080fd5b6000610d5e84828501610cd7565b91505092915050565b610d7081610fa3565b82525050565b610d7f81610fb5565b82525050565b61014082016000820151610d9c6000850182610d76565b506020820151610daf6020850182610d76565b506040820151610dc26040850182610e51565b506060820151610dd56060850182610e51565b506080820151610de86080850182610e51565b5060a0820151610dfb60a0850182610e51565b5060c0820151610e0e60c0850182610e51565b5060e0820151610e2160e0850182610e51565b50610100820151610e36610100850182610e51565b50610120820151610e4b610120850182610e51565b50505050565b610e5a81610fe1565b82525050565b610e6981610fe1565b82525050565b6000606082019050610e846000830186610d67565b610e916020830185610d67565b610e9e6040830184610e60565b949350505050565b600061014082019050610ebc6000830184610d85565b92915050565b6000610ecd82610fe1565b9150610ed883610fe1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0d57610f0c610feb565b5b828201905092915050565b6000610f2382610fe1565b9150610f2e83610fe1565b925082610f3e57610f3d61101a565b5b828204905092915050565b6000610f5482610fe1565b9150610f5f83610fe1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9857610f97610feb565b5b828202905092915050565b6000610fae82610fc1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61105281610fb5565b811461105d57600080fd5b50565b61106981610fe1565b811461107457600080fd5b5056fea2646970667358221220c2e07187f583bfc26299ff8204cc2f4c57b1f8279d0c955c486a44440c7c2b0b64736f6c63430008010033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:1117:11",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "70:80:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "80:22:11",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:11"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "89:5:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "89:13:11"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "80:5:11"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "138:5:11"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "111:26:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "111:33:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "111:33:11"
								}
							]
						},
						"name": "abi_decode_t_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "48:6:11",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "56:3:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "64:5:11",
								"type": ""
							}
						],
						"src": "7:143:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "267:485:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "313:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "322:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "325:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "315:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "315:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "315:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "288:7:11"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "297:9:11"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "284:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "284:23:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "309:2:11",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "280:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "280:32:11"
									},
									"nodeType": "YulIf",
									"src": "277:2:11"
								},
								{
									"nodeType": "YulBlock",
									"src": "339:128:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "354:15:11",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "368:1:11",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "358:6:11",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "383:74:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "429:9:11"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "440:6:11"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "425:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "425:22:11"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "449:7:11"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "393:31:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "393:64:11"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "383:6:11"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "477:129:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "492:16:11",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "506:2:11",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "496:6:11",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "522:74:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "568:9:11"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "579:6:11"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "564:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "564:22:11"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "588:7:11"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "532:31:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:64:11"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "522:6:11"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "616:129:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "631:16:11",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "645:2:11",
												"type": "",
												"value": "64"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "635:6:11",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "661:74:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "707:9:11"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "718:6:11"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "703:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "703:22:11"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "727:7:11"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "671:31:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "671:64:11"
											},
											"variableNames": [
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "661:6:11"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "221:9:11",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "232:7:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "244:6:11",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "252:6:11",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "260:6:11",
								"type": ""
							}
						],
						"src": "156:596:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "803:51:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "813:35:11",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "842:5:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "824:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "824:24:11"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "813:7:11"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "785:5:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "795:7:11",
								"type": ""
							}
						],
						"src": "758:96:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "905:81:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "915:65:11",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "930:5:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "937:42:11",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "926:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "926:54:11"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "915:7:11"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "887:5:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "897:7:11",
								"type": ""
							}
						],
						"src": "860:126:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1035:79:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1092:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1101:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1104:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1094:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "1094:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1094:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1058:5:11"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1083:5:11"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "1065:17:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1065:24:11"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "1055:2:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1055:35:11"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "1048:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "1048:43:11"
									},
									"nodeType": "YulIf",
									"src": "1045:2:11"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1028:5:11",
								"type": ""
							}
						],
						"src": "992:122:11"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 11,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:6439:11",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "67:77:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "77:22:11",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "92:6:11"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "86:5:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "86:13:11"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "77:5:11"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "132:5:11"
											}
										],
										"functionName": {
											"name": "validator_revert_t_bool",
											"nodeType": "YulIdentifier",
											"src": "108:23:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "108:30:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "108:30:11"
								}
							]
						},
						"name": "abi_decode_t_bool_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "45:6:11",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "53:3:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "61:5:11",
								"type": ""
							}
						],
						"src": "7:137:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "202:87:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "212:29:11",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "234:6:11"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "221:12:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "221:20:11"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "212:5:11"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "277:5:11"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "250:26:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "250:33:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "250:33:11"
								}
							]
						},
						"name": "abi_decode_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "180:6:11",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "188:3:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "196:5:11",
								"type": ""
							}
						],
						"src": "150:139:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "358:80:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "368:22:11",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "383:6:11"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "377:5:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "377:13:11"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "368:5:11"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "426:5:11"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "399:26:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "399:33:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "399:33:11"
								}
							]
						},
						"name": "abi_decode_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "336:6:11",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "344:3:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "352:5:11",
								"type": ""
							}
						],
						"src": "295:143:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "518:204:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "564:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "573:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "576:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "566:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "566:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "566:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "539:7:11"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "548:9:11"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "535:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "535:23:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "560:2:11",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "531:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "531:32:11"
									},
									"nodeType": "YulIf",
									"src": "528:2:11"
								},
								{
									"nodeType": "YulBlock",
									"src": "590:125:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "605:15:11",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "619:1:11",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "609:6:11",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "634:71:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "677:9:11"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "688:6:11"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "673:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "673:22:11"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "697:7:11"
													}
												],
												"functionName": {
													"name": "abi_decode_t_bool_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "644:28:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "644:61:11"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "634:6:11"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_bool_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "488:9:11",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "499:7:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "511:6:11",
								"type": ""
							}
						],
						"src": "444:278:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "794:196:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "840:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "849:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "852:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "842:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "842:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "842:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "815:7:11"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "824:9:11"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "811:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "811:23:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "836:2:11",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "807:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "807:32:11"
									},
									"nodeType": "YulIf",
									"src": "804:2:11"
								},
								{
									"nodeType": "YulBlock",
									"src": "866:117:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "881:15:11",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "895:1:11",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "885:6:11",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "910:63:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "945:9:11"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "956:6:11"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "941:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "941:22:11"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "965:7:11"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "920:20:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "920:53:11"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "910:6:11"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "764:9:11",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "775:7:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "787:6:11",
								"type": ""
							}
						],
						"src": "728:262:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1073:207:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1119:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1128:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1131:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1121:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "1121:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1121:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1094:7:11"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1103:9:11"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1090:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1090:23:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1115:2:11",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1086:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "1086:32:11"
									},
									"nodeType": "YulIf",
									"src": "1083:2:11"
								},
								{
									"nodeType": "YulBlock",
									"src": "1145:128:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1160:15:11",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1174:1:11",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1164:6:11",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1189:74:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1235:9:11"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1246:6:11"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1231:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1231:22:11"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1255:7:11"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1199:31:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1199:64:11"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1189:6:11"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1043:9:11",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1054:7:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1066:6:11",
								"type": ""
							}
						],
						"src": "996:284:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1351:53:11",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1368:3:11"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1391:5:11"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "1373:17:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1373:24:11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1361:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "1361:37:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1361:37:11"
								}
							]
						},
						"name": "abi_encode_t_address_to_t_address_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1339:5:11",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1346:3:11",
								"type": ""
							}
						],
						"src": "1286:118:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1459:50:11",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1476:3:11"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1496:5:11"
													}
												],
												"functionName": {
													"name": "cleanup_t_bool",
													"nodeType": "YulIdentifier",
													"src": "1481:14:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1481:21:11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1469:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "1469:34:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1469:34:11"
								}
							]
						},
						"name": "abi_encode_t_bool_to_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1447:5:11",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1454:3:11",
								"type": ""
							}
						],
						"src": "1410:99:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1687:1847:11",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1697:28:11",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1713:3:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1718:6:11",
												"type": "",
												"value": "0x0140"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1709:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "1709:16:11"
									},
									"variables": [
										{
											"name": "tail",
											"nodeType": "YulTypedName",
											"src": "1701:4:11",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1735:161:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1773:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1803:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1810:4:11",
																"type": "",
																"value": "0x00"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1799:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1799:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1793:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1793:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "1777:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "1857:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1875:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1880:4:11",
																"type": "",
																"value": "0x00"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1871:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1871:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool",
													"nodeType": "YulIdentifier",
													"src": "1829:27:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1829:57:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1829:57:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1906:161:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1944:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1974:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1981:4:11",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1970:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "1970:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1964:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "1964:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "1948:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2028:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2046:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2051:4:11",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2042:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2042:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool",
													"nodeType": "YulIdentifier",
													"src": "2000:27:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2000:57:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2000:57:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2077:172:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2120:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2150:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2157:4:11",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2146:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2146:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2140:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2140:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2124:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2210:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2228:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2233:4:11",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2224:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2224:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2176:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2176:63:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2176:63:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2259:172:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2302:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2332:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2339:4:11",
																"type": "",
																"value": "0x60"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2328:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2328:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2322:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2322:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2306:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2392:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2410:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2415:4:11",
																"type": "",
																"value": "0x60"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2406:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2406:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2358:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2358:63:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2358:63:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2441:172:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2484:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2514:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2521:4:11",
																"type": "",
																"value": "0x80"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2510:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2510:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2504:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2504:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2488:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2574:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2592:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2597:4:11",
																"type": "",
																"value": "0x80"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2588:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2588:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2540:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2540:63:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2540:63:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2623:172:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2666:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2696:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2703:4:11",
																"type": "",
																"value": "0xa0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2692:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2692:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2686:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2686:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2670:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2756:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2774:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2779:4:11",
																"type": "",
																"value": "0xa0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2770:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2770:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2722:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2722:63:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2722:63:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2805:172:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2848:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2878:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2885:4:11",
																"type": "",
																"value": "0xc0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2874:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2874:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2868:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2868:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "2852:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "2938:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2956:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2961:4:11",
																"type": "",
																"value": "0xc0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2952:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "2952:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2904:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "2904:63:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2904:63:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "2987:172:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3030:43:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3060:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3067:4:11",
																"type": "",
																"value": "0xe0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3056:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "3056:16:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3050:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3050:23:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "3034:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "3120:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3138:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3143:4:11",
																"type": "",
																"value": "0xe0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3134:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "3134:14:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3086:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3086:63:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3086:63:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "3169:170:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3206:45:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3236:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3243:6:11",
																"type": "",
																"value": "0x0100"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3232:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "3232:18:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3226:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3226:25:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "3210:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "3298:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3316:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3321:6:11",
																"type": "",
																"value": "0x0100"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3312:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "3312:16:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3264:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3264:65:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3264:65:11"
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "3349:178:11",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "3394:45:11",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3424:5:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3431:6:11",
																"type": "",
																"value": "0x0120"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3420:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "3420:18:11"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3414:5:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3414:25:11"
											},
											"variables": [
												{
													"name": "memberValue0",
													"nodeType": "YulTypedName",
													"src": "3398:12:11",
													"type": ""
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memberValue0",
														"nodeType": "YulIdentifier",
														"src": "3486:12:11"
													},
													{
														"arguments": [
															{
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3504:3:11"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3509:6:11",
																"type": "",
																"value": "0x0120"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3500:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "3500:16:11"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3452:33:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3452:65:11"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3452:65:11"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1674:5:11",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1681:3:11",
								"type": ""
							}
						],
						"src": "1573:1961:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3595:53:11",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3612:3:11"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3635:5:11"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3617:17:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3617:24:11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3605:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "3605:37:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3605:37:11"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "3583:5:11",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3590:3:11",
								"type": ""
							}
						],
						"src": "3540:108:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3719:53:11",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3736:3:11"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3759:5:11"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3741:17:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "3741:24:11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3729:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "3729:37:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3729:37:11"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "3707:5:11",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3714:3:11",
								"type": ""
							}
						],
						"src": "3654:118:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3932:288:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3942:26:11",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3954:9:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3965:2:11",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3950:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "3950:18:11"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3942:4:11"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4022:6:11"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4035:9:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4046:1:11",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4031:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "4031:17:11"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3978:43:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "3978:71:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3978:71:11"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "4103:6:11"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4116:9:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4127:2:11",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4112:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "4112:18:11"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4059:43:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4059:72:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4059:72:11"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "4185:6:11"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4198:9:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4209:2:11",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4194:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "4194:18:11"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4141:43:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4141:72:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4141:72:11"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3888:9:11",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "3900:6:11",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "3908:6:11",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3916:6:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3927:4:11",
								"type": ""
							}
						],
						"src": "3778:442:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4372:173:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4382:27:11",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4394:9:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4405:3:11",
												"type": "",
												"value": "320"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4390:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4390:19:11"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4382:4:11"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4511:6:11"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4524:9:11"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4535:1:11",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4520:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "4520:17:11"
											}
										],
										"functionName": {
											"name": "abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4419:91:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4419:119:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4419:119:11"
								}
							]
						},
						"name": "abi_encode_tuple_t_struct$_UserData_$31_memory_ptr__to_t_struct$_UserData_$31_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4344:9:11",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "4356:6:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4367:4:11",
								"type": ""
							}
						],
						"src": "4226:319:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4595:261:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4605:25:11",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "4628:1:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "4610:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4610:20:11"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "4605:1:11"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "4639:25:11",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "4662:1:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "4644:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4644:20:11"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "4639:1:11"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "4802:22:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "4804:16:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "4804:18:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "4804:18:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "4723:1:11"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4730:66:11",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "4798:1:11"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "4726:3:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "4726:74:11"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "4720:2:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4720:81:11"
									},
									"nodeType": "YulIf",
									"src": "4717:2:11"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4834:16:11",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "4845:1:11"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "4848:1:11"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4841:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4841:9:11"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "4834:3:11"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "4582:1:11",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "4585:1:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "4591:3:11",
								"type": ""
							}
						],
						"src": "4551:305:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4904:143:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4914:25:11",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "4937:1:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "4919:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4919:20:11"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "4914:1:11"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "4948:25:11",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "4971:1:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "4953:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4953:20:11"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "4948:1:11"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "4995:22:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x12",
														"nodeType": "YulIdentifier",
														"src": "4997:16:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "4997:18:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "4997:18:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "4992:1:11"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "4985:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "4985:9:11"
									},
									"nodeType": "YulIf",
									"src": "4982:2:11"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5027:14:11",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5036:1:11"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5039:1:11"
											}
										],
										"functionName": {
											"name": "div",
											"nodeType": "YulIdentifier",
											"src": "5032:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5032:9:11"
									},
									"variableNames": [
										{
											"name": "r",
											"nodeType": "YulIdentifier",
											"src": "5027:1:11"
										}
									]
								}
							]
						},
						"name": "checked_div_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "4893:1:11",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "4896:1:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "r",
								"nodeType": "YulTypedName",
								"src": "4902:1:11",
								"type": ""
							}
						],
						"src": "4862:185:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5101:300:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5111:25:11",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5134:1:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "5116:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5116:20:11"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "5111:1:11"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "5145:25:11",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5168:1:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "5150:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5150:20:11"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "5145:1:11"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "5343:22:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "5345:16:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "5345:18:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "5345:18:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "5255:1:11"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "5248:6:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "5248:9:11"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "5241:6:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "5241:17:11"
											},
											{
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "5263:1:11"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5270:66:11",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "5338:1:11"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "5266:3:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "5266:74:11"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5260:2:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "5260:81:11"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "5237:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5237:105:11"
									},
									"nodeType": "YulIf",
									"src": "5234:2:11"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5375:20:11",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "5390:1:11"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "5393:1:11"
											}
										],
										"functionName": {
											"name": "mul",
											"nodeType": "YulIdentifier",
											"src": "5386:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5386:9:11"
									},
									"variableNames": [
										{
											"name": "product",
											"nodeType": "YulIdentifier",
											"src": "5375:7:11"
										}
									]
								}
							]
						},
						"name": "checked_mul_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "5084:1:11",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "5087:1:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "product",
								"nodeType": "YulTypedName",
								"src": "5093:7:11",
								"type": ""
							}
						],
						"src": "5053:348:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5452:51:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5462:35:11",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "5491:5:11"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "5473:17:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5473:24:11"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5462:7:11"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5434:5:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5444:7:11",
								"type": ""
							}
						],
						"src": "5407:96:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5551:48:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5561:32:11",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5586:5:11"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "5579:6:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "5579:13:11"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "5572:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5572:21:11"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5561:7:11"
										}
									]
								}
							]
						},
						"name": "cleanup_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5533:5:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5543:7:11",
								"type": ""
							}
						],
						"src": "5509:90:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5650:81:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5660:65:11",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "5675:5:11"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5682:42:11",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "5671:3:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5671:54:11"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5660:7:11"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5632:5:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5642:7:11",
								"type": ""
							}
						],
						"src": "5605:126:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5782:32:11",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5792:16:11",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "5803:5:11"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "5792:7:11"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5764:5:11",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "5774:7:11",
								"type": ""
							}
						],
						"src": "5737:77:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5848:152:11",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5865:1:11",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5868:77:11",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5858:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5858:88:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5858:88:11"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5962:1:11",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5965:4:11",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5955:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5955:15:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5955:15:11"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5986:1:11",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5989:4:11",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "5979:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "5979:15:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5979:15:11"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "5820:180:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6034:152:11",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6051:1:11",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6054:77:11",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6044:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "6044:88:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6044:88:11"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6148:1:11",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6151:4:11",
												"type": "",
												"value": "0x12"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6141:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "6141:15:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6141:15:11"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6172:1:11",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6175:4:11",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "6165:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "6165:15:11"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6165:15:11"
								}
							]
						},
						"name": "panic_error_0x12",
						"nodeType": "YulFunctionDefinition",
						"src": "6006:180:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6232:76:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6286:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6295:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6298:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "6288:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "6288:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6288:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6255:5:11"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6277:5:11"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "6262:14:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "6262:21:11"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "6252:2:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "6252:32:11"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "6245:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "6245:40:11"
									},
									"nodeType": "YulIf",
									"src": "6242:2:11"
								}
							]
						},
						"name": "validator_revert_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6225:5:11",
								"type": ""
							}
						],
						"src": "6192:116:11"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6357:79:11",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6414:16:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6423:1:11",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6426:1:11",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "6416:6:11"
													},
													"nodeType": "YulFunctionCall",
													"src": "6416:12:11"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6416:12:11"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "6380:5:11"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6405:5:11"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "6387:17:11"
														},
														"nodeType": "YulFunctionCall",
														"src": "6387:24:11"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "6377:2:11"
												},
												"nodeType": "YulFunctionCall",
												"src": "6377:35:11"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "6370:6:11"
										},
										"nodeType": "YulFunctionCall",
										"src": "6370:43:11"
									},
									"nodeType": "YulIf",
									"src": "6367:2:11"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6350:5:11",
								"type": ""
							}
						],
						"src": "6314:122:11"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Staking.UserData -> struct Staking.UserData\n    function abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // allowed\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // created\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // level1Tokens\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // level2Tokens\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // level3Tokens\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // level1Reward\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // level2Reward\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // level3Reward\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // tokens\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // lastUpdateDate\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_struct$_UserData_$31_memory_ptr__to_t_struct$_UserData_$31_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_UserData_$31_memory_ptr_to_t_struct$_UserData_$31_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 11,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "167:2125:0:-:0;;;204:12;187:29;;2083:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2197:8;2172:7;;:34;;;;;;;;;;;;;;;;;;2232:13;2210:12;;:36;;;;;;;;;;;;;;;;;;2272:13;2250:12;;:36;;;;;;;;;;;;;;;;;;2083:207;;;167:2125;;7:143:11;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:596::-;;;;309:2;297:9;288:7;284:23;280:32;277:2;;;325:1;322;315:12;277:2;368:1;393:64;449:7;440:6;429:9;425:22;393:64;:::i;:::-;383:74;;339:128;506:2;532:64;588:7;579:6;568:9;564:22;532:64;:::i;:::-;522:74;;477:129;645:2;671:64;727:7;718:6;707:9;703:22;671:64;:::i;:::-;661:74;;616:129;267:485;;;;;:::o;758:96::-;;824:24;842:5;824:24;:::i;:::-;813:35;;803:51;;;:::o;860:126::-;;937:42;930:5;926:54;915:65;;905:81;;;:::o;992:122::-;1065:24;1083:5;1065:24;:::i;:::-;1058:5;1055:35;1045:2;;1104:1;1101;1094:12;1045:2;1035:79;:::o;167:2125:0:-;;;;;;;",
	"deployedSourceMap": "167:2125:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1213:867;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;590:620;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1213:867;1256:20;;:::i;:::-;1320:1;1286:5;:17;1292:10;1286:17;;;;;;;;;;;;;;;:30;;;:35;1282:199;;1377:6;;1372:2;:11;;;;:::i;:::-;1350:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1332:15;:51;1328:149;;;1468:3;1433:5;:17;1439:10;1433:17;;;;;;;;;;;;;;;:30;;;1426:4;:37;;;;:::i;:::-;1424:47;;;;:::i;:::-;1391:5;:17;1397:10;1391:17;;;;;;;;;;;;;;;:30;;:80;;;;1328:149;1282:199;1522:1;1488:5;:17;1494:10;1488:17;;;;;;;;;;;;;;;:30;;;:35;1484:199;;1579:6;;1574:2;:11;;;;:::i;:::-;1552:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1534:15;:51;1530:149;;;1670:3;1635:5;:17;1641:10;1635:17;;;;;;;;;;;;;;;:30;;;1628:4;:37;;;;:::i;:::-;1626:47;;;;:::i;:::-;1593:5;:17;1599:10;1593:17;;;;;;;;;;;;;;;:30;;:80;;;;1530:149;1484:199;1724:1;1690:5;:17;1696:10;1690:17;;;;;;;;;;;;;;;:30;;;:35;1686:363;;1781:6;;1776:2;:11;;;;:::i;:::-;1754:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1736:15;:51;1732:149;;;1872:3;1837:5;:17;1843:10;1837:17;;;;;;;;;;;;;;;:30;;;1830:4;:37;;;;:::i;:::-;1828:47;;;;:::i;:::-;1795:5;:17;1801:10;1795:17;;;;;;;;;;;;;;;:30;;:80;;;;1732:149;1686:363;;;1945:6;;1940:2;:11;;;;:::i;:::-;1918:7;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;;;;:::i;:::-;1900:15;:51;1896:149;;;2036:3;2001:5;:17;2007:10;2001:17;;;;;;;;;;;;;;;:30;;;1994:4;:37;;;;:::i;:::-;1992:47;;;;:::i;:::-;1959:5;:17;1965:10;1959:17;;;;;;;;;;;;;;;:30;;:80;;;;1896:149;1686:363;2059:5;:17;2065:10;2059:17;;;;;;;;;;;;;;;2052:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1213:867;:::o;590:620::-;675:13;691:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;675:31;;723:1;714:5;:10;710:405;;;765:6;731:5;:17;737:10;731:17;;;;;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;;;;;776:12;;;;;;;;;;;:25;;;802:10;822:4;829:6;776:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;710:405;;;860:1;851:5;:10;847:268;;;902:6;868:5;:17;874:10;868:17;;;;;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;;;;;913:12;;;;;;;;;;;:25;;;939:10;959:4;966:6;913:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;847:268;;;997:1;988:5;:10;984:131;;;1039:6;1005:5;:17;1011:10;1005:17;;;;;;;;;;;;;;;:30;;;:40;;;;;;;:::i;:::-;;;;;;;;1050:12;;;;;;;;;;;:25;;;1076:10;1096:4;1103:6;1050:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;984:131;847:268;710:405;1146:6;1118:5;:17;1124:10;1118:17;;;;;;;;;;;;;;;:24;;;:34;;;;;;;:::i;:::-;;;;;;;;1191:15;1156:5;:17;1162:10;1156:17;;;;;;;;;;;;;;;:32;;:50;;;;590:620;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:137:11:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:143::-;;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;358:80;;;;:::o;444:278::-;;560:2;548:9;539:7;535:23;531:32;528:2;;;576:1;573;566:12;528:2;619:1;644:61;697:7;688:6;677:9;673:22;644:61;:::i;:::-;634:71;;590:125;518:204;;;;:::o;728:262::-;;836:2;824:9;815:7;811:23;807:32;804:2;;;852:1;849;842:12;804:2;895:1;920:53;965:7;956:6;945:9;941:22;920:53;:::i;:::-;910:63;;866:117;794:196;;;;:::o;996:284::-;;1115:2;1103:9;1094:7;1090:23;1086:32;1083:2;;;1131:1;1128;1121:12;1083:2;1174:1;1199:64;1255:7;1246:6;1235:9;1231:22;1199:64;:::i;:::-;1189:74;;1145:128;1073:207;;;;:::o;1286:118::-;1373:24;1391:5;1373:24;:::i;:::-;1368:3;1361:37;1351:53;;:::o;1410:99::-;1481:21;1496:5;1481:21;:::i;:::-;1476:3;1469:34;1459:50;;:::o;1573:1961::-;1718:6;1713:3;1709:16;1810:4;1803:5;1799:16;1793:23;1829:57;1880:4;1875:3;1871:14;1857:12;1829:57;:::i;:::-;1735:161;1981:4;1974:5;1970:16;1964:23;2000:57;2051:4;2046:3;2042:14;2028:12;2000:57;:::i;:::-;1906:161;2157:4;2150:5;2146:16;2140:23;2176:63;2233:4;2228:3;2224:14;2210:12;2176:63;:::i;:::-;2077:172;2339:4;2332:5;2328:16;2322:23;2358:63;2415:4;2410:3;2406:14;2392:12;2358:63;:::i;:::-;2259:172;2521:4;2514:5;2510:16;2504:23;2540:63;2597:4;2592:3;2588:14;2574:12;2540:63;:::i;:::-;2441:172;2703:4;2696:5;2692:16;2686:23;2722:63;2779:4;2774:3;2770:14;2756:12;2722:63;:::i;:::-;2623:172;2885:4;2878:5;2874:16;2868:23;2904:63;2961:4;2956:3;2952:14;2938:12;2904:63;:::i;:::-;2805:172;3067:4;3060:5;3056:16;3050:23;3086:63;3143:4;3138:3;3134:14;3120:12;3086:63;:::i;:::-;2987:172;3243:6;3236:5;3232:18;3226:25;3264:65;3321:6;3316:3;3312:16;3298:12;3264:65;:::i;:::-;3169:170;3431:6;3424:5;3420:18;3414:25;3452:65;3509:6;3504:3;3500:16;3486:12;3452:65;:::i;:::-;3349:178;1687:1847;;;:::o;3540:108::-;3617:24;3635:5;3617:24;:::i;:::-;3612:3;3605:37;3595:53;;:::o;3654:118::-;3741:24;3759:5;3741:24;:::i;:::-;3736:3;3729:37;3719:53;;:::o;3778:442::-;;3965:2;3954:9;3950:18;3942:26;;3978:71;4046:1;4035:9;4031:17;4022:6;3978:71;:::i;:::-;4059:72;4127:2;4116:9;4112:18;4103:6;4059:72;:::i;:::-;4141;4209:2;4198:9;4194:18;4185:6;4141:72;:::i;:::-;3932:288;;;;;;:::o;4226:319::-;;4405:3;4394:9;4390:19;4382:27;;4419:119;4535:1;4524:9;4520:17;4511:6;4419:119;:::i;:::-;4372:173;;;;:::o;4551:305::-;;4610:20;4628:1;4610:20;:::i;:::-;4605:25;;4644:20;4662:1;4644:20;:::i;:::-;4639:25;;4798:1;4730:66;4726:74;4723:1;4720:81;4717:2;;;4804:18;;:::i;:::-;4717:2;4848:1;4845;4841:9;4834:16;;4595:261;;;;:::o;4862:185::-;;4919:20;4937:1;4919:20;:::i;:::-;4914:25;;4953:20;4971:1;4953:20;:::i;:::-;4948:25;;4992:1;4982:2;;4997:18;;:::i;:::-;4982:2;5039:1;5036;5032:9;5027:14;;4904:143;;;;:::o;5053:348::-;;5116:20;5134:1;5116:20;:::i;:::-;5111:25;;5150:20;5168:1;5150:20;:::i;:::-;5145:25;;5338:1;5270:66;5266:74;5263:1;5260:81;5255:1;5248:9;5241:17;5237:105;5234:2;;;5345:18;;:::i;:::-;5234:2;5393:1;5390;5386:9;5375:20;;5101:300;;;;:::o;5407:96::-;;5473:24;5491:5;5473:24;:::i;:::-;5462:35;;5452:51;;;:::o;5509:90::-;;5586:5;5579:13;5572:21;5561:32;;5551:48;;;:::o;5605:126::-;;5682:42;5675:5;5671:54;5660:65;;5650:81;;;:::o;5737:77::-;;5803:5;5792:16;;5782:32;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:180;6054:77;6051:1;6044:88;6151:4;6148:1;6141:15;6175:4;6172:1;6165:15;6192:116;6262:21;6277:5;6262:21;:::i;:::-;6255:5;6252:32;6242:2;;6298:1;6295;6288:12;6242:2;6232:76;:::o;6314:122::-;6387:24;6405:5;6387:24;:::i;:::-;6380:5;6377:35;6367:2;;6426:1;6423;6416:12;6367:2;6357:79;:::o",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\ncontract Staking {\n\tuint256 oneDay = 24 * 60 * 60;\n\tstruct UserData {\n\t\tbool allowed;\n\t\tbool created;\n\t\tuint256 level1Tokens;\n\t\tuint256 level2Tokens;\n\t\tuint256 level3Tokens;\n\t\tuint256 level1Reward;\n\t\tuint256 level2Reward;\n\t\tuint256 level3Reward;\n\t\t//\n\t\t//\n\t\tuint256 tokens;\n\t\t//\n\t\t//\n\t\tuint256 lastUpdateDate;\n\t}\n\n\tmapping(address => UserData) users;\n\n\tStakingFactory factory;\n\tIERC20 rewardsToken;\n\tIERC20 stakingToken;\n\n\tfunction deposit(uint256 amount) public {\n// \t\trequire(users[msg.sender].allowed);\n\t\tuint256 level = factory.level();\n\t\tif (level == 1) {\n\t\t\tusers[msg.sender].level1Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 2) {\n\t\t\tusers[msg.sender].level2Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 3) {\n\t\t\tusers[msg.sender].level3Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t}\n\t\tusers[msg.sender].tokens += amount;\n\t\tusers[msg.sender].lastUpdateDate = block.timestamp;\n\t}\n\n\tfunction calculateReward() public returns (UserData memory user) {\n\t\tif (users[msg.sender].level1Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level1Reward = ((8219 * users[msg.sender].level1Tokens)) / 100;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level2Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level2Reward = ((3082 * users[msg.sender].level2Tokens)) / 100;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level3Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 45 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 100;\n\t\t\t}\n\t\t} else {\n\t\t\tif (block.timestamp > factory.startTime() + 60 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 100;\n\t\t\t}\n\t\t}\n\t\treturn users[msg.sender];\n\t}\n\n\tconstructor(\n\t\taddress _factory,\n\t\taddress _rewardsToken,\n\t\taddress _stakingToken\n\t) {\n\t\tfactory = StakingFactory(_factory);\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstakingToken = IERC20(_stakingToken);\n\t}\n}\n\ncontract StakingFactory is Ownable {\n\tIERC20 rewardsToken;\n\tuint256 public startTime;\n\tuint256 public level;\n\taddress[] public stakingTokens;\n\n\tstruct StakingRewardsInfo {\n\t\taddress stakingRewards;\n\t\tuint256 rewardAmount;\n\t}\n\n\t// rewards info by staking token\n\tmapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\n\n\tstruct LevelData {\n\t\tuint256 allowedForXCoins;\n\t\tuint256 rewardPercentTimes100;\n\t\tuint256 lockedDuration;\n\t\tuint256 allowedReward;\n\t}\n\n\tmapping(int256 => LevelData) public levels;\n\n\tfunction createLevels() internal onlyOwner {\n\t\tlevels[1] = LevelData(300000, 8219, 30, 246575);\n\t\tlevels[2] = LevelData(600000, 3082, 45, 184932);\n\t\tlevels[3] = LevelData(1000000, 2630, 60, 263014);\n\n\t\tlevel = 1;\n\t}\n\n\tconstructor(address _rewardsToken, uint256 _startTime) {\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstartTime = _startTime;\n\t\tlevel = 1;\n\t\tcreateLevels();\n\t}\n\n\tfunction deploy(address stakingToken, uint256 rewardAmount) public onlyOwner {\n\t\tStakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\n\t\trequire(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\n\n\t\tinfo.stakingRewards = address(new Staking(address(this), address(rewardsToken), stakingToken));\n\t\tinfo.rewardAmount = rewardAmount;\n\t\tstakingTokens.push(stakingToken);\n\t}\n}\n",
	"sourcePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
	"ast": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1228],
			"ERC20": [1127],
			"IERC20": [1205],
			"Ownable": [626],
			"Staking": [338],
			"StakingFactory": [504]
		},
		"id": 505,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 505,
				"sourceUnit": 1128,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 505,
				"sourceUnit": 627,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 338,
				"linearizedBaseContracts": [338],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 338,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$504",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 504,
								"src": "520:14:0"
							},
							"referencedDeclaration": 504,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$504",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1205",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1205,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1205,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1205",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1205",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1205,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1205,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1205",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 148,
							"nodeType": "Block",
							"src": "630:580:0",
							"statements": [
								{
									"assignments": [51],
									"declarations": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "675:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "675:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 55,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 52,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "691:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$504",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 347,
											"src": "691:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "691:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "675:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 56,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 51,
											"src": "714:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "723:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "714:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 82,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 80,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 51,
												"src": "851:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 81,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "860:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "851:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 106,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 104,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "997:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "988:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 128,
											"nodeType": "IfStatement",
											"src": "984:131:0",
											"trueBody": {
												"id": 127,
												"nodeType": "Block",
												"src": "1000:115:0",
												"statements": [
													{
														"expression": {
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 107,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1005:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 110,
																	"indexExpression": {
																		"expression": {
																			"id": 108,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1011:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1011:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1005:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1005:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 112,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1039:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1005:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 114,
														"nodeType": "ExpressionStatement",
														"src": "1005:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 118,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 122,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1096:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$338",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$338",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1088:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 120,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1088:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1088:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 124,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1103:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 115,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1050:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1205",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1186,
																"src": "1050:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 126,
														"nodeType": "ExpressionStatement",
														"src": "1050:60:0"
													}
												]
											}
										},
										"id": 129,
										"nodeType": "IfStatement",
										"src": "847:268:0",
										"trueBody": {
											"id": 103,
											"nodeType": "Block",
											"src": "863:115:0",
											"statements": [
												{
													"expression": {
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 83,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "868:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 86,
																"indexExpression": {
																	"expression": {
																		"id": 84,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "874:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "874:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "868:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "868:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 88,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "868:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 90,
													"nodeType": "ExpressionStatement",
													"src": "868:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 94,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "939:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "939:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 98,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "959:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$338",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$338",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "951:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 96,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "951:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "951:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 100,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 91,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "913:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1205",
																	"typeString": "contract IERC20"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1186,
															"src": "913:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "913:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 102,
													"nodeType": "ExpressionStatement",
													"src": "913:60:0"
												}
											]
										}
									},
									"id": 130,
									"nodeType": "IfStatement",
									"src": "710:405:0",
									"trueBody": {
										"id": 79,
										"nodeType": "Block",
										"src": "726:115:0",
										"statements": [
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 59,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "731:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 62,
															"indexExpression": {
																"expression": {
																	"id": 60,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "737:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "737:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "731:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "731:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 64,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "765:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "731:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "731:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 70,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "802:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 74,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "822:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$338",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$338",
																		"typeString": "contract Staking"
																	}
																],
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "814:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 72,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "814:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "814:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 76,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "829:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 67,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "776:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1205",
																"typeString": "contract IERC20"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "776:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "776:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "776:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 137,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 131,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1118:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 134,
												"indexExpression": {
													"expression": {
														"id": 132,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1124:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1124:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1118:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 135,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1118:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 136,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1146:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1118:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 138,
									"nodeType": "ExpressionStatement",
									"src": "1118:34:0"
								},
								{
									"expression": {
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 139,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 142,
												"indexExpression": {
													"expression": {
														"id": 140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1162:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1162:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1156:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 143,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1156:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 144,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1191:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 145,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1191:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1156:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 147,
									"nodeType": "ExpressionStatement",
									"src": "1156:50:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 149,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 338,
						"src": "590:620:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 308,
							"nodeType": "Block",
							"src": "1278:802:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 161,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 155,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 158,
												"indexExpression": {
													"expression": {
														"id": 156,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1292:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1292:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1286:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 159,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1286:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1320:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1286:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 193,
									"nodeType": "IfStatement",
									"src": "1282:199:0",
									"trueBody": {
										"id": 192,
										"nodeType": "Block",
										"src": "1323:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 162,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1332:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 164,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1350:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1350:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1350:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1372:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 168,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1377:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1372:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1350:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1332:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "1328:149:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "1385:92:0",
													"statements": [
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 172,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1391:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 175,
																		"indexExpression": {
																			"expression": {
																				"id": 173,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1397:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1391:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1391:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 183,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1426:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 178,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1433:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 181,
																								"indexExpression": {
																									"expression": {
																										"id": 179,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1439:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 180,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1439:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1433:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 182,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1433:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1426:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 184,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1425:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 185,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1424:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1468:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1424:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1391:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "1391:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 200,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 194,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1488:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 197,
												"indexExpression": {
													"expression": {
														"id": 195,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1494:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1494:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1488:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 198,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1488:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 199,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1522:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1488:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 232,
									"nodeType": "IfStatement",
									"src": "1484:199:0",
									"trueBody": {
										"id": 231,
										"nodeType": "Block",
										"src": "1525:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 201,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1534:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1534:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 203,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1552:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1552:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1574:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 207,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1579:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1574:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1552:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1534:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "1530:149:0",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "1587:92:0",
													"statements": [
														{
															"expression": {
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 211,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1593:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 214,
																		"indexExpression": {
																			"expression": {
																				"id": 212,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1599:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1599:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1593:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 215,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1593:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 222,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1628:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 217,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1635:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 220,
																								"indexExpression": {
																									"expression": {
																										"id": 218,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1641:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 219,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1641:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1635:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 221,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1635:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1628:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 223,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1627:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 224,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1626:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1670:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1626:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1593:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 228,
															"nodeType": "ExpressionStatement",
															"src": "1593:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 233,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 236,
												"indexExpression": {
													"expression": {
														"id": 234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1696:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1696:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1690:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 237,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1690:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 238,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1724:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1690:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 301,
										"nodeType": "Block",
										"src": "1891:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 271,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1900:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 273,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1918:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1918:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1918:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1940:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 277,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1945:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1940:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1918:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1900:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "1896:149:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "1953:92:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 281,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1959:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 284,
																		"indexExpression": {
																			"expression": {
																				"id": 282,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1965:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1965:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1959:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1959:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1994:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 287,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "2001:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 290,
																								"indexExpression": {
																									"expression": {
																										"id": 288,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2007:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 289,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2007:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2001:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 291,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "2001:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1994:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 293,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1993:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1992:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2036:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1992:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1959:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "1959:80:0"
														}
													]
												}
											}
										]
									},
									"id": 302,
									"nodeType": "IfStatement",
									"src": "1686:363:0",
									"trueBody": {
										"id": 270,
										"nodeType": "Block",
										"src": "1727:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 240,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1736:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1736:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 242,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1754:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1754:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1754:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1776:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 246,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1781:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1776:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1754:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1736:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "1732:149:0",
												"trueBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "1789:92:0",
													"statements": [
														{
															"expression": {
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 250,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1795:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 253,
																		"indexExpression": {
																			"expression": {
																				"id": 251,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1801:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1801:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1795:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1795:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 255,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1830:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 256,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1837:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 259,
																								"indexExpression": {
																									"expression": {
																										"id": 257,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1843:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1843:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1837:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 260,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1837:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1830:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 262,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1829:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 263,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1828:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1872:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1828:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 267,
															"nodeType": "ExpressionStatement",
															"src": "1795:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 303,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2059:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 306,
										"indexExpression": {
											"expression": {
												"id": 304,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2065:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 305,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2065:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2059:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 154,
									"id": 307,
									"nodeType": "Return",
									"src": "2052:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 309,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 150,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1237:2:0"
						},
						"returnParameters": {
							"id": 154,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "1256:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 152,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 151,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1256:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1256:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1255:22:0"
						},
						"scope": 338,
						"src": "1213:867:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 336,
							"nodeType": "Block",
							"src": "2168:122:0",
							"statements": [
								{
									"expression": {
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 318,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2172:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$504",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 320,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "2197:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 319,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "2182:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$504_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 321,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2182:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$504",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2172:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$504",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 323,
									"nodeType": "ExpressionStatement",
									"src": "2172:34:0"
								},
								{
									"expression": {
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 324,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2210:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 326,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "2232:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 325,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1205,
												"src": "2225:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1205_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 327,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2225:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"src": "2210:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1205",
											"typeString": "contract IERC20"
										}
									},
									"id": 329,
									"nodeType": "ExpressionStatement",
									"src": "2210:36:0"
								},
								{
									"expression": {
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 330,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2250:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 332,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2272:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 331,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1205,
												"src": "2265:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1205_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2265:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"src": "2250:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1205",
											"typeString": "contract IERC20"
										}
									},
									"id": 335,
									"nodeType": "ExpressionStatement",
									"src": "2250:36:0"
								}
							]
						},
						"id": 337,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 316,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 337,
									"src": "2098:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 310,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2098:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 337,
									"src": "2118:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 312,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2118:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 337,
									"src": "2143:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 314,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2143:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2094:73:0"
						},
						"returnParameters": {
							"id": 317,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2168:0:0"
						},
						"scope": 338,
						"src": "2083:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 505,
				"src": "167:2125:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 339,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 626,
							"src": "2321:7:0"
						},
						"id": 340,
						"nodeType": "InheritanceSpecifier",
						"src": "2321:7:0"
					}
				],
				"contractDependencies": [338, 626, 1228],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 504,
				"linearizedBaseContracts": [504, 626, 1228],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 343,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2332:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1205",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 342,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 341,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1205,
								"src": "2332:6:0"
							},
							"referencedDeclaration": 1205,
							"src": "2332:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1205",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 345,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2354:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 344,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2354:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 347,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2381:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 346,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2381:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 350,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2404:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 348,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2404:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 349,
							"nodeType": "ArrayTypeName",
							"src": "2404:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 355,
						"members": [
							{
								"constant": false,
								"id": 352,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 355,
								"src": "2468:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 351,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2468:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 354,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 355,
								"src": "2494:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 353,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2494:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 504,
						"src": "2438:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 360,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2555:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$355_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 359,
							"keyType": {
								"id": 356,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2563:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2555:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$355_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 358,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 357,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 355,
									"src": "2574:18:0"
								},
								"referencedDeclaration": 355,
								"src": "2574:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 369,
						"members": [
							{
								"constant": false,
								"id": 362,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2658:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 361,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2658:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 364,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2686:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 363,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2686:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 366,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2719:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 365,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2719:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 368,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2745:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 367,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2745:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 504,
						"src": "2637:133:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "0b96fe53",
						"id": 374,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2773:42:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
							"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 373,
							"keyType": {
								"id": 370,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "2781:6:0",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							},
							"nodeType": "Mapping",
							"src": "2773:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
								"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 372,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 371,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 369,
									"src": "2791:9:0"
								},
								"referencedDeclaration": 369,
								"src": "2791:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$369_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 416,
							"nodeType": "Block",
							"src": "2862:172:0",
							"statements": [
								{
									"expression": {
										"id": 388,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 379,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "2866:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 381,
											"indexExpression": {
												"hexValue": "31",
												"id": 380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2873:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2866:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2902:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2906:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													}
												],
												"id": 382,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 369,
												"src": "2878:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$369_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 387,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2878:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2866:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$369_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 389,
									"nodeType": "ExpressionStatement",
									"src": "2866:47:0"
								},
								{
									"expression": {
										"id": 399,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 390,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "2917:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 392,
											"indexExpression": {
												"hexValue": "32",
												"id": 391,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2924:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2917:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2939:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2953:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													}
												],
												"id": 393,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 369,
												"src": "2929:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$369_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 398,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2929:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2917:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$369_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 400,
									"nodeType": "ExpressionStatement",
									"src": "2917:47:0"
								},
								{
									"expression": {
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 401,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "2968:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 403,
											"indexExpression": {
												"hexValue": "33",
												"id": 402,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2975:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2968:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2999:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3005:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													}
												],
												"id": 404,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 369,
												"src": "2980:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$369_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 409,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2980:36:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2968:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$369_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 411,
									"nodeType": "ExpressionStatement",
									"src": "2968:48:0"
								},
								{
									"expression": {
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 412,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 347,
											"src": "3021:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3029:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3021:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 415,
									"nodeType": "ExpressionStatement",
									"src": "3021:9:0"
								}
							]
						},
						"id": 417,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 377,
								"modifierName": {
									"id": 376,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 575,
									"src": "2852:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "2852:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 375,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2840:2:0"
						},
						"returnParameters": {
							"id": 378,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2862:0:0"
						},
						"scope": 504,
						"src": "2819:215:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 441,
							"nodeType": "Block",
							"src": "3092:101:0",
							"statements": [
								{
									"expression": {
										"id": 428,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 424,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 343,
											"src": "3096:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 426,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "3118:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 425,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1205,
												"src": "3111:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1205_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 427,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3111:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"src": "3096:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1205",
											"typeString": "contract IERC20"
										}
									},
									"id": 429,
									"nodeType": "ExpressionStatement",
									"src": "3096:36:0"
								},
								{
									"expression": {
										"id": 432,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 430,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 345,
											"src": "3136:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 431,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 421,
											"src": "3148:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3136:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 433,
									"nodeType": "ExpressionStatement",
									"src": "3136:22:0"
								},
								{
									"expression": {
										"id": 436,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 434,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 347,
											"src": "3162:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 435,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3170:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3162:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 437,
									"nodeType": "ExpressionStatement",
									"src": "3162:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 438,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 417,
											"src": "3175:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 439,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3175:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 440,
									"nodeType": "ExpressionStatement",
									"src": "3175:14:0"
								}
							]
						},
						"id": 442,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 422,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "3049:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 418,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3049:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "3072:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 420,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3072:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3048:43:0"
						},
						"returnParameters": {
							"id": 423,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3092:0:0"
						},
						"scope": 504,
						"src": "3037:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 502,
							"nodeType": "Block",
							"src": "3273:356:0",
							"statements": [
								{
									"assignments": [453],
									"declarations": [
										{
											"constant": false,
											"id": 453,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 502,
											"src": "3277:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 452,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 451,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 355,
													"src": "3277:18:0"
												},
												"referencedDeclaration": 355,
												"src": "3277:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 457,
									"initialValue": {
										"baseExpression": {
											"id": 454,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 360,
											"src": "3311:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$355_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 456,
										"indexExpression": {
											"id": 455,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 444,
											"src": "3344:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3311:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3277:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 465,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 459,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "3369:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 352,
													"src": "3369:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3392:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3392:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3369:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 466,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3404:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 458,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3361:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3361:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 468,
									"nodeType": "ExpressionStatement",
									"src": "3361:93:0"
								},
								{
									"expression": {
										"id": 488,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 469,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 453,
												"src": "3459:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 471,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 352,
											"src": "3459:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 479,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3501:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3501:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 483,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3524:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1205",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1205",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3516:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3516:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3516:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3539:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3489:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$338_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 338,
																"src": "3493:7:0"
															},
															"referencedDeclaration": 338,
															"src": "3493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$338",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3489:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$338",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$338",
														"typeString": "contract Staking"
													}
												],
												"id": 473,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3481:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 487,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3481:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3459:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 489,
									"nodeType": "ExpressionStatement",
									"src": "3459:94:0"
								},
								{
									"expression": {
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 490,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 453,
												"src": "3557:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 492,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 354,
											"src": "3557:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 493,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 446,
											"src": "3577:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3557:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 495,
									"nodeType": "ExpressionStatement",
									"src": "3557:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 499,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 444,
												"src": "3612:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 496,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 350,
												"src": "3593:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 498,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3593:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 500,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3593:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 501,
									"nodeType": "ExpressionStatement",
									"src": "3593:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 503,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 449,
								"modifierName": {
									"id": 448,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 575,
									"src": "3263:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3263:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 447,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "3212:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 443,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3212:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "3234:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3234:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3211:44:0"
						},
						"returnParameters": {
							"id": 450,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3273:0:0"
						},
						"scope": 504,
						"src": "3196:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 505,
				"src": "2294:1337:0"
			}
		],
		"src": "32:3600:0"
	},
	"legacyAST": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1228],
			"ERC20": [1127],
			"IERC20": [1205],
			"Ownable": [626],
			"Staking": [338],
			"StakingFactory": [504]
		},
		"id": 505,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 505,
				"sourceUnit": 1128,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 505,
				"sourceUnit": 627,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 338,
				"linearizedBaseContracts": [338],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 338,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$504",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 504,
								"src": "520:14:0"
							},
							"referencedDeclaration": 504,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$504",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1205",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1205,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1205,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1205",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 338,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1205",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1205,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1205,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1205",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 148,
							"nodeType": "Block",
							"src": "630:580:0",
							"statements": [
								{
									"assignments": [51],
									"declarations": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "675:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "675:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 55,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 52,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "691:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$504",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 347,
											"src": "691:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "691:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "675:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 56,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 51,
											"src": "714:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "723:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "714:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 82,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 80,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 51,
												"src": "851:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 81,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "860:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "851:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 106,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 104,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "997:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "988:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 128,
											"nodeType": "IfStatement",
											"src": "984:131:0",
											"trueBody": {
												"id": 127,
												"nodeType": "Block",
												"src": "1000:115:0",
												"statements": [
													{
														"expression": {
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 107,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1005:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 110,
																	"indexExpression": {
																		"expression": {
																			"id": 108,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1011:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1011:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1005:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1005:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 112,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1039:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1005:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 114,
														"nodeType": "ExpressionStatement",
														"src": "1005:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 118,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 122,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1096:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$338",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$338",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1088:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 120,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1088:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1088:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 124,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1103:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 115,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1050:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1205",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1186,
																"src": "1050:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 126,
														"nodeType": "ExpressionStatement",
														"src": "1050:60:0"
													}
												]
											}
										},
										"id": 129,
										"nodeType": "IfStatement",
										"src": "847:268:0",
										"trueBody": {
											"id": 103,
											"nodeType": "Block",
											"src": "863:115:0",
											"statements": [
												{
													"expression": {
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 83,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "868:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 86,
																"indexExpression": {
																	"expression": {
																		"id": 84,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "874:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "874:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "868:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "868:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 88,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "868:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 90,
													"nodeType": "ExpressionStatement",
													"src": "868:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 94,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "939:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "939:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 98,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "959:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$338",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$338",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "951:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 96,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "951:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "951:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 100,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 91,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "913:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1205",
																	"typeString": "contract IERC20"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1186,
															"src": "913:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "913:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 102,
													"nodeType": "ExpressionStatement",
													"src": "913:60:0"
												}
											]
										}
									},
									"id": 130,
									"nodeType": "IfStatement",
									"src": "710:405:0",
									"trueBody": {
										"id": 79,
										"nodeType": "Block",
										"src": "726:115:0",
										"statements": [
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 59,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "731:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 62,
															"indexExpression": {
																"expression": {
																	"id": 60,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "737:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "737:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "731:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "731:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 64,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "765:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "731:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "731:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 70,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "802:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 74,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "822:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$338",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$338",
																		"typeString": "contract Staking"
																	}
																],
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "814:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 72,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "814:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "814:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 76,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "829:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 67,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "776:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1205",
																"typeString": "contract IERC20"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "776:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "776:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "776:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 137,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 131,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1118:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 134,
												"indexExpression": {
													"expression": {
														"id": 132,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1124:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1124:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1118:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 135,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1118:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 136,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1146:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1118:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 138,
									"nodeType": "ExpressionStatement",
									"src": "1118:34:0"
								},
								{
									"expression": {
										"id": 146,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 139,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 142,
												"indexExpression": {
													"expression": {
														"id": 140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1162:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1162:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1156:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 143,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1156:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 144,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1191:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 145,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1191:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1156:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 147,
									"nodeType": "ExpressionStatement",
									"src": "1156:50:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 149,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 338,
						"src": "590:620:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 308,
							"nodeType": "Block",
							"src": "1278:802:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 161,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 155,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 158,
												"indexExpression": {
													"expression": {
														"id": 156,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1292:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1292:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1286:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 159,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1286:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1320:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1286:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 193,
									"nodeType": "IfStatement",
									"src": "1282:199:0",
									"trueBody": {
										"id": 192,
										"nodeType": "Block",
										"src": "1323:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 162,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1332:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 164,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1350:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1350:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1350:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1372:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 168,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1377:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1372:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1350:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1332:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "1328:149:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "1385:92:0",
													"statements": [
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 172,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1391:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 175,
																		"indexExpression": {
																			"expression": {
																				"id": 173,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1397:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1391:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1391:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 183,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1426:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 178,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1433:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 181,
																								"indexExpression": {
																									"expression": {
																										"id": 179,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1439:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 180,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1439:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1433:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 182,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1433:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1426:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 184,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1425:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 185,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1424:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1468:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1424:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1391:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "1391:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 200,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 194,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1488:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 197,
												"indexExpression": {
													"expression": {
														"id": 195,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1494:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1494:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1488:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 198,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1488:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 199,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1522:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1488:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 232,
									"nodeType": "IfStatement",
									"src": "1484:199:0",
									"trueBody": {
										"id": 231,
										"nodeType": "Block",
										"src": "1525:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 201,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1534:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1534:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 203,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1552:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1552:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1574:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 207,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1579:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1574:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1552:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1534:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "1530:149:0",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "1587:92:0",
													"statements": [
														{
															"expression": {
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 211,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1593:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 214,
																		"indexExpression": {
																			"expression": {
																				"id": 212,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1599:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1599:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1593:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 215,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1593:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 222,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1628:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 217,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1635:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 220,
																								"indexExpression": {
																									"expression": {
																										"id": 218,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1641:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 219,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1641:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1635:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 221,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1635:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1628:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 223,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1627:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 224,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1626:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1670:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1626:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1593:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 228,
															"nodeType": "ExpressionStatement",
															"src": "1593:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 233,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1690:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 236,
												"indexExpression": {
													"expression": {
														"id": 234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1696:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1696:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1690:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 237,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1690:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 238,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1724:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1690:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 301,
										"nodeType": "Block",
										"src": "1891:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 271,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1900:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 273,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1918:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1918:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1918:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1940:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 277,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1945:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1940:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1918:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1900:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "1896:149:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "1953:92:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 281,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1959:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 284,
																		"indexExpression": {
																			"expression": {
																				"id": 282,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1965:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1965:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1959:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1959:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1994:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 287,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "2001:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 290,
																								"indexExpression": {
																									"expression": {
																										"id": 288,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2007:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 289,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2007:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2001:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 291,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "2001:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1994:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 293,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1993:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1992:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2036:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1992:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1959:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "1959:80:0"
														}
													]
												}
											}
										]
									},
									"id": 302,
									"nodeType": "IfStatement",
									"src": "1686:363:0",
									"trueBody": {
										"id": 270,
										"nodeType": "Block",
										"src": "1727:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 240,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1736:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1736:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 242,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1754:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 345,
																"src": "1754:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1754:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1776:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 246,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1781:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1776:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1754:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1736:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "1732:149:0",
												"trueBody": {
													"id": 268,
													"nodeType": "Block",
													"src": "1789:92:0",
													"statements": [
														{
															"expression": {
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 250,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1795:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 253,
																		"indexExpression": {
																			"expression": {
																				"id": 251,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1801:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1801:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1795:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1795:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 255,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1830:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 256,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1837:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 259,
																								"indexExpression": {
																									"expression": {
																										"id": 257,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1843:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1843:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1837:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 260,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1837:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1830:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 262,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1829:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 263,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1828:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1872:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1828:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 267,
															"nodeType": "ExpressionStatement",
															"src": "1795:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 303,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2059:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 306,
										"indexExpression": {
											"expression": {
												"id": 304,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2065:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 305,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2065:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2059:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 154,
									"id": 307,
									"nodeType": "Return",
									"src": "2052:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 309,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 150,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1237:2:0"
						},
						"returnParameters": {
							"id": 154,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 309,
									"src": "1256:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 152,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 151,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1256:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1256:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1255:22:0"
						},
						"scope": 338,
						"src": "1213:867:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 336,
							"nodeType": "Block",
							"src": "2168:122:0",
							"statements": [
								{
									"expression": {
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 318,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2172:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$504",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 320,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "2197:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 319,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "2182:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$504_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 321,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2182:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$504",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2172:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$504",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 323,
									"nodeType": "ExpressionStatement",
									"src": "2172:34:0"
								},
								{
									"expression": {
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 324,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2210:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 326,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "2232:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 325,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1205,
												"src": "2225:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1205_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 327,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2225:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"src": "2210:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1205",
											"typeString": "contract IERC20"
										}
									},
									"id": 329,
									"nodeType": "ExpressionStatement",
									"src": "2210:36:0"
								},
								{
									"expression": {
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 330,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2250:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 332,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2272:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 331,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1205,
												"src": "2265:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1205_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2265:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"src": "2250:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1205",
											"typeString": "contract IERC20"
										}
									},
									"id": 335,
									"nodeType": "ExpressionStatement",
									"src": "2250:36:0"
								}
							]
						},
						"id": 337,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 316,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 337,
									"src": "2098:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 310,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2098:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 337,
									"src": "2118:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 312,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2118:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 337,
									"src": "2143:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 314,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2143:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2094:73:0"
						},
						"returnParameters": {
							"id": 317,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2168:0:0"
						},
						"scope": 338,
						"src": "2083:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 505,
				"src": "167:2125:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 339,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 626,
							"src": "2321:7:0"
						},
						"id": 340,
						"nodeType": "InheritanceSpecifier",
						"src": "2321:7:0"
					}
				],
				"contractDependencies": [338, 626, 1228],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 504,
				"linearizedBaseContracts": [504, 626, 1228],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 343,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2332:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1205",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 342,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 341,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1205,
								"src": "2332:6:0"
							},
							"referencedDeclaration": 1205,
							"src": "2332:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1205",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 345,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2354:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 344,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2354:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 347,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2381:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 346,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2381:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 350,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2404:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 348,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2404:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 349,
							"nodeType": "ArrayTypeName",
							"src": "2404:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 355,
						"members": [
							{
								"constant": false,
								"id": 352,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 355,
								"src": "2468:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 351,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2468:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 354,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 355,
								"src": "2494:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 353,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2494:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 504,
						"src": "2438:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 360,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2555:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$355_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 359,
							"keyType": {
								"id": 356,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2563:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2555:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$355_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 358,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 357,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 355,
									"src": "2574:18:0"
								},
								"referencedDeclaration": 355,
								"src": "2574:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 369,
						"members": [
							{
								"constant": false,
								"id": 362,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2658:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 361,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2658:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 364,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2686:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 363,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2686:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 366,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2719:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 365,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2719:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 368,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 369,
								"src": "2745:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 367,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2745:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 504,
						"src": "2637:133:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "0b96fe53",
						"id": 374,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 504,
						"src": "2773:42:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
							"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 373,
							"keyType": {
								"id": 370,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "2781:6:0",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							},
							"nodeType": "Mapping",
							"src": "2773:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
								"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 372,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 371,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 369,
									"src": "2791:9:0"
								},
								"referencedDeclaration": 369,
								"src": "2791:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$369_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 416,
							"nodeType": "Block",
							"src": "2862:172:0",
							"statements": [
								{
									"expression": {
										"id": 388,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 379,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "2866:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 381,
											"indexExpression": {
												"hexValue": "31",
												"id": 380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2873:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2866:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2902:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2906:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													}
												],
												"id": 382,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 369,
												"src": "2878:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$369_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 387,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2878:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2866:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$369_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 389,
									"nodeType": "ExpressionStatement",
									"src": "2866:47:0"
								},
								{
									"expression": {
										"id": 399,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 390,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "2917:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 392,
											"indexExpression": {
												"hexValue": "32",
												"id": 391,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2924:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2917:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2939:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2953:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													}
												],
												"id": 393,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 369,
												"src": "2929:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$369_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 398,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2929:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2917:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$369_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 400,
									"nodeType": "ExpressionStatement",
									"src": "2917:47:0"
								},
								{
									"expression": {
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 401,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "2968:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$369_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 403,
											"indexExpression": {
												"hexValue": "33",
												"id": 402,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2975:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2968:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2999:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3005:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													}
												],
												"id": 404,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 369,
												"src": "2980:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$369_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 409,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2980:36:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$369_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2968:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$369_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 411,
									"nodeType": "ExpressionStatement",
									"src": "2968:48:0"
								},
								{
									"expression": {
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 412,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 347,
											"src": "3021:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3029:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3021:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 415,
									"nodeType": "ExpressionStatement",
									"src": "3021:9:0"
								}
							]
						},
						"id": 417,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 377,
								"modifierName": {
									"id": 376,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 575,
									"src": "2852:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "2852:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 375,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2840:2:0"
						},
						"returnParameters": {
							"id": 378,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2862:0:0"
						},
						"scope": 504,
						"src": "2819:215:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 441,
							"nodeType": "Block",
							"src": "3092:101:0",
							"statements": [
								{
									"expression": {
										"id": 428,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 424,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 343,
											"src": "3096:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 426,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "3118:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 425,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1205,
												"src": "3111:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1205_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 427,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3111:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1205",
												"typeString": "contract IERC20"
											}
										},
										"src": "3096:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1205",
											"typeString": "contract IERC20"
										}
									},
									"id": 429,
									"nodeType": "ExpressionStatement",
									"src": "3096:36:0"
								},
								{
									"expression": {
										"id": 432,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 430,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 345,
											"src": "3136:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 431,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 421,
											"src": "3148:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3136:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 433,
									"nodeType": "ExpressionStatement",
									"src": "3136:22:0"
								},
								{
									"expression": {
										"id": 436,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 434,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 347,
											"src": "3162:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 435,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3170:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3162:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 437,
									"nodeType": "ExpressionStatement",
									"src": "3162:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 438,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 417,
											"src": "3175:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 439,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3175:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 440,
									"nodeType": "ExpressionStatement",
									"src": "3175:14:0"
								}
							]
						},
						"id": 442,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 422,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "3049:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 418,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3049:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 442,
									"src": "3072:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 420,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3072:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3048:43:0"
						},
						"returnParameters": {
							"id": 423,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3092:0:0"
						},
						"scope": 504,
						"src": "3037:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 502,
							"nodeType": "Block",
							"src": "3273:356:0",
							"statements": [
								{
									"assignments": [453],
									"declarations": [
										{
											"constant": false,
											"id": 453,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 502,
											"src": "3277:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 452,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 451,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 355,
													"src": "3277:18:0"
												},
												"referencedDeclaration": 355,
												"src": "3277:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 457,
									"initialValue": {
										"baseExpression": {
											"id": 454,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 360,
											"src": "3311:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$355_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 456,
										"indexExpression": {
											"id": 455,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 444,
											"src": "3344:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3311:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3277:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 465,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 459,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "3369:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 352,
													"src": "3369:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 461,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3392:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3392:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3369:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 466,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3404:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 458,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3361:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3361:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 468,
									"nodeType": "ExpressionStatement",
									"src": "3361:93:0"
								},
								{
									"expression": {
										"id": 488,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 469,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 453,
												"src": "3459:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 471,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 352,
											"src": "3459:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 479,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$504",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3501:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3501:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 483,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3524:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1205",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1205",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3516:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3516:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3516:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3539:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3489:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$338_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 338,
																"src": "3493:7:0"
															},
															"referencedDeclaration": 338,
															"src": "3493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$338",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3489:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$338",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$338",
														"typeString": "contract Staking"
													}
												],
												"id": 473,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3481:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 487,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3481:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3459:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 489,
									"nodeType": "ExpressionStatement",
									"src": "3459:94:0"
								},
								{
									"expression": {
										"id": 494,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 490,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 453,
												"src": "3557:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$355_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 492,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 354,
											"src": "3557:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 493,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 446,
											"src": "3577:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3557:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 495,
									"nodeType": "ExpressionStatement",
									"src": "3557:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 499,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 444,
												"src": "3612:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 496,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 350,
												"src": "3593:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 498,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3593:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 500,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3593:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 501,
									"nodeType": "ExpressionStatement",
									"src": "3593:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 503,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 449,
								"modifierName": {
									"id": 448,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 575,
									"src": "3263:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3263:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 447,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "3212:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 443,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3212:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "3234:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3234:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3211:44:0"
						},
						"returnParameters": {
							"id": 450,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3273:0:0"
						},
						"scope": 504,
						"src": "3196:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 505,
				"src": "2294:1337:0"
			}
		],
		"src": "32:3600:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.1+commit.df193b15.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-03-31T00:37:25.970Z",
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
