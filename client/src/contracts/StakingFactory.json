{
	"contractName": "StakingFactory",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_rewardsToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_startTime",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "level",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "levels",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "allowedForXCoins",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "rewardPercentTimes100",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "lockedDuration",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "allowedReward",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "alloted",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "stakingRewardsInfoByStakingToken",
			"outputs": [
				{
					"internalType": "address",
					"name": "stakingRewards",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "rewardAmount",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "stakingTokens",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "startTime",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenValue",
					"type": "uint256"
				}
			],
			"name": "updateLevel",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenValue",
					"type": "uint256"
				}
			],
			"name": "updateTokens",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "stakingToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "rewardAmount",
					"type": "uint256"
				}
			],
			"name": "deploy",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowedForXCoins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPercentTimes100\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alloted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewardsInfoByStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingRewards\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"}],\"name\":\"updateLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"}],\"name\":\"updateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":\"StakingFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":{\"keccak256\":\"0x2d2747eca3ca0ae004af933e757b50f15766210fb86797262a6db6193cc28a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d0d94861630c38ee50e72c05f4f57035c93b3962dfc6ca9667e384e7ae82e\",\"dweb:/ipfs/QmdRaeAbb7HNompbVYMCtK3X9HMAVS6Tgeg79qmpHZsMx7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
	"bytecode": "0x60806040523480156200001157600080fd5b50604051620026d0380380620026d08339818101604052810190620000379190620003b5565b6000620000496200014f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055506001600381905550620001476200015760201b60201c565b5050620004eb565b600033905090565b620001676200014f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200018d6200035e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620001e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001dd906200041d565b60405180910390fd5b6040518060a00160405280620493e0815260200161201b8152602001601e81526020016203c32f81526020016000815250600660006001815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506040518060a00160405280620927c08152602001610c0a8152602001602d81526020016202d26481526020016000815250600660006002815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506040518060a00160405280620f42408152602001610a468152602001603c81526020016204036681526020016000815250600660006003815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506001600381905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000815190506200039881620004b7565b92915050565b600081519050620003af81620004d1565b92915050565b60008060408385031215620003c957600080fd5b6000620003d98582860162000387565b9250506020620003ec858286016200039e565b9150509250929050565b6000620004056020836200043f565b915062000412826200048e565b602082019050919050565b600060208201905081810360008301526200043881620003f6565b9050919050565b600082825260208201905092915050565b60006200045d8262000464565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b620004c28162000450565b8114620004ce57600080fd5b50565b620004dc8162000484565b8114620004e857600080fd5b50565b6121d580620004fb6000396000f3fe60806040523480156200001157600080fd5b5060043610620000b85760003560e01c806378e97925116200007b57806378e9792514620001785780637bdecea1146200019a5780638da5cb5b14620001ba57806392e0150b14620001dc578063b2596a6714620001fc578063f2fde38b146200023657620000b8565b8063344e5e3414620000bd5780634956eaf014620000f35780636cf8caf814620001135780636fd5ae15146200014a578063715018a6146200016c575b600080fd5b620000db6004803603810190620000d59190620009e4565b62000256565b604051620000ea919062000aa7565b60405180910390f35b6200011160048036038101906200010b9190620009a3565b62000296565b005b6200013160048036038101906200012b919062000977565b62000504565b6040516200014192919062000b01565b60405180910390f35b6200015462000548565b60405162000163919062000b94565b60405180910390f35b620001766200054e565b005b620001826200068f565b60405162000191919062000b94565b60405180910390f35b620001b86004803603810190620001b29190620009e4565b62000695565b005b620001c4620006c9565b604051620001d3919062000aa7565b60405180910390f35b620001fa6004803603810190620001f49190620009e4565b620006f2565b005b6200021a6004803603810190620002149190620009e4565b6200074a565b6040516200022d95949392919062000bb1565b60405180910390f35b6200025460048036038101906200024e919062000977565b62000780565b005b600481815481106200026757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620002a062000933565b73ffffffffffffffffffffffffffffffffffffffff16620002c0620006c9565b73ffffffffffffffffffffffffffffffffffffffff161462000319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003109062000b72565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620003f2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e99062000b50565b60405180910390fd5b30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405162000425906200093b565b620004339392919062000ac4565b604051809103906000f08015801562000450573d6000803e3d6000fd5b508160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600101819055506004839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60035481565b6200055862000933565b73ffffffffffffffffffffffffffffffffffffffff1662000578620006c9565b73ffffffffffffffffffffffffffffffffffffffff1614620005d1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005c89062000b72565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60025481565b806006600060035481526020019081526020016000206004016000828254620006bf919062000c1f565b9250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066000600354815260200190815260200160002060000154600660006003548152602001908152602001600020600401541062000747576001600360008282546200073f919062000c1f565b925050819055505b50565b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b6200078a62000933565b73ffffffffffffffffffffffffffffffffffffffff16620007aa620006c9565b73ffffffffffffffffffffffffffffffffffffffff161462000803576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007fa9062000b72565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000876576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200086d9062000b2e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6113bb8062000de583390190565b6000813590506200095a8162000db0565b92915050565b600081359050620009718162000dca565b92915050565b6000602082840312156200098a57600080fd5b60006200099a8482850162000949565b91505092915050565b60008060408385031215620009b757600080fd5b6000620009c78582860162000949565b9250506020620009da8582860162000960565b9150509250929050565b600060208284031215620009f757600080fd5b600062000a078482850162000960565b91505092915050565b62000a1b8162000c7c565b82525050565b600062000a3060268362000c0e565b915062000a3d8262000ce9565b604082019050919050565b600062000a57602f8362000c0e565b915062000a648262000d38565b604082019050919050565b600062000a7e60208362000c0e565b915062000a8b8262000d87565b602082019050919050565b62000aa18162000cb0565b82525050565b600060208201905062000abe600083018462000a10565b92915050565b600060608201905062000adb600083018662000a10565b62000aea602083018562000a10565b62000af9604083018462000a10565b949350505050565b600060408201905062000b18600083018562000a10565b62000b27602083018462000a96565b9392505050565b6000602082019050818103600083015262000b498162000a21565b9050919050565b6000602082019050818103600083015262000b6b8162000a48565b9050919050565b6000602082019050818103600083015262000b8d8162000a6f565b9050919050565b600060208201905062000bab600083018462000a96565b92915050565b600060a08201905062000bc8600083018862000a96565b62000bd7602083018762000a96565b62000be6604083018662000a96565b62000bf5606083018562000a96565b62000c04608083018462000a96565b9695505050505050565b600082825260208201905092915050565b600062000c2c8262000cb0565b915062000c398362000cb0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000c715762000c7062000cba565b5b828201905092915050565b600062000c898262000c90565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e6752657761726473466163746f72793a3a6465706c6f793a206160008201527f6c7265616479206465706c6f7965640000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b62000dbb8162000c7c565b811462000dc757600080fd5b50565b62000dd58162000cb0565b811462000de157600080fd5b5056fe6080604052620151806000553480156200001857600080fd5b50604051620013bb380380620013bb83398181016040528101906200003e919062000121565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c5565b6000815190506200011b81620001ab565b92915050565b6000806000606084860312156200013757600080fd5b600062000147868287016200010a565b93505060206200015a868287016200010a565b92505060406200016d868287016200010a565b9150509250925092565b600062000184826200018b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001b68162000177565b8114620001c257600080fd5b50565b6111e680620001d56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063725cedd31461003b578063b6b55f2514610059575b600080fd5b610043610075565b6040516100509190610fc4565b60405180910390f35b610073600480360381019061006e9190610e33565b6107c9565b005b61007d610d74565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461022c57600054601e6100d69190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610e5c565b6101809190610ffb565b42111561022b57612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461201b6101da9190611082565b6101e49190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146103db57600054601e6102859190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ed57600080fd5b505afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103259190610e5c565b61032f9190610ffb565b4211156103da57612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610c0a6103899190611082565b6103939190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541461058e57600054602d6104349190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610e5c565b6104de9190610ffb565b42111561058957612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356105389190611082565b6105429190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b6106f3565b600054603c61059d9190611082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190610e5c565b6106479190610ffb565b4211156106f257612710600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356106a19190611082565b6106ab9190611051565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392e0150b826040518263ffffffff1660e01b81526004016108249190610fe0565b600060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b505050506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610e5c565b90506001811415610a135781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546109559190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109bb93929190610f8d565b602060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190610e0a565b50610c43565b6002811415610b2c5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610a6e9190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ad493929190610f8d565b602060405180830381600087803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190610e0a565b50610c42565b6003811415610c415781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610b879190610ffb565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bed93929190610f8d565b602060405180830381600087803b158015610c0757600080fd5b505af1158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190610e0a565b505b5b5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254610c959190610ffb565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080181905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bdecea1836040518263ffffffff1660e01b8152600401610d3e9190610fe0565b600060405180830381600087803b158015610d5857600080fd5b505af1158015610d6c573d6000803e3d6000fd5b505050505050565b60405180610140016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050610dda81611182565b92915050565b600081359050610def81611199565b92915050565b600081519050610e0481611199565b92915050565b600060208284031215610e1c57600080fd5b6000610e2a84828501610dcb565b91505092915050565b600060208284031215610e4557600080fd5b6000610e5384828501610de0565b91505092915050565b600060208284031215610e6e57600080fd5b6000610e7c84828501610df5565b91505092915050565b610e8e816110dc565b82525050565b610e9d816110ee565b82525050565b61014082016000820151610eba6000850182610e94565b506020820151610ecd6020850182610e94565b506040820151610ee06040850182610f6f565b506060820151610ef36060850182610f6f565b506080820151610f066080850182610f6f565b5060a0820151610f1960a0850182610f6f565b5060c0820151610f2c60c0850182610f6f565b5060e0820151610f3f60e0850182610f6f565b50610100820151610f54610100850182610f6f565b50610120820151610f69610120850182610f6f565b50505050565b610f788161111a565b82525050565b610f878161111a565b82525050565b6000606082019050610fa26000830186610e85565b610faf6020830185610e85565b610fbc6040830184610f7e565b949350505050565b600061014082019050610fda6000830184610ea3565b92915050565b6000602082019050610ff56000830184610f7e565b92915050565b60006110068261111a565b91506110118361111a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104657611045611124565b5b828201905092915050565b600061105c8261111a565b91506110678361111a565b92508261107757611076611153565b5b828204905092915050565b600061108d8261111a565b91506110988361111a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110d1576110d0611124565b5b828202905092915050565b60006110e7826110fa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61118b816110ee565b811461119657600080fd5b50565b6111a28161111a565b81146111ad57600080fd5b5056fea2646970667358221220eb946e97060d95e0f966fa5da7f7b18f83d51a70029357a689d508288239853f64736f6c63430008010033a2646970667358221220679ff670741da1613ac931eeed76b2211c543a61be4a65ac2de25b51830dbb8564736f6c63430008010033",
	"deployedBytecode": "",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:2481:14",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "70:80:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "80:22:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:14"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "89:5:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "89:13:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "80:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "138:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "111:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "111:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "111:33:14"
								}
							]
						},
						"name": "abi_decode_t_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "48:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "56:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "64:5:14",
								"type": ""
							}
						],
						"src": "7:143:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "219:80:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "229:22:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "244:6:14"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "238:5:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "238:13:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "229:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "287:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "260:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "260:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "260:33:14"
								}
							]
						},
						"name": "abi_decode_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "197:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "205:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "213:5:14",
								"type": ""
							}
						],
						"src": "156:143:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "399:346:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "445:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "454:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "457:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "447:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "447:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "447:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "420:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "429:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "416:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "416:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "441:2:14",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "412:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "412:32:14"
									},
									"nodeType": "YulIf",
									"src": "409:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "471:128:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "486:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "500:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "490:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "515:74:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "561:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "572:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "557:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "557:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "581:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "525:31:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "525:64:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "515:6:14"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "609:129:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "624:16:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "638:2:14",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "628:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "654:74:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "700:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "711:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "696:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "696:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "720:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "664:31:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "664:64:14"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "654:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "361:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "372:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "384:6:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "392:6:14",
								"type": ""
							}
						],
						"src": "305:440:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "897:220:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "907:74:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "973:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "978:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "914:58:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "914:67:14"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "907:3:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1079:3:14"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
											"nodeType": "YulIdentifier",
											"src": "990:88:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "990:93:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "990:93:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1092:19:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1103:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1108:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1099:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1099:12:14"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "1092:3:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "885:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "893:3:14",
								"type": ""
							}
						],
						"src": "751:366:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1294:248:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1304:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1316:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1327:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1312:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1312:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1304:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1351:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1362:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1347:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1347:17:14"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "1370:4:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1376:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1366:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1366:20:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1340:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1340:47:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1340:47:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1396:139:14",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1530:4:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "1404:124:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1404:131:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1396:4:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1274:9:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1289:4:14",
								"type": ""
							}
						],
						"src": "1123:419:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1644:73:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1661:3:14"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1666:6:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1654:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1654:19:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1654:19:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1682:29:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1701:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1706:4:14",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1697:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1697:14:14"
									},
									"variableNames": [
										{
											"name": "updated_pos",
											"nodeType": "YulIdentifier",
											"src": "1682:11:14"
										}
									]
								}
							]
						},
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1616:3:14",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1621:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "updated_pos",
								"nodeType": "YulTypedName",
								"src": "1632:11:14",
								"type": ""
							}
						],
						"src": "1548:169:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1768:51:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1778:35:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1807:5:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "1789:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1789:24:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "1778:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1750:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1760:7:14",
								"type": ""
							}
						],
						"src": "1723:96:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1870:81:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1880:65:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1895:5:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1902:42:14",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "1891:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1891:54:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "1880:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1852:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1862:7:14",
								"type": ""
							}
						],
						"src": "1825:126:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2002:32:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2012:16:14",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "2023:5:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "2012:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1984:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1994:7:14",
								"type": ""
							}
						],
						"src": "1957:77:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2146:76:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "2168:6:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2176:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2164:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2164:14:14"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2180:34:14",
												"type": "",
												"value": "Ownable: caller is not the owner"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2157:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2157:58:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2157:58:14"
								}
							]
						},
						"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "2138:6:14",
								"type": ""
							}
						],
						"src": "2040:182:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2271:79:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2328:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2337:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2340:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2330:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "2330:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2330:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2294:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2319:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "2301:17:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2301:24:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "2291:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2291:35:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "2284:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2284:43:14"
									},
									"nodeType": "YulIf",
									"src": "2281:2:14"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2264:5:14",
								"type": ""
							}
						],
						"src": "2228:122:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2399:79:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2456:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2465:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2468:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2458:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "2458:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2458:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2422:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2447:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2429:17:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "2429:24:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "2419:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2419:35:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "2412:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2412:43:14"
									},
									"nodeType": "YulIf",
									"src": "2409:2:14"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2392:5:14",
								"type": ""
							}
						],
						"src": "2356:122:14"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 14,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:7698:14",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "59:87:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "69:29:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "91:6:14"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "78:12:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "78:20:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "69:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "134:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "107:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "107:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "107:33:14"
								}
							]
						},
						"name": "abi_decode_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "37:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "45:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "53:5:14",
								"type": ""
							}
						],
						"src": "7:139:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "204:87:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "214:29:14",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "236:6:14"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "223:12:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "223:20:14"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "214:5:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "279:5:14"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "252:26:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "252:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "252:33:14"
								}
							]
						},
						"name": "abi_decode_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "182:6:14",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "190:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "198:5:14",
								"type": ""
							}
						],
						"src": "152:139:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "363:196:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "409:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "418:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "421:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "411:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "411:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "411:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "384:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "393:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "380:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "380:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "405:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "376:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "376:32:14"
									},
									"nodeType": "YulIf",
									"src": "373:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "435:117:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "450:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "464:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "454:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "479:63:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "514:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "525:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "510:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "510:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "534:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "489:20:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "489:53:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "479:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "333:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "344:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "356:6:14",
								"type": ""
							}
						],
						"src": "297:262:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "648:324:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "694:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "703:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "706:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "696:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "696:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "696:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "669:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "678:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "665:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "665:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "690:2:14",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "661:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "661:32:14"
									},
									"nodeType": "YulIf",
									"src": "658:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "720:117:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "735:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "749:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "739:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "764:63:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "799:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "810:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "795:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "795:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "819:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "774:20:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "774:53:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "764:6:14"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "847:118:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "862:16:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "876:2:14",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "866:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "892:63:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "927:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "938:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "923:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "923:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "947:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "902:20:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "902:53:14"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "892:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "610:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "621:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "633:6:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "641:6:14",
								"type": ""
							}
						],
						"src": "565:407:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1044:196:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1090:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1099:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1102:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1092:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "1092:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1092:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1065:7:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1074:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1061:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1061:23:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1086:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1057:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1057:32:14"
									},
									"nodeType": "YulIf",
									"src": "1054:2:14"
								},
								{
									"nodeType": "YulBlock",
									"src": "1116:117:14",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1131:15:14",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1145:1:14",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1135:6:14",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1160:63:14",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1195:9:14"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1206:6:14"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1191:3:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "1191:22:14"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1215:7:14"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1170:20:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1170:53:14"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1160:6:14"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1014:9:14",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1025:7:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1037:6:14",
								"type": ""
							}
						],
						"src": "978:262:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1311:53:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1328:3:14"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1351:5:14"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "1333:17:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "1333:24:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1321:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1321:37:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1321:37:14"
								}
							]
						},
						"name": "abi_encode_t_address_to_t_address_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1299:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1306:3:14",
								"type": ""
							}
						],
						"src": "1246:118:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1516:220:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1526:74:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1592:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1597:2:14",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "1533:58:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1533:67:14"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "1526:3:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1698:3:14"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
											"nodeType": "YulIdentifier",
											"src": "1609:88:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1609:93:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1609:93:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1711:19:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1722:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1727:2:14",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1718:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1718:12:14"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "1711:3:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1504:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "1512:3:14",
								"type": ""
							}
						],
						"src": "1370:366:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1888:220:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1898:74:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1964:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1969:2:14",
												"type": "",
												"value": "47"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "1905:58:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1905:67:14"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "1898:3:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2070:3:14"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
											"nodeType": "YulIdentifier",
											"src": "1981:88:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "1981:93:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1981:93:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2083:19:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2094:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2099:2:14",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2090:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2090:12:14"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2083:3:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1876:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "1884:3:14",
								"type": ""
							}
						],
						"src": "1742:366:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2260:220:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2270:74:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2336:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2341:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2277:58:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2277:67:14"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2270:3:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2442:3:14"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
											"nodeType": "YulIdentifier",
											"src": "2353:88:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2353:93:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2353:93:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2455:19:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2466:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2471:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2462:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2462:12:14"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2455:3:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2248:3:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2256:3:14",
								"type": ""
							}
						],
						"src": "2114:366:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2551:53:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2568:3:14"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2591:5:14"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2573:17:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2573:24:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2561:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2561:37:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2561:37:14"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2539:5:14",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2546:3:14",
								"type": ""
							}
						],
						"src": "2486:118:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2708:124:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2718:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "2730:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2741:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2726:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2726:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "2718:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2798:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2811:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2822:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2807:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "2807:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2754:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "2754:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2754:71:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2680:9:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "2692:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2703:4:14",
								"type": ""
							}
						],
						"src": "2610:222:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2992:288:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3002:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3014:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3025:2:14",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3010:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3010:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3002:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3082:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3095:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3106:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3091:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3091:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3038:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3038:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3038:71:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "3163:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3176:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3187:2:14",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3172:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3172:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3119:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3119:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3119:72:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "3245:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3258:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3269:2:14",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3254:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3254:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3201:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3201:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3201:72:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "2948:9:14",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "2960:6:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "2968:6:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "2976:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "2987:4:14",
								"type": ""
							}
						],
						"src": "2838:442:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3412:206:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3422:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3434:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3445:2:14",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3430:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3430:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3422:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3502:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3515:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3526:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3511:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3511:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3458:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3458:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3458:71:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "3583:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3596:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3607:2:14",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3592:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3592:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3539:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3539:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3539:72:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3376:9:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "3388:6:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3396:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3407:4:14",
								"type": ""
							}
						],
						"src": "3286:332:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3795:248:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3805:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3817:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3828:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3813:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3813:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3805:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3852:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3863:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3848:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3848:17:14"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "3871:4:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3877:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "3867:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "3867:20:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3841:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3841:47:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3841:47:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3897:139:14",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4031:4:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3905:124:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "3905:131:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3897:4:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3775:9:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3790:4:14",
								"type": ""
							}
						],
						"src": "3624:419:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4220:248:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4230:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4242:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4253:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4238:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4238:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4230:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4277:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4288:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4273:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4273:17:14"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "4296:4:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4302:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "4292:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4292:20:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4266:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4266:47:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4266:47:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4322:139:14",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4456:4:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4330:124:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4330:131:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4322:4:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4200:9:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4215:4:14",
								"type": ""
							}
						],
						"src": "4049:419:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4645:248:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4655:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4667:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4678:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4663:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4663:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4655:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4702:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4713:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4698:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4698:17:14"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "4721:4:14"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4727:9:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "4717:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "4717:20:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4691:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4691:47:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4691:47:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4747:139:14",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4881:4:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4755:124:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "4755:131:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4747:4:14"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4625:9:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4640:4:14",
								"type": ""
							}
						],
						"src": "4474:419:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4997:124:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5007:26:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5019:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5030:2:14",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5015:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5015:18:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5007:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5087:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5100:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5111:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5096:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5096:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5043:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5043:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5043:71:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4969:9:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "4981:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4992:4:14",
								"type": ""
							}
						],
						"src": "4899:222:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5337:454:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5347:27:14",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5359:9:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5370:3:14",
												"type": "",
												"value": "160"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5355:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5355:19:14"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5347:4:14"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5428:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5441:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5452:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5437:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5437:17:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5384:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5384:71:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5384:71:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "5509:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5522:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5533:2:14",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5518:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5518:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5465:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5465:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5465:72:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "5591:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5604:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5615:2:14",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5600:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5600:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5547:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5547:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5547:72:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value3",
												"nodeType": "YulIdentifier",
												"src": "5673:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5686:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5697:2:14",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5682:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5682:18:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5629:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5629:72:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5629:72:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value4",
												"nodeType": "YulIdentifier",
												"src": "5755:6:14"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5768:9:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5779:3:14",
														"type": "",
														"value": "128"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5764:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "5764:19:14"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5711:43:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5711:73:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5711:73:14"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5277:9:14",
								"type": ""
							},
							{
								"name": "value4",
								"nodeType": "YulTypedName",
								"src": "5289:6:14",
								"type": ""
							},
							{
								"name": "value3",
								"nodeType": "YulTypedName",
								"src": "5297:6:14",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "5305:6:14",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "5313:6:14",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5321:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5332:4:14",
								"type": ""
							}
						],
						"src": "5127:664:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5893:73:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "5910:3:14"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "5915:6:14"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5903:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5903:19:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5903:19:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5931:29:14",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "5950:3:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5955:4:14",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5946:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "5946:14:14"
									},
									"variableNames": [
										{
											"name": "updated_pos",
											"nodeType": "YulIdentifier",
											"src": "5931:11:14"
										}
									]
								}
							]
						},
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "5865:3:14",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "5870:6:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "updated_pos",
								"nodeType": "YulTypedName",
								"src": "5881:11:14",
								"type": ""
							}
						],
						"src": "5797:169:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6016:261:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6026:25:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "6049:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "6031:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6031:20:14"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "6026:1:14"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "6060:25:14",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "6083:1:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "6065:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6065:20:14"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "6060:1:14"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "6223:22:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "6225:16:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "6225:18:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "6225:18:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "6144:1:14"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6151:66:14",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "6219:1:14"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6147:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "6147:74:14"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "6141:2:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6141:81:14"
									},
									"nodeType": "YulIf",
									"src": "6138:2:14"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6255:16:14",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "6266:1:14"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "6269:1:14"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6262:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6262:9:14"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "6255:3:14"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "6003:1:14",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "6006:1:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "6012:3:14",
								"type": ""
							}
						],
						"src": "5972:305:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6328:51:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6338:35:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "6367:5:14"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "6349:17:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6349:24:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6338:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6310:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6320:7:14",
								"type": ""
							}
						],
						"src": "6283:96:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6430:81:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6440:65:14",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "6455:5:14"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6462:42:14",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "6451:3:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6451:54:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6440:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6412:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6422:7:14",
								"type": ""
							}
						],
						"src": "6385:126:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6562:32:14",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6572:16:14",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "6583:5:14"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6572:7:14"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6544:5:14",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6554:7:14",
								"type": ""
							}
						],
						"src": "6517:77:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6628:152:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6645:1:14",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6648:77:14",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6638:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6638:88:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6638:88:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6742:1:14",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6745:4:14",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6735:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6735:15:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6735:15:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6766:1:14",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6769:4:14",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "6759:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6759:15:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6759:15:14"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "6600:180:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6892:119:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "6914:6:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6922:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6910:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "6910:14:14"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "6926:34:14",
												"type": "",
												"value": "Ownable: new owner is the zero a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6903:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6903:58:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6903:58:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "6982:6:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6990:2:14",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6978:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "6978:15:14"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "6995:8:14",
												"type": "",
												"value": "ddress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6971:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "6971:33:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6971:33:14"
								}
							]
						},
						"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "6884:6:14",
								"type": ""
							}
						],
						"src": "6786:225:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7123:128:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "7145:6:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7153:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7141:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "7141:14:14"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "7157:34:14",
												"type": "",
												"value": "StakingRewardsFactory::deploy: a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7134:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "7134:58:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7134:58:14"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "7213:6:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7221:2:14",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7209:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "7209:15:14"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "7226:17:14",
												"type": "",
												"value": "lready deployed"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7202:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "7202:42:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7202:42:14"
								}
							]
						},
						"name": "store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "7115:6:14",
								"type": ""
							}
						],
						"src": "7017:234:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7363:76:14",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "7385:6:14"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7393:1:14",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7381:3:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "7381:14:14"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "7397:34:14",
												"type": "",
												"value": "Ownable: caller is not the owner"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7374:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "7374:58:14"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7374:58:14"
								}
							]
						},
						"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "7355:6:14",
								"type": ""
							}
						],
						"src": "7257:182:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7488:79:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "7545:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7554:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7557:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "7547:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "7547:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "7547:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7511:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7536:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "7518:17:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "7518:24:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "7508:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "7508:35:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "7501:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "7501:43:14"
									},
									"nodeType": "YulIf",
									"src": "7498:2:14"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "7481:5:14",
								"type": ""
							}
						],
						"src": "7445:122:14"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7616:79:14",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "7673:16:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7682:1:14",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7685:1:14",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "7675:6:14"
													},
													"nodeType": "YulFunctionCall",
													"src": "7675:12:14"
												},
												"nodeType": "YulExpressionStatement",
												"src": "7675:12:14"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7639:5:14"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7664:5:14"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "7646:17:14"
														},
														"nodeType": "YulFunctionCall",
														"src": "7646:24:14"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "7636:2:14"
												},
												"nodeType": "YulFunctionCall",
												"src": "7636:35:14"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "7629:6:14"
										},
										"nodeType": "YulFunctionCall",
										"src": "7629:43:14"
									},
									"nodeType": "YulIf",
									"src": "7626:2:14"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "7609:5:14",
								"type": ""
							}
						],
						"src": "7573:122:14"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"StakingRewardsFactory::deploy: a\")\n\n        mstore(add(memPtr, 32), \"lready deployed\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 14,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "2425:1600:0:-:0;;;3431:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:10;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;3512:13:0;3490:12;;:36;;;;;;;;;;;;;;;;;;3542:10;3530:9;:22;;;;3564:1;3556:5;:9;;;;3569:14;:12;;;:14;;:::i;:::-;3431:156;;2425:1600;;586:96:13;639:7;665:10;658:17;;586:96;:::o;2970:224:0:-;1291:12:10;:10;;;:12;;:::i;:::-;1280:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3029:38:0::1;;;;;;;;3039:6;3029:38;;;;3047:4;3029:38;;;;3053:2;3029:38;;;;3057:6;3029:38;;;;3065:1;3029:38;;::::0;3017:6:::1;:9;3024:1;3017:9;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3083:38;;;;;;;;3093:6;3083:38;;;;3101:4;3083:38;;;;3107:2;3083:38;;;;3111:6;3083:38;;;;3119:1;3083:38;;::::0;3071:6:::1;:9;3078:1;3071:9;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3137:39;;;;;;;;3147:7;3137:39;;;;3156:4;3137:39;;;;3162:2;3137:39;;;;3166:6;3137:39;;;;3174:1;3137:39;;::::0;3125:6:::1;:9;3132:1;3125:9;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3189:1;3181:5;:9;;;;2970:224::o:0;1068:85:10:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;7:143:14:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:440::-;;;441:2;429:9;420:7;416:23;412:32;409:2;;;457:1;454;447:12;409:2;500:1;525:64;581:7;572:6;561:9;557:22;525:64;:::i;:::-;515:74;;471:128;638:2;664:64;720:7;711:6;700:9;696:22;664:64;:::i;:::-;654:74;;609:129;399:346;;;;;:::o;751:366::-;;914:67;978:2;973:3;914:67;:::i;:::-;907:74;;990:93;1079:3;990:93;:::i;:::-;1108:2;1103:3;1099:12;1092:19;;897:220;;;:::o;1123:419::-;;1327:2;1316:9;1312:18;1304:26;;1376:9;1370:4;1366:20;1362:1;1351:9;1347:17;1340:47;1404:131;1530:4;1404:131;:::i;:::-;1396:139;;1294:248;;;:::o;1548:169::-;;1666:6;1661:3;1654:19;1706:4;1701:3;1697:14;1682:29;;1644:73;;;;:::o;1723:96::-;;1789:24;1807:5;1789:24;:::i;:::-;1778:35;;1768:51;;;:::o;1825:126::-;;1902:42;1895:5;1891:54;1880:65;;1870:81;;;:::o;1957:77::-;;2023:5;2012:16;;2002:32;;;:::o;2040:182::-;2180:34;2176:1;2168:6;2164:14;2157:58;2146:76;:::o;2228:122::-;2301:24;2319:5;2301:24;:::i;:::-;2294:5;2291:35;2281:2;;2340:1;2337;2330:12;2281:2;2271:79;:::o;2356:122::-;2429:24;2447:5;2429:24;:::i;:::-;2422:5;2419:35;2409:2;;2468:1;2465;2458:12;2409:2;2399:79;:::o;2425:1600:0:-;;;;;;;",
	"deployedSourceMap": "2425:1600:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2535:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3590:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2686:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2512:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:10;;;:::i;:::-;;2485:24:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3336:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1068:85:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3197:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2923:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1994:240:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2535:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3590:433::-;1291:12:10;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3671:31:0::1;3705:32;:46;3738:12;3705:46;;;;;;;;;;;;;;;3671:80;;3794:1;3763:33;;:4;:19;;;;;;;;;;;;:33;;;3755:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;3903:4;3918:12;;;;;;;;;;;3933;3883:63;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3853:4;:19;;;:94;;;;;;;;;;;;;;;;;;3971:12;3951:4;:17;;:32;;;;3987:13;4006:12;3987:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:1:10;3590:433:0::0;;:::o;2686:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2512:20::-;;;;:::o;1700:145:10:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;2485:24:0:-;;;;:::o;3336:92::-;3414:10;3389:6;:13;3396:5;;3389:13;;;;;;;;;;;:21;;;:35;;;;;;;:::i;:::-;;;;;;;;3336:92;:::o;1068:85:10:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;3197:136:0:-;3278:6;:13;3285:5;;3278:13;;;;;;;;;;;:30;;;3253:6;:13;3260:5;;3253:13;;;;;;;;;;;:21;;;:55;3249:81;;3324:1;3315:5;;:10;;;;;;;:::i;:::-;;;;;;;;3249:81;3197:136;:::o;2923:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1994:240:10:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:13:-;639:7;665:10;658:17;;586:96;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:14:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:262::-;;1086:2;1074:9;1065:7;1061:23;1057:32;1054:2;;;1102:1;1099;1092:12;1054:2;1145:1;1170:53;1215:7;1206:6;1195:9;1191:22;1170:53;:::i;:::-;1160:63;;1116:117;1044:196;;;;:::o;1246:118::-;1333:24;1351:5;1333:24;:::i;:::-;1328:3;1321:37;1311:53;;:::o;1370:366::-;;1533:67;1597:2;1592:3;1533:67;:::i;:::-;1526:74;;1609:93;1698:3;1609:93;:::i;:::-;1727:2;1722:3;1718:12;1711:19;;1516:220;;;:::o;1742:366::-;;1905:67;1969:2;1964:3;1905:67;:::i;:::-;1898:74;;1981:93;2070:3;1981:93;:::i;:::-;2099:2;2094:3;2090:12;2083:19;;1888:220;;;:::o;2114:366::-;;2277:67;2341:2;2336:3;2277:67;:::i;:::-;2270:74;;2353:93;2442:3;2353:93;:::i;:::-;2471:2;2466:3;2462:12;2455:19;;2260:220;;;:::o;2486:118::-;2573:24;2591:5;2573:24;:::i;:::-;2568:3;2561:37;2551:53;;:::o;2610:222::-;;2741:2;2730:9;2726:18;2718:26;;2754:71;2822:1;2811:9;2807:17;2798:6;2754:71;:::i;:::-;2708:124;;;;:::o;2838:442::-;;3025:2;3014:9;3010:18;3002:26;;3038:71;3106:1;3095:9;3091:17;3082:6;3038:71;:::i;:::-;3119:72;3187:2;3176:9;3172:18;3163:6;3119:72;:::i;:::-;3201;3269:2;3258:9;3254:18;3245:6;3201:72;:::i;:::-;2992:288;;;;;;:::o;3286:332::-;;3445:2;3434:9;3430:18;3422:26;;3458:71;3526:1;3515:9;3511:17;3502:6;3458:71;:::i;:::-;3539:72;3607:2;3596:9;3592:18;3583:6;3539:72;:::i;:::-;3412:206;;;;;:::o;3624:419::-;;3828:2;3817:9;3813:18;3805:26;;3877:9;3871:4;3867:20;3863:1;3852:9;3848:17;3841:47;3905:131;4031:4;3905:131;:::i;:::-;3897:139;;3795:248;;;:::o;4049:419::-;;4253:2;4242:9;4238:18;4230:26;;4302:9;4296:4;4292:20;4288:1;4277:9;4273:17;4266:47;4330:131;4456:4;4330:131;:::i;:::-;4322:139;;4220:248;;;:::o;4474:419::-;;4678:2;4667:9;4663:18;4655:26;;4727:9;4721:4;4717:20;4713:1;4702:9;4698:17;4691:47;4755:131;4881:4;4755:131;:::i;:::-;4747:139;;4645:248;;;:::o;4899:222::-;;5030:2;5019:9;5015:18;5007:26;;5043:71;5111:1;5100:9;5096:17;5087:6;5043:71;:::i;:::-;4997:124;;;;:::o;5127:664::-;;5370:3;5359:9;5355:19;5347:27;;5384:71;5452:1;5441:9;5437:17;5428:6;5384:71;:::i;:::-;5465:72;5533:2;5522:9;5518:18;5509:6;5465:72;:::i;:::-;5547;5615:2;5604:9;5600:18;5591:6;5547:72;:::i;:::-;5629;5697:2;5686:9;5682:18;5673:6;5629:72;:::i;:::-;5711:73;5779:3;5768:9;5764:19;5755:6;5711:73;:::i;:::-;5337:454;;;;;;;;:::o;5797:169::-;;5915:6;5910:3;5903:19;5955:4;5950:3;5946:14;5931:29;;5893:73;;;;:::o;5972:305::-;;6031:20;6049:1;6031:20;:::i;:::-;6026:25;;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6219:1;6151:66;6147:74;6144:1;6141:81;6138:2;;;6225:18;;:::i;:::-;6138:2;6269:1;6266;6262:9;6255:16;;6016:261;;;;:::o;6283:96::-;;6349:24;6367:5;6349:24;:::i;:::-;6338:35;;6328:51;;;:::o;6385:126::-;;6462:42;6455:5;6451:54;6440:65;;6430:81;;;:::o;6517:77::-;;6583:5;6572:16;;6562:32;;;:::o;6600:180::-;6648:77;6645:1;6638:88;6745:4;6742:1;6735:15;6769:4;6766:1;6759:15;6786:225;6926:34;6922:1;6914:6;6910:14;6903:58;6995:8;6990:2;6982:6;6978:15;6971:33;6892:119;:::o;7017:234::-;7157:34;7153:1;7145:6;7141:14;7134:58;7226:17;7221:2;7213:6;7209:15;7202:42;7123:128;:::o;7257:182::-;7397:34;7393:1;7385:6;7381:14;7374:58;7363:76;:::o;7445:122::-;7518:24;7536:5;7518:24;:::i;:::-;7511:5;7508:35;7498:2;;7557:1;7554;7547:12;7498:2;7488:79;:::o;7573:122::-;7646:24;7664:5;7646:24;:::i;:::-;7639:5;7636:35;7626:2;;7685:1;7682;7675:12;7626:2;7616:79;:::o",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\ncontract Staking {\n\tuint256 oneDay = 24 * 60 * 60;\n\tstruct UserData {\n\t\tbool allowed;\n\t\tbool created;\n\t\tuint256 level1Tokens;\n\t\tuint256 level2Tokens;\n\t\tuint256 level3Tokens;\n\t\tuint256 level1Reward;\n\t\tuint256 level2Reward;\n\t\tuint256 level3Reward;\n\t\t//\n\t\t//\n\t\tuint256 tokens;\n\t\t//\n\t\t//\n\t\tuint256 lastUpdateDate;\n\t}\n\n\tmapping(address => UserData) users;\n\n\tStakingFactory factory;\n\tIERC20 rewardsToken;\n\tIERC20 stakingToken;\n\n\tfunction deposit(uint256 amount) public {\n\t\t// \t\trequire(users[msg.sender].allowed);\n\t\t// TODO:add fix for update only if success and succeds.\n\t\tfactory.updateLevel(amount);\n\t\tuint256 level = factory.level();\n\t\tif (level == 1) {\n\t\t\tusers[msg.sender].level1Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 2) {\n\t\t\tusers[msg.sender].level2Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 3) {\n\t\t\tusers[msg.sender].level3Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t}\n\t\tusers[msg.sender].tokens += amount;\n\t\tusers[msg.sender].lastUpdateDate = block.timestamp;\n\t\tfactory.updateTokens(amount);\n\t}\n\n\tfunction calculateReward() public returns (UserData memory user) {\n\t\tif (users[msg.sender].level1Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level1Reward = ((8219 * users[msg.sender].level1Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level2Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level2Reward = ((3082 * users[msg.sender].level2Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level3Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 45 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 10000;\n\t\t\t}\n\t\t} else {\n\t\t\tif (block.timestamp > factory.startTime() + 60 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\treturn users[msg.sender];\n\t}\n\n\tconstructor(\n\t\taddress _factory,\n\t\taddress _rewardsToken,\n\t\taddress _stakingToken\n\t) {\n\t\tfactory = StakingFactory(_factory);\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstakingToken = IERC20(_stakingToken);\n\t}\n}\n\ncontract StakingFactory is Ownable {\n\tIERC20 rewardsToken;\n\tuint256 public startTime;\n\tuint256 public level;\n\taddress[] public stakingTokens;\n\n\tstruct StakingRewardsInfo {\n\t\taddress stakingRewards;\n\t\tuint256 rewardAmount;\n\t}\n\n\t// rewards info by staking token\n\tmapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\n\n\tstruct LevelData {\n\t\tuint256 allowedForXCoins;\n\t\tuint256 rewardPercentTimes100;\n\t\tuint256 lockedDuration;\n\t\tuint256 allowedReward;\n\t\tuint256 alloted;\n\t}\n\n\tmapping(uint256 => LevelData) public levels;\n\n\tfunction createLevels() internal onlyOwner {\n\t\tlevels[1] = LevelData(300000, 8219, 30, 246575, 0);\n\t\tlevels[2] = LevelData(600000, 3082, 45, 184932, 0);\n\t\tlevels[3] = LevelData(1000000, 2630, 60, 263014, 0);\n\n\t\tlevel = 1;\n\t}\n\n\tfunction updateLevel(uint256 tokenValue) public {\n\t\tif (levels[level].alloted >= levels[level].allowedForXCoins) {\n\t\t\tlevel += 1;\n\t\t}\n\t}\n\n\tfunction updateTokens(uint256 tokenValue) public {\n\t\tlevels[level].alloted += tokenValue;\n\t}\n\n\tconstructor(address _rewardsToken, uint256 _startTime) {\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstartTime = _startTime;\n\t\tlevel = 1;\n\t\tcreateLevels();\n\t}\n\n\tfunction deploy(address stakingToken, uint256 rewardAmount) public onlyOwner {\n\t\tStakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\n\t\trequire(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\n\n\t\tinfo.stakingRewards = address(new Staking(address(this), address(rewardsToken), stakingToken));\n\t\tinfo.rewardAmount = rewardAmount;\n\t\tstakingTokens.push(stakingToken);\n\t}\n}\n",
	"sourcePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
	"ast": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1444],
			"ERC20": [1343],
			"IERC20": [1421],
			"Ownable": [842],
			"Staking": [350],
			"StakingFactory": [555]
		},
		"id": 556,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 1344,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 843,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 350,
				"linearizedBaseContracts": [350],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 350,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$555",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 555,
								"src": "520:14:0"
							},
							"referencedDeclaration": 555,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$555",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 160,
							"nodeType": "Block",
							"src": "630:703:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 53,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "755:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 50,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "735:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateLevel",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 455,
											"src": "735:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 55,
									"nodeType": "ExpressionStatement",
									"src": "735:27:0"
								},
								{
									"assignments": [57],
									"declarations": [
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 160,
											"src": "766:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 56,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 61,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 58,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "782:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 59,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 359,
											"src": "782:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "782:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "766:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 62,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 57,
											"src": "805:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 63,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "814:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "805:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 88,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 86,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 57,
												"src": "942:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 87,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "951:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "942:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 112,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 110,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "1079:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1088:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "1079:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 134,
											"nodeType": "IfStatement",
											"src": "1075:131:0",
											"trueBody": {
												"id": 133,
												"nodeType": "Block",
												"src": "1091:115:0",
												"statements": [
													{
														"expression": {
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 113,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 116,
																	"indexExpression": {
																		"expression": {
																			"id": 114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1102:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1102:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1096:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1096:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1096:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 120,
														"nodeType": "ExpressionStatement",
														"src": "1096:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 124,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1167:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 128,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1187:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1179:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 126,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1179:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1179:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 130,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1194:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1141:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "1141:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1141:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 132,
														"nodeType": "ExpressionStatement",
														"src": "1141:60:0"
													}
												]
											}
										},
										"id": 135,
										"nodeType": "IfStatement",
										"src": "938:268:0",
										"trueBody": {
											"id": 109,
											"nodeType": "Block",
											"src": "954:115:0",
											"statements": [
												{
													"expression": {
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 89,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "959:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 92,
																"indexExpression": {
																	"expression": {
																		"id": 90,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "965:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "965:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "959:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 94,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "959:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 96,
													"nodeType": "ExpressionStatement",
													"src": "959:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1030:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1030:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 104,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1050:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1042:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1042:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1042:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 106,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 97,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1004:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1421",
																	"typeString": "contract IERC20"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1402,
															"src": "1004:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1004:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 108,
													"nodeType": "ExpressionStatement",
													"src": "1004:60:0"
												}
											]
										}
									},
									"id": 136,
									"nodeType": "IfStatement",
									"src": "801:405:0",
									"trueBody": {
										"id": 85,
										"nodeType": "Block",
										"src": "817:115:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 65,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 68,
															"indexExpression": {
																"expression": {
																	"id": 66,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "828:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "822:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "822:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 70,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "822:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "822:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "893:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "893:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 80,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "913:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "905:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 78,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "905:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "905:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 73,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "867:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1421",
																"typeString": "contract IERC20"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "867:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "867:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 137,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 140,
												"indexExpression": {
													"expression": {
														"id": 138,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1215:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1215:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1209:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 141,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1209:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 142,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1237:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1209:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 144,
									"nodeType": "ExpressionStatement",
									"src": "1209:34:0"
								},
								{
									"expression": {
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 145,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 148,
												"indexExpression": {
													"expression": {
														"id": 146,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1253:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1253:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1247:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 149,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1247:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 150,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1282:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1282:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1247:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 153,
									"nodeType": "ExpressionStatement",
									"src": "1247:50:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 157,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1322:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 154,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1301:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 156,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateTokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 468,
											"src": "1301:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1301:28:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 159,
									"nodeType": "ExpressionStatement",
									"src": "1301:28:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 161,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 350,
						"src": "590:743:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 320,
							"nodeType": "Block",
							"src": "1401:810:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 167,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 170,
												"indexExpression": {
													"expression": {
														"id": 168,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1415:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1415:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1409:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 171,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1409:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1443:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1409:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 205,
									"nodeType": "IfStatement",
									"src": "1405:201:0",
									"trueBody": {
										"id": 204,
										"nodeType": "Block",
										"src": "1446:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 174,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1455:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 176,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1473:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1473:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1495:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 180,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1495:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1473:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1455:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1451:151:0",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "1508:94:0",
													"statements": [
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 184,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1514:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 187,
																		"indexExpression": {
																			"expression": {
																				"id": 185,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1520:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1520:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1514:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1514:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1549:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 190,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1556:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 193,
																								"indexExpression": {
																									"expression": {
																										"id": 191,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1562:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 192,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1562:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1556:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 194,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1556:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1549:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 196,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1548:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1547:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1591:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1547:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1514:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "1514:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 206,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1613:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 209,
												"indexExpression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1619:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1613:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 210,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1613:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 211,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1647:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1613:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 244,
									"nodeType": "IfStatement",
									"src": "1609:201:0",
									"trueBody": {
										"id": 243,
										"nodeType": "Block",
										"src": "1650:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1659:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 215,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1677:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 219,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1677:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1659:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "IfStatement",
												"src": "1655:151:0",
												"trueBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "1712:94:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 223,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1718:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 226,
																		"indexExpression": {
																			"expression": {
																				"id": 224,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1724:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1724:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1718:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1718:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1753:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 229,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1760:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 232,
																								"indexExpression": {
																									"expression": {
																										"id": 230,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1766:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 231,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1766:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1760:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 233,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1760:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1753:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 235,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1752:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 236,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1751:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1795:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1751:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1718:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "1718:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 245,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 248,
												"indexExpression": {
													"expression": {
														"id": 246,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1823:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1823:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1817:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 249,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1817:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 250,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1851:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1817:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 313,
										"nodeType": "Block",
										"src": "2020:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 283,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2029:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2029:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 285,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "2047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "2047:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2069:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 289,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2069:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2047:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2029:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "2025:151:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "2082:94:0",
													"statements": [
														{
															"expression": {
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 293,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "2088:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 296,
																		"indexExpression": {
																			"expression": {
																				"id": 294,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2094:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2094:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2088:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "2088:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 298,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2123:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 299,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "2130:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 302,
																								"indexExpression": {
																									"expression": {
																										"id": 300,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2136:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2136:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2130:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 303,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "2130:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2123:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 305,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2122:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 306,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2121:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2165:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "2121:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2088:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "2088:82:0"
														}
													]
												}
											}
										]
									},
									"id": 314,
									"nodeType": "IfStatement",
									"src": "1813:367:0",
									"trueBody": {
										"id": 282,
										"nodeType": "Block",
										"src": "1854:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 252,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1863:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 254,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1881:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1881:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1903:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 258,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1903:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1881:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1863:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "1859:151:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "1916:94:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 262,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1922:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 265,
																		"indexExpression": {
																			"expression": {
																				"id": 263,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1928:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1922:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1922:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1957:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 268,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1964:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 271,
																								"indexExpression": {
																									"expression": {
																										"id": 269,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1970:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 270,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1970:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1964:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 272,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1964:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1957:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 274,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1956:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 275,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1955:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1955:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1922:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "1922:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 315,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2190:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 318,
										"indexExpression": {
											"expression": {
												"id": 316,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2196:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 317,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2196:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2190:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 166,
									"id": 319,
									"nodeType": "Return",
									"src": "2183:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 321,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 162,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1360:2:0"
						},
						"returnParameters": {
							"id": 166,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 321,
									"src": "1379:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1379:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1379:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1378:22:0"
						},
						"scope": 350,
						"src": "1336:875:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 348,
							"nodeType": "Block",
							"src": "2299:122:0",
							"statements": [
								{
									"expression": {
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 330,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 332,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "2328:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 331,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 555,
												"src": "2313:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$555_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2313:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2303:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$555",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 335,
									"nodeType": "ExpressionStatement",
									"src": "2303:34:0"
								},
								{
									"expression": {
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 336,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2341:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 338,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 325,
													"src": "2363:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 337,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2356:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 339,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2356:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2341:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 341,
									"nodeType": "ExpressionStatement",
									"src": "2341:36:0"
								},
								{
									"expression": {
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 342,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2381:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 344,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "2403:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 343,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2396:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 345,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2396:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2381:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 347,
									"nodeType": "ExpressionStatement",
									"src": "2381:36:0"
								}
							]
						},
						"id": 349,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 328,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2229:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2229:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2249:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 324,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2249:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2274:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2274:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2225:73:0"
						},
						"returnParameters": {
							"id": 329,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2299:0:0"
						},
						"scope": 350,
						"src": "2214:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "167:2256:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 351,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 842,
							"src": "2452:7:0"
						},
						"id": 352,
						"nodeType": "InheritanceSpecifier",
						"src": "2452:7:0"
					}
				],
				"contractDependencies": [350, 842, 1444],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 555,
				"linearizedBaseContracts": [555, 842, 1444],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 355,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2463:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 354,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 353,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "2463:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "2463:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 357,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2485:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 356,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2485:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 359,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2512:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 358,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2512:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 362,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2535:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 360,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2535:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 361,
							"nodeType": "ArrayTypeName",
							"src": "2535:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 367,
						"members": [
							{
								"constant": false,
								"id": 364,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2599:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 363,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2599:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 366,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2625:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 365,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2625:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2569:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 372,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2686:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 371,
							"keyType": {
								"id": 368,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2694:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2686:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 370,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 369,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 367,
									"src": "2705:18:0"
								},
								"referencedDeclaration": 367,
								"src": "2705:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 383,
						"members": [
							{
								"constant": false,
								"id": 374,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2789:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 373,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2789:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 376,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2817:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 375,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2817:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 378,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2850:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 377,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2850:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 380,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2876:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 379,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2876:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 382,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2901:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 381,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2901:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2768:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "b2596a67",
						"id": 388,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2923:43:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
							"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 387,
							"keyType": {
								"id": 384,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2931:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"nodeType": "Mapping",
							"src": "2923:29:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
								"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 386,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 385,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 383,
									"src": "2942:9:0"
								},
								"referencedDeclaration": 383,
								"src": "2942:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$383_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 433,
							"nodeType": "Block",
							"src": "3013:181:0",
							"statements": [
								{
									"expression": {
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 393,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3017:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 395,
											"indexExpression": {
												"hexValue": "31",
												"id": 394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3024:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3017:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3053:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												},
												{
													"hexValue": "30",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3065:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 396,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3029:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3029:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3017:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 404,
									"nodeType": "ExpressionStatement",
									"src": "3017:50:0"
								},
								{
									"expression": {
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 405,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3071:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 407,
											"indexExpression": {
												"hexValue": "32",
												"id": 406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3078:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3071:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3107:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												},
												{
													"hexValue": "30",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3119:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 408,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3083:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 414,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3083:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3071:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 416,
									"nodeType": "ExpressionStatement",
									"src": "3071:50:0"
								},
								{
									"expression": {
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 417,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3125:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 419,
											"indexExpression": {
												"hexValue": "33",
												"id": 418,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3132:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3125:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3162:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												},
												{
													"hexValue": "30",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3174:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 420,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3137:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3137:39:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3125:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 428,
									"nodeType": "ExpressionStatement",
									"src": "3125:51:0"
								},
								{
									"expression": {
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 429,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3181:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 430,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3189:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3181:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 432,
									"nodeType": "ExpressionStatement",
									"src": "3181:9:0"
								}
							]
						},
						"id": 434,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 391,
								"modifierName": {
									"id": 390,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3003:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3003:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 389,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2991:2:0"
						},
						"returnParameters": {
							"id": 392,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3013:0:0"
						},
						"scope": 555,
						"src": "2970:224:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 454,
							"nodeType": "Block",
							"src": "3245:88:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 439,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 441,
												"indexExpression": {
													"id": 440,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3253:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 442,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3253:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"expression": {
												"baseExpression": {
													"id": 443,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 445,
												"indexExpression": {
													"id": 444,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3278:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 446,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "allowedForXCoins",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 374,
											"src": "3278:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3253:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 453,
									"nodeType": "IfStatement",
									"src": "3249:81:0",
									"trueBody": {
										"id": 452,
										"nodeType": "Block",
										"src": "3310:20:0",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3315:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3315:10:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "92e0150b",
						"id": 455,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateLevel",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 437,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3218:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3218:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3217:20:0"
						},
						"returnParameters": {
							"id": 438,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3245:0:0"
						},
						"scope": 555,
						"src": "3197:136:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 467,
							"nodeType": "Block",
							"src": "3385:43:0",
							"statements": [
								{
									"expression": {
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 460,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 462,
												"indexExpression": {
													"id": 461,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3389:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 463,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3389:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 464,
											"name": "tokenValue",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 457,
											"src": "3414:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3389:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 466,
									"nodeType": "ExpressionStatement",
									"src": "3389:35:0"
								}
							]
						},
						"functionSelector": "7bdecea1",
						"id": 468,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateTokens",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 458,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3358:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3357:20:0"
						},
						"returnParameters": {
							"id": 459,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3385:0:0"
						},
						"scope": 555,
						"src": "3336:92:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 492,
							"nodeType": "Block",
							"src": "3486:101:0",
							"statements": [
								{
									"expression": {
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 475,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3490:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 477,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "3512:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 476,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "3505:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 478,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3505:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "3490:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 480,
									"nodeType": "ExpressionStatement",
									"src": "3490:36:0"
								},
								{
									"expression": {
										"id": 483,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 481,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 357,
											"src": "3530:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 482,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 472,
											"src": "3542:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3530:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 484,
									"nodeType": "ExpressionStatement",
									"src": "3530:22:0"
								},
								{
									"expression": {
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 485,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3556:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 486,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3564:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3556:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 488,
									"nodeType": "ExpressionStatement",
									"src": "3556:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 489,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 434,
											"src": "3569:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3569:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 491,
									"nodeType": "ExpressionStatement",
									"src": "3569:14:0"
								}
							]
						},
						"id": 493,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 473,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 470,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3443:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3443:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3466:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3442:43:0"
						},
						"returnParameters": {
							"id": 474,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3486:0:0"
						},
						"scope": 555,
						"src": "3431:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 553,
							"nodeType": "Block",
							"src": "3667:356:0",
							"statements": [
								{
									"assignments": [504],
									"declarations": [
										{
											"constant": false,
											"id": 504,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "3671:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 503,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 502,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 367,
													"src": "3671:18:0"
												},
												"referencedDeclaration": 367,
												"src": "3671:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 508,
									"initialValue": {
										"baseExpression": {
											"id": 505,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 372,
											"src": "3705:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 507,
										"indexExpression": {
											"id": 506,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 495,
											"src": "3738:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3705:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3671:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 516,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 510,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3763:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 364,
													"src": "3763:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3794:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3786:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3763:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3798:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 509,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3755:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3755:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 519,
									"nodeType": "ExpressionStatement",
									"src": "3755:93:0"
								},
								{
									"expression": {
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 520,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3853:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 522,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 364,
											"src": "3853:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3895:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3895:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 534,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3910:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3883:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$350_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 350,
																"src": "3887:7:0"
															},
															"referencedDeclaration": 350,
															"src": "3887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$350",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												],
												"id": 524,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3875:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 538,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3875:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3853:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 540,
									"nodeType": "ExpressionStatement",
									"src": "3853:94:0"
								},
								{
									"expression": {
										"id": 545,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 541,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3951:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 543,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 366,
											"src": "3951:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 544,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 497,
											"src": "3971:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3951:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 546,
									"nodeType": "ExpressionStatement",
									"src": "3951:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 550,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 495,
												"src": "4006:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 547,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 362,
												"src": "3987:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 549,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3987:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3987:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 552,
									"nodeType": "ExpressionStatement",
									"src": "3987:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 554,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 500,
								"modifierName": {
									"id": 499,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3657:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3657:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 498,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3606:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 494,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3606:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3628:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3628:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3605:44:0"
						},
						"returnParameters": {
							"id": 501,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3667:0:0"
						},
						"scope": 555,
						"src": "3590:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "2425:1600:0"
			}
		],
		"src": "32:3994:0"
	},
	"legacyAST": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1444],
			"ERC20": [1343],
			"IERC20": [1421],
			"Ownable": [842],
			"Staking": [350],
			"StakingFactory": [555]
		},
		"id": 556,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 1344,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 556,
				"sourceUnit": 843,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 350,
				"linearizedBaseContracts": [350],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 350,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$555",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 555,
								"src": "520:14:0"
							},
							"referencedDeclaration": 555,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$555",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 350,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 160,
							"nodeType": "Block",
							"src": "630:703:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 53,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "755:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 50,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "735:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateLevel",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 455,
											"src": "735:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 55,
									"nodeType": "ExpressionStatement",
									"src": "735:27:0"
								},
								{
									"assignments": [57],
									"declarations": [
										{
											"constant": false,
											"id": 57,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 160,
											"src": "766:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 56,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 61,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 58,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "782:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 59,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 359,
											"src": "782:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 60,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "782:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "766:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 62,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 57,
											"src": "805:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 63,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "814:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "805:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 88,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 86,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 57,
												"src": "942:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 87,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "951:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "942:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 112,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 110,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "1079:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1088:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "1079:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 134,
											"nodeType": "IfStatement",
											"src": "1075:131:0",
											"trueBody": {
												"id": 133,
												"nodeType": "Block",
												"src": "1091:115:0",
												"statements": [
													{
														"expression": {
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 113,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 116,
																	"indexExpression": {
																		"expression": {
																			"id": 114,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1102:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1102:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1096:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1096:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1096:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 120,
														"nodeType": "ExpressionStatement",
														"src": "1096:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 124,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1167:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 128,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1187:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$350",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1179:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 126,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1179:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1179:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 130,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1194:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1141:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "1141:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1141:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 132,
														"nodeType": "ExpressionStatement",
														"src": "1141:60:0"
													}
												]
											}
										},
										"id": 135,
										"nodeType": "IfStatement",
										"src": "938:268:0",
										"trueBody": {
											"id": 109,
											"nodeType": "Block",
											"src": "954:115:0",
											"statements": [
												{
													"expression": {
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 89,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "959:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 92,
																"indexExpression": {
																	"expression": {
																		"id": 90,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "965:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "965:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "959:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "959:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 94,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "959:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 96,
													"nodeType": "ExpressionStatement",
													"src": "959:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1030:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1030:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 104,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1050:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$350",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1042:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1042:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1042:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 106,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 97,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1004:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1421",
																	"typeString": "contract IERC20"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1402,
															"src": "1004:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1004:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 108,
													"nodeType": "ExpressionStatement",
													"src": "1004:60:0"
												}
											]
										}
									},
									"id": 136,
									"nodeType": "IfStatement",
									"src": "801:405:0",
									"trueBody": {
										"id": 85,
										"nodeType": "Block",
										"src": "817:115:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 65,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 68,
															"indexExpression": {
																"expression": {
																	"id": 66,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "828:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "822:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "822:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 70,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "822:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "822:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "893:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "893:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 80,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "913:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$350",
																		"typeString": "contract Staking"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "905:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 78,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "905:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "905:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 73,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "867:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1421",
																"typeString": "contract IERC20"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "867:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "867:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 137,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 140,
												"indexExpression": {
													"expression": {
														"id": 138,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1215:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1215:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1209:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 141,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1209:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 142,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1237:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1209:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 144,
									"nodeType": "ExpressionStatement",
									"src": "1209:34:0"
								},
								{
									"expression": {
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 145,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 148,
												"indexExpression": {
													"expression": {
														"id": 146,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1253:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1253:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1247:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 149,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1247:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 150,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1282:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1282:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1247:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 153,
									"nodeType": "ExpressionStatement",
									"src": "1247:50:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 157,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 47,
												"src": "1322:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 154,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "1301:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$555",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 156,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateTokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 468,
											"src": "1301:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1301:28:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 159,
									"nodeType": "ExpressionStatement",
									"src": "1301:28:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 161,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 350,
						"src": "590:743:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 320,
							"nodeType": "Block",
							"src": "1401:810:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 167,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 170,
												"indexExpression": {
													"expression": {
														"id": 168,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1415:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1415:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1409:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 171,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1409:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1443:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1409:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 205,
									"nodeType": "IfStatement",
									"src": "1405:201:0",
									"trueBody": {
										"id": 204,
										"nodeType": "Block",
										"src": "1446:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 174,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1455:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 176,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1473:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1473:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1495:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 180,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1495:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1473:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1455:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 203,
												"nodeType": "IfStatement",
												"src": "1451:151:0",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "1508:94:0",
													"statements": [
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 184,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1514:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 187,
																		"indexExpression": {
																			"expression": {
																				"id": 185,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1520:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1520:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1514:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1514:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1549:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 190,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1556:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 193,
																								"indexExpression": {
																									"expression": {
																										"id": 191,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1562:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 192,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1562:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1556:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 194,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1556:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1549:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 196,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1548:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1547:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1591:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1547:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1514:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "1514:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 206,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1613:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 209,
												"indexExpression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1619:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1613:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 210,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1613:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 211,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1647:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1613:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 244,
									"nodeType": "IfStatement",
									"src": "1609:201:0",
									"trueBody": {
										"id": 243,
										"nodeType": "Block",
										"src": "1650:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 213,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1659:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 215,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1677:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 219,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1704:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1677:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1659:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "IfStatement",
												"src": "1655:151:0",
												"trueBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "1712:94:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 223,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1718:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 226,
																		"indexExpression": {
																			"expression": {
																				"id": 224,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1724:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1724:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1718:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1718:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1753:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 229,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1760:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 232,
																								"indexExpression": {
																									"expression": {
																										"id": 230,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1766:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 231,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1766:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1760:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 233,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1760:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1753:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 235,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1752:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 236,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1751:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1795:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1751:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1718:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "1718:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 245,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1817:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 248,
												"indexExpression": {
													"expression": {
														"id": 246,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1823:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1823:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1817:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 249,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1817:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 250,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1851:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1817:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 313,
										"nodeType": "Block",
										"src": "2020:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 283,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2029:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2029:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 285,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "2047:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "2047:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2069:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 289,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2069:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2047:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2029:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "2025:151:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "2082:94:0",
													"statements": [
														{
															"expression": {
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 293,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "2088:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 296,
																		"indexExpression": {
																			"expression": {
																				"id": 294,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2094:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2094:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2088:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "2088:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 304,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 298,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2123:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 299,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "2130:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 302,
																								"indexExpression": {
																									"expression": {
																										"id": 300,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2136:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 301,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2136:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2130:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 303,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "2130:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2123:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 305,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2122:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 306,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2121:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2165:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "2121:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2088:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "2088:82:0"
														}
													]
												}
											}
										]
									},
									"id": 314,
									"nodeType": "IfStatement",
									"src": "1813:367:0",
									"trueBody": {
										"id": 282,
										"nodeType": "Block",
										"src": "1854:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 252,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1863:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 254,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "1881:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1881:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1903:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 258,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1903:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1881:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1863:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "1859:151:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "1916:94:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 262,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1922:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 265,
																		"indexExpression": {
																			"expression": {
																				"id": 263,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1928:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1922:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1922:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1957:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 268,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1964:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 271,
																								"indexExpression": {
																									"expression": {
																										"id": 269,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1970:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 270,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1970:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1964:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 272,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1964:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1957:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 274,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1956:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 275,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1955:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "1955:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1922:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "1922:82:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 315,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2190:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 318,
										"indexExpression": {
											"expression": {
												"id": 316,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2196:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 317,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2196:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2190:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 166,
									"id": 319,
									"nodeType": "Return",
									"src": "2183:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 321,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 162,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1360:2:0"
						},
						"returnParameters": {
							"id": 166,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 321,
									"src": "1379:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 164,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 163,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1379:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1379:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1378:22:0"
						},
						"scope": 350,
						"src": "1336:875:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 348,
							"nodeType": "Block",
							"src": "2299:122:0",
							"statements": [
								{
									"expression": {
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 330,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 332,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "2328:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 331,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 555,
												"src": "2313:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$555_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2313:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$555",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2303:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$555",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 335,
									"nodeType": "ExpressionStatement",
									"src": "2303:34:0"
								},
								{
									"expression": {
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 336,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2341:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 338,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 325,
													"src": "2363:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 337,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2356:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 339,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2356:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2341:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 341,
									"nodeType": "ExpressionStatement",
									"src": "2341:36:0"
								},
								{
									"expression": {
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 342,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2381:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 344,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "2403:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 343,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "2396:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 345,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2396:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "2381:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 347,
									"nodeType": "ExpressionStatement",
									"src": "2381:36:0"
								}
							]
						},
						"id": 349,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 328,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2229:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2229:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2249:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 324,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2249:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "2274:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2274:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2225:73:0"
						},
						"returnParameters": {
							"id": 329,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2299:0:0"
						},
						"scope": 350,
						"src": "2214:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "167:2256:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 351,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 842,
							"src": "2452:7:0"
						},
						"id": 352,
						"nodeType": "InheritanceSpecifier",
						"src": "2452:7:0"
					}
				],
				"contractDependencies": [350, 842, 1444],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 555,
				"linearizedBaseContracts": [555, 842, 1444],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 355,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2463:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1421",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 354,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 353,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1421,
								"src": "2463:6:0"
							},
							"referencedDeclaration": 1421,
							"src": "2463:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1421",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 357,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2485:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 356,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2485:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 359,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2512:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 358,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2512:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 362,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2535:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 360,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2535:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 361,
							"nodeType": "ArrayTypeName",
							"src": "2535:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 367,
						"members": [
							{
								"constant": false,
								"id": 364,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2599:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 363,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2599:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 366,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 367,
								"src": "2625:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 365,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2625:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2569:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 372,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2686:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 371,
							"keyType": {
								"id": 368,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2694:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2686:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 370,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 369,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 367,
									"src": "2705:18:0"
								},
								"referencedDeclaration": 367,
								"src": "2705:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 383,
						"members": [
							{
								"constant": false,
								"id": 374,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2789:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 373,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2789:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 376,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2817:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 375,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2817:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 378,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2850:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 377,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2850:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 380,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2876:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 379,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2876:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 382,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 383,
								"src": "2901:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 381,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2901:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 555,
						"src": "2768:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "b2596a67",
						"id": 388,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 555,
						"src": "2923:43:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
							"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 387,
							"keyType": {
								"id": 384,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2931:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"nodeType": "Mapping",
							"src": "2923:29:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
								"typeString": "mapping(uint256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 386,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 385,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 383,
									"src": "2942:9:0"
								},
								"referencedDeclaration": 383,
								"src": "2942:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$383_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 433,
							"nodeType": "Block",
							"src": "3013:181:0",
							"statements": [
								{
									"expression": {
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 393,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3017:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 395,
											"indexExpression": {
												"hexValue": "31",
												"id": 394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3024:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3017:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3053:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												},
												{
													"hexValue": "30",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3065:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 396,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3029:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3029:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3017:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 404,
									"nodeType": "ExpressionStatement",
									"src": "3017:50:0"
								},
								{
									"expression": {
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 405,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3071:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 407,
											"indexExpression": {
												"hexValue": "32",
												"id": 406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3078:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3071:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3107:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												},
												{
													"hexValue": "30",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3119:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 408,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3083:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 414,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3083:38:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3071:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 416,
									"nodeType": "ExpressionStatement",
									"src": "3071:50:0"
								},
								{
									"expression": {
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 417,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 388,
												"src": "3125:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 419,
											"indexExpression": {
												"hexValue": "33",
												"id": 418,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3132:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "3125:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3162:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												},
												{
													"hexValue": "30",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3174:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 420,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 383,
												"src": "3137:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$383_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3137:39:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$383_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "3125:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$383_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 428,
									"nodeType": "ExpressionStatement",
									"src": "3125:51:0"
								},
								{
									"expression": {
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 429,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3181:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 430,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3189:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3181:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 432,
									"nodeType": "ExpressionStatement",
									"src": "3181:9:0"
								}
							]
						},
						"id": 434,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 391,
								"modifierName": {
									"id": 390,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3003:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3003:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 389,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2991:2:0"
						},
						"returnParameters": {
							"id": 392,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3013:0:0"
						},
						"scope": 555,
						"src": "2970:224:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 454,
							"nodeType": "Block",
							"src": "3245:88:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 439,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 441,
												"indexExpression": {
													"id": 440,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3253:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 442,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3253:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"expression": {
												"baseExpression": {
													"id": 443,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 445,
												"indexExpression": {
													"id": 444,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3278:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 446,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "allowedForXCoins",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 374,
											"src": "3278:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3253:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 453,
									"nodeType": "IfStatement",
									"src": "3249:81:0",
									"trueBody": {
										"id": 452,
										"nodeType": "Block",
										"src": "3310:20:0",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3315:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "3315:10:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "92e0150b",
						"id": 455,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateLevel",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 437,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3218:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3218:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3217:20:0"
						},
						"returnParameters": {
							"id": 438,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3245:0:0"
						},
						"scope": 555,
						"src": "3197:136:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 467,
							"nodeType": "Block",
							"src": "3385:43:0",
							"statements": [
								{
									"expression": {
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 460,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$383_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactory.LevelData storage ref)"
													}
												},
												"id": 462,
												"indexExpression": {
													"id": 461,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "3396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "3389:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$383_storage",
													"typeString": "struct StakingFactory.LevelData storage ref"
												}
											},
											"id": 463,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 382,
											"src": "3389:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 464,
											"name": "tokenValue",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 457,
											"src": "3414:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3389:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 466,
									"nodeType": "ExpressionStatement",
									"src": "3389:35:0"
								}
							]
						},
						"functionSelector": "7bdecea1",
						"id": 468,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateTokens",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 458,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "3358:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3357:20:0"
						},
						"returnParameters": {
							"id": 459,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3385:0:0"
						},
						"scope": 555,
						"src": "3336:92:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 492,
							"nodeType": "Block",
							"src": "3486:101:0",
							"statements": [
								{
									"expression": {
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 475,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3490:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 477,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "3512:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 476,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1421,
												"src": "3505:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1421_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 478,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3505:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1421",
												"typeString": "contract IERC20"
											}
										},
										"src": "3490:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1421",
											"typeString": "contract IERC20"
										}
									},
									"id": 480,
									"nodeType": "ExpressionStatement",
									"src": "3490:36:0"
								},
								{
									"expression": {
										"id": 483,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 481,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 357,
											"src": "3530:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 482,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 472,
											"src": "3542:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3530:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 484,
									"nodeType": "ExpressionStatement",
									"src": "3530:22:0"
								},
								{
									"expression": {
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 485,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 359,
											"src": "3556:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 486,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3564:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3556:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 488,
									"nodeType": "ExpressionStatement",
									"src": "3556:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 489,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 434,
											"src": "3569:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 490,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3569:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 491,
									"nodeType": "ExpressionStatement",
									"src": "3569:14:0"
								}
							]
						},
						"id": 493,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 473,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 470,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3443:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3443:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 493,
									"src": "3466:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3466:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3442:43:0"
						},
						"returnParameters": {
							"id": 474,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3486:0:0"
						},
						"scope": 555,
						"src": "3431:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 553,
							"nodeType": "Block",
							"src": "3667:356:0",
							"statements": [
								{
									"assignments": [504],
									"declarations": [
										{
											"constant": false,
											"id": 504,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "3671:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 503,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 502,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 367,
													"src": "3671:18:0"
												},
												"referencedDeclaration": 367,
												"src": "3671:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 508,
									"initialValue": {
										"baseExpression": {
											"id": 505,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 372,
											"src": "3705:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$367_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 507,
										"indexExpression": {
											"id": 506,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 495,
											"src": "3738:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3705:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3671:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 516,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 510,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3763:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 364,
													"src": "3763:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3794:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3786:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3763:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3798:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 509,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3755:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3755:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 519,
									"nodeType": "ExpressionStatement",
									"src": "3755:93:0"
								},
								{
									"expression": {
										"id": 539,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 520,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3853:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 522,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 364,
											"src": "3853:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$555",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 528,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3895:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3895:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 534,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1421",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3910:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3883:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$350_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 350,
																"src": "3887:7:0"
															},
															"referencedDeclaration": 350,
															"src": "3887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$350",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$350",
														"typeString": "contract Staking"
													}
												],
												"id": 524,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3875:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 538,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3875:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3853:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 540,
									"nodeType": "ExpressionStatement",
									"src": "3853:94:0"
								},
								{
									"expression": {
										"id": 545,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 541,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 504,
												"src": "3951:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$367_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 543,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 366,
											"src": "3951:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 544,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 497,
											"src": "3971:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3951:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 546,
									"nodeType": "ExpressionStatement",
									"src": "3951:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 550,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 495,
												"src": "4006:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 547,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 362,
												"src": "3987:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 549,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3987:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 551,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3987:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 552,
									"nodeType": "ExpressionStatement",
									"src": "3987:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 554,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 500,
								"modifierName": {
									"id": 499,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 791,
									"src": "3657:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3657:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 498,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3606:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 494,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3606:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 497,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 554,
									"src": "3628:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3628:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3605:44:0"
						},
						"returnParameters": {
							"id": 501,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3667:0:0"
						},
						"scope": 555,
						"src": "3590:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 556,
				"src": "2425:1600:0"
			}
		],
		"src": "32:3994:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.1+commit.df193b15.Emscripten.clang"
	},
	"networks": {
		"1617146339486": {
			"events": {
				"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
					"anonymous": false,
					"inputs": [
						{
							"indexed": true,
							"internalType": "address",
							"name": "previousOwner",
							"type": "address"
						},
						{
							"indexed": true,
							"internalType": "address",
							"name": "newOwner",
							"type": "address"
						}
					],
					"name": "OwnershipTransferred",
					"type": "event"
				}
			},
			"links": {},
			"address": "0x3bDFa073A93f5FE2a05565f53c5988665b91a185",
			"transactionHash": "0xdff1aa006a0f5e4e50bcb5dd9d3831d6135da0d15bb5e01877641f54423837dd"
		},
		"1617150641140": {
			"events": {
				"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
					"anonymous": false,
					"inputs": [
						{
							"indexed": true,
							"internalType": "address",
							"name": "previousOwner",
							"type": "address"
						},
						{
							"indexed": true,
							"internalType": "address",
							"name": "newOwner",
							"type": "address"
						}
					],
					"name": "OwnershipTransferred",
					"type": "event"
				}
			},
			"links": {},
			"address": "0x59856f7fB0D325608f7A7a0772D12eCAa844669a",
			"transactionHash": "0xa17658ca513113bbf4f4fad91fd2cb535fbd6d307c357960a7fd00ae02cfe69d"
		},
		"1617180289855": {
			"events": {
				"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
					"anonymous": false,
					"inputs": [
						{
							"indexed": true,
							"internalType": "address",
							"name": "previousOwner",
							"type": "address"
						},
						{
							"indexed": true,
							"internalType": "address",
							"name": "newOwner",
							"type": "address"
						}
					],
					"name": "OwnershipTransferred",
					"type": "event"
				}
			},
			"links": {},
			"address": "0x86ca79eac0cFD9477216F704d47a7D35d0a1f4D2",
			"transactionHash": "0x3dc51a3eaa1e357ebe2275de689f633bf5038c1614c945ea858bcc78e9cca886"
		}
	},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-03-31T09:04:02.546Z",
	"networkType": "ethereum",
	"devdoc": {
		"kind": "dev",
		"methods": {
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
