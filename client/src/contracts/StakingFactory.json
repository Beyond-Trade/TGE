{
	"contractName": "StakingFactory",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_rewardsToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_startTime",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "level",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "int256",
					"name": "",
					"type": "int256"
				}
			],
			"name": "levels",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "allowedForXCoins",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "rewardPercentTimes100",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "lockedDuration",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "allowedReward",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "stakingRewardsInfoByStakingToken",
			"outputs": [
				{
					"internalType": "address",
					"name": "stakingRewards",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "rewardAmount",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "stakingTokens",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "startTime",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "stakingToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "rewardAmount",
					"type": "uint256"
				}
			],
			"name": "deploy",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowedForXCoins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPercentTimes100\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowedReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewardsInfoByStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingRewards\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":\"StakingFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol\":{\"keccak256\":\"0x668a1389a90b6f4a44864f94629a70b484b043cf02281da88eeb4656f033801d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f010f0e22c54387695ea8b218ba74f548287942168a5d656371b566e47eae517\",\"dweb:/ipfs/QmX22UykZe9u1RVaV2rHT6VnUTX8XazmangZ2sJMjjSkki\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
	"bytecode": "0x60806040523480156200001157600080fd5b506040516200249d3803806200249d833981810160405281019062000037919062000382565b6000620000496200014f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055506001600381905550620001476200015760201b60201c565b5050620004b8565b600033905090565b620001676200014f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200018d6200032b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620001e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001dd90620003ea565b60405180910390fd5b6040518060800160405280620493e0815260200161201b8152602001601e81526020016203c32f8152506006600060018152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301559050506040518060800160405280620927c08152602001610c0a8152602001602d81526020016202d2648152506006600060028152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301559050506040518060800160405280620f42408152602001610a468152602001603c8152602001620403668152506006600060038152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301559050506001600381905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050620003658162000484565b92915050565b6000815190506200037c816200049e565b92915050565b600080604083850312156200039657600080fd5b6000620003a68582860162000354565b9250506020620003b9858286016200036b565b9150509250929050565b6000620003d26020836200040c565b9150620003df826200045b565b602082019050919050565b600060208201905081810360008301526200040581620003c3565b9050919050565b600082825260208201905092915050565b60006200042a8262000431565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6200048f816200041d565b81146200049b57600080fd5b50565b620004a98162000451565b8114620004b557600080fd5b50565b611fd580620004c86000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c80636fd5ae15116200006f5780636fd5ae15146200016b578063715018a6146200018d57806378e9792514620001995780638da5cb5b14620001bb578063f2fde38b14620001dd57620000a0565b80630b96fe5314620000a5578063344e5e3414620000de5780634956eaf014620001145780636cf8caf81462000134575b600080fd5b620000c36004803603810190620000bd919062000910565b620001fd565b604051620000d5949392919062000b09565b60405180910390f35b620000fc6004803603810190620000f691906200093c565b6200022d565b6040516200010b9190620009ff565b60405180910390f35b6200013260048036038101906200012c9190620008cf565b6200026d565b005b6200015260048036038101906200014c9190620008a3565b620004db565b6040516200016292919062000a59565b60405180910390f35b620001756200051f565b60405162000184919062000aec565b60405180910390f35b6200019762000525565b005b620001a362000666565b604051620001b2919062000aec565b60405180910390f35b620001c56200066c565b604051620001d49190620009ff565b60405180910390f35b620001fb6004803603810190620001f59190620008a3565b62000695565b005b60066020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600481815481106200023e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200027762000848565b73ffffffffffffffffffffffffffffffffffffffff16620002976200066c565b73ffffffffffffffffffffffffffffffffffffffff1614620002f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e79062000aca565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620003c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c09062000aa8565b60405180910390fd5b30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051620003fc9062000850565b6200040a9392919062000a1c565b604051809103906000f08015801562000427573d6000803e3d6000fd5b508160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600101819055506004839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60035481565b6200052f62000848565b73ffffffffffffffffffffffffffffffffffffffff166200054f6200066c565b73ffffffffffffffffffffffffffffffffffffffff1614620005a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200059f9062000aca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6200069f62000848565b73ffffffffffffffffffffffffffffffffffffffff16620006bf6200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000718576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200070f9062000aca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200078b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007829062000a86565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6112db8062000cc583390190565b6000813590506200086f8162000c76565b92915050565b600081359050620008868162000c90565b92915050565b6000813590506200089d8162000caa565b92915050565b600060208284031215620008b657600080fd5b6000620008c6848285016200085e565b91505092915050565b60008060408385031215620008e357600080fd5b6000620008f3858286016200085e565b925050602062000906858286016200088c565b9150509250929050565b6000602082840312156200092357600080fd5b6000620009338482850162000875565b91505092915050565b6000602082840312156200094f57600080fd5b60006200095f848285016200088c565b91505092915050565b620009738162000b67565b82525050565b60006200098860268362000b56565b9150620009958262000baf565b604082019050919050565b6000620009af602f8362000b56565b9150620009bc8262000bfe565b604082019050919050565b6000620009d660208362000b56565b9150620009e38262000c4d565b602082019050919050565b620009f98162000ba5565b82525050565b600060208201905062000a16600083018462000968565b92915050565b600060608201905062000a33600083018662000968565b62000a42602083018562000968565b62000a51604083018462000968565b949350505050565b600060408201905062000a70600083018562000968565b62000a7f6020830184620009ee565b9392505050565b6000602082019050818103600083015262000aa18162000979565b9050919050565b6000602082019050818103600083015262000ac381620009a0565b9050919050565b6000602082019050818103600083015262000ae581620009c7565b9050919050565b600060208201905062000b036000830184620009ee565b92915050565b600060808201905062000b206000830187620009ee565b62000b2f6020830186620009ee565b62000b3e6040830185620009ee565b62000b4d6060830184620009ee565b95945050505050565b600082825260208201905092915050565b600062000b748262000b85565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e6752657761726473466163746f72793a3a6465706c6f793a206160008201527f6c7265616479206465706c6f7965640000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b62000c818162000b67565b811462000c8d57600080fd5b50565b62000c9b8162000b7b565b811462000ca757600080fd5b50565b62000cb58162000ba5565b811462000cc157600080fd5b5056fe6080604052620151806000553480156200001857600080fd5b50604051620012db380380620012db83398181016040528101906200003e919062000121565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001c5565b6000815190506200011b81620001ab565b92915050565b6000806000606084860312156200013757600080fd5b600062000147868287016200010a565b93505060206200015a868287016200010a565b92505060406200016d868287016200010a565b9150509250925092565b600062000184826200018b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001b68162000177565b8114620001c257600080fd5b50565b61110680620001d56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063725cedd31461003b578063b6b55f2514610059575b600080fd5b610043610075565b6040516100509190610eff565b60405180910390f35b610073600480360381019061006e9190610d6e565b6107c5565b005b61007d610caf565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541461022b57600054601e6100d69190610fa2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610d97565b6101809190610f1b565b42111561022a576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461201b6101d99190610fa2565b6101e39190610f71565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146103d957600054601e6102849190610fa2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190610d97565b61032e9190610f1b565b4211156103d8576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610c0a6103879190610fa2565b6103919190610f71565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301541461058b57600054602d6104329190610fa2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561049a57600080fd5b505afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610d97565b6104dc9190610f1b565b421115610586576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a356105359190610fa2565b61053f9190610f71565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b6106ef565b600054603c61059a9190610fa2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610d97565b6106449190610f1b565b4211156106ee576064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610a3561069d9190610fa2565b6106a79190610f71565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661081e57600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b15801561088857600080fd5b505afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190610d97565b905060018114156109db5781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461091d9190610f1b565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161098393929190610ec8565b602060405180830381600087803b15801561099d57600080fd5b505af11580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190610d45565b50610c0b565b6002811415610af45781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610a369190610f1b565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a9c93929190610ec8565b602060405180830381600087803b158015610ab657600080fd5b505af1158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee9190610d45565b50610c0a565b6003811415610c095781600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610b4f9190610f1b565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bb593929190610ec8565b602060405180830381600087803b158015610bcf57600080fd5b505af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190610d45565b505b5b5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007016000828254610c5d9190610f1b565b9250508190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055505050565b60405180610140016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050610d15816110a2565b92915050565b600081359050610d2a816110b9565b92915050565b600081519050610d3f816110b9565b92915050565b600060208284031215610d5757600080fd5b6000610d6584828501610d06565b91505092915050565b600060208284031215610d8057600080fd5b6000610d8e84828501610d1b565b91505092915050565b600060208284031215610da957600080fd5b6000610db784828501610d30565b91505092915050565b610dc981610ffc565b82525050565b610dd88161100e565b82525050565b61014082016000820151610df56000850182610dcf565b506020820151610e086020850182610dcf565b506040820151610e1b6040850182610eaa565b506060820151610e2e6060850182610eaa565b506080820151610e416080850182610eaa565b5060a0820151610e5460a0850182610eaa565b5060c0820151610e6760c0850182610eaa565b5060e0820151610e7a60e0850182610eaa565b50610100820151610e8f610100850182610eaa565b50610120820151610ea4610120850182610eaa565b50505050565b610eb38161103a565b82525050565b610ec28161103a565b82525050565b6000606082019050610edd6000830186610dc0565b610eea6020830185610dc0565b610ef76040830184610eb9565b949350505050565b600061014082019050610f156000830184610dde565b92915050565b6000610f268261103a565b9150610f318361103a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f6657610f65611044565b5b828201905092915050565b6000610f7c8261103a565b9150610f878361103a565b925082610f9757610f96611073565b5b828204905092915050565b6000610fad8261103a565b9150610fb88361103a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ff157610ff0611044565b5b828202905092915050565b60006110078261101a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6110ab8161100e565b81146110b657600080fd5b50565b6110c28161103a565b81146110cd57600080fd5b5056fea26469706673582212203892ca284719d01404570f5da7a027552a77a47477b9cca276db24aeebfe650b64736f6c63430008010033a26469706673582212203f46ab77b411af798a072dacf20a775048ebd6a34bb5cc8e7f4696a217bb37c164736f6c63430008010033",
	"deployedBytecode": "",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:2481:5",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "70:80:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "80:22:5",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:5"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "89:5:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "89:13:5"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "80:5:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "138:5:5"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "111:26:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "111:33:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "111:33:5"
								}
							]
						},
						"name": "abi_decode_t_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "48:6:5",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "56:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "64:5:5",
								"type": ""
							}
						],
						"src": "7:143:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "219:80:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "229:22:5",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "244:6:5"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "238:5:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "238:13:5"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "229:5:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "287:5:5"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "260:26:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "260:33:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "260:33:5"
								}
							]
						},
						"name": "abi_decode_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "197:6:5",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "205:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "213:5:5",
								"type": ""
							}
						],
						"src": "156:143:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "399:346:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "445:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "454:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "457:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "447:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "447:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "447:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "420:7:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "429:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "416:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "416:23:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "441:2:5",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "412:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "412:32:5"
									},
									"nodeType": "YulIf",
									"src": "409:2:5"
								},
								{
									"nodeType": "YulBlock",
									"src": "471:128:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "486:15:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "500:1:5",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "490:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "515:74:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "561:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "572:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "557:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "557:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "581:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "525:31:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "525:64:5"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "515:6:5"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "609:129:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "624:16:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "638:2:5",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "628:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "654:74:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "700:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "711:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "696:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "696:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "720:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "664:31:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "664:64:5"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "654:6:5"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "361:9:5",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "372:7:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "384:6:5",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "392:6:5",
								"type": ""
							}
						],
						"src": "305:440:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "897:220:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "907:74:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "973:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "978:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "914:58:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "914:67:5"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "907:3:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1079:3:5"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
											"nodeType": "YulIdentifier",
											"src": "990:88:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "990:93:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "990:93:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1092:19:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1103:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1108:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1099:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1099:12:5"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "1092:3:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "885:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "893:3:5",
								"type": ""
							}
						],
						"src": "751:366:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1294:248:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1304:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "1316:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1327:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1312:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1312:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1304:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1351:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1362:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1347:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1347:17:5"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "1370:4:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1376:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1366:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1366:20:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1340:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1340:47:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1340:47:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1396:139:5",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1530:4:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "1404:124:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1404:131:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "1396:4:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1274:9:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "1289:4:5",
								"type": ""
							}
						],
						"src": "1123:419:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1644:73:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1661:3:5"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1666:6:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1654:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1654:19:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1654:19:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1682:29:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1701:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1706:4:5",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1697:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1697:14:5"
									},
									"variableNames": [
										{
											"name": "updated_pos",
											"nodeType": "YulIdentifier",
											"src": "1682:11:5"
										}
									]
								}
							]
						},
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1616:3:5",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1621:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "updated_pos",
								"nodeType": "YulTypedName",
								"src": "1632:11:5",
								"type": ""
							}
						],
						"src": "1548:169:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1768:51:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1778:35:5",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1807:5:5"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "1789:17:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1789:24:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "1778:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1750:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1760:7:5",
								"type": ""
							}
						],
						"src": "1723:96:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1870:81:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1880:65:5",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1895:5:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1902:42:5",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "1891:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1891:54:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "1880:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1852:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1862:7:5",
								"type": ""
							}
						],
						"src": "1825:126:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2002:32:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2012:16:5",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "2023:5:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "2012:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1984:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1994:7:5",
								"type": ""
							}
						],
						"src": "1957:77:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2146:76:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "2168:6:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2176:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2164:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "2164:14:5"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "2180:34:5",
												"type": "",
												"value": "Ownable: caller is not the owner"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2157:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2157:58:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2157:58:5"
								}
							]
						},
						"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "2138:6:5",
								"type": ""
							}
						],
						"src": "2040:182:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2271:79:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2328:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2337:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2340:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2330:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "2330:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2330:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2294:5:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2319:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "2301:17:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "2301:24:5"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "2291:2:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "2291:35:5"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "2284:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2284:43:5"
									},
									"nodeType": "YulIf",
									"src": "2281:2:5"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2264:5:5",
								"type": ""
							}
						],
						"src": "2228:122:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2399:79:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2456:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2465:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2468:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "2458:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "2458:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2458:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2422:5:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2447:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2429:17:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "2429:24:5"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "2419:2:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "2419:35:5"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "2412:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2412:43:5"
									},
									"nodeType": "YulIf",
									"src": "2409:2:5"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2392:5:5",
								"type": ""
							}
						],
						"src": "2356:122:5"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 5,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:7707:5",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "59:87:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "69:29:5",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "91:6:5"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "78:12:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "78:20:5"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "69:5:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "134:5:5"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "107:26:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "107:33:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "107:33:5"
								}
							]
						},
						"name": "abi_decode_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "37:6:5",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "45:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "53:5:5",
								"type": ""
							}
						],
						"src": "7:139:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "203:86:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "213:29:5",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "235:6:5"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "222:12:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "222:20:5"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "213:5:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "277:5:5"
											}
										],
										"functionName": {
											"name": "validator_revert_t_int256",
											"nodeType": "YulIdentifier",
											"src": "251:25:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "251:32:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "251:32:5"
								}
							]
						},
						"name": "abi_decode_t_int256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "181:6:5",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "189:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "197:5:5",
								"type": ""
							}
						],
						"src": "152:137:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "347:87:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "357:29:5",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "379:6:5"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "366:12:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "366:20:5"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "357:5:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "422:5:5"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "395:26:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "395:33:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "395:33:5"
								}
							]
						},
						"name": "abi_decode_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "325:6:5",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "333:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "341:5:5",
								"type": ""
							}
						],
						"src": "295:139:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "506:196:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "552:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "561:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "564:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "554:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "554:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "554:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "527:7:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "536:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "523:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "523:23:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "548:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "519:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "519:32:5"
									},
									"nodeType": "YulIf",
									"src": "516:2:5"
								},
								{
									"nodeType": "YulBlock",
									"src": "578:117:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "593:15:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "607:1:5",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "597:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "622:63:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "657:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "668:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "653:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "653:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "677:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "632:20:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "632:53:5"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "622:6:5"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "476:9:5",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "487:7:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "499:6:5",
								"type": ""
							}
						],
						"src": "440:262:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "791:324:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "837:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "846:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "849:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "839:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "839:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "839:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "812:7:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "821:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "808:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "808:23:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "833:2:5",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "804:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "804:32:5"
									},
									"nodeType": "YulIf",
									"src": "801:2:5"
								},
								{
									"nodeType": "YulBlock",
									"src": "863:117:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "878:15:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "892:1:5",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "882:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "907:63:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "942:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "953:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "938:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "938:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "962:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "917:20:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "917:53:5"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "907:6:5"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "990:118:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1005:16:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1019:2:5",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1009:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1035:63:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1070:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1081:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1066:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "1066:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1090:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1045:20:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1045:53:5"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "1035:6:5"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "753:9:5",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "764:7:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "776:6:5",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "784:6:5",
								"type": ""
							}
						],
						"src": "708:407:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1186:195:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1232:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1241:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1244:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1234:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "1234:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1234:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1207:7:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1216:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1203:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1203:23:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1228:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1199:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1199:32:5"
									},
									"nodeType": "YulIf",
									"src": "1196:2:5"
								},
								{
									"nodeType": "YulBlock",
									"src": "1258:116:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1273:15:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1287:1:5",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1277:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1302:62:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1336:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1347:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1332:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "1332:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1356:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_int256",
													"nodeType": "YulIdentifier",
													"src": "1312:19:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1312:52:5"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1302:6:5"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_int256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1156:9:5",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1167:7:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1179:6:5",
								"type": ""
							}
						],
						"src": "1121:260:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1453:196:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1499:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1508:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1511:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1501:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "1501:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1501:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1474:7:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1483:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1470:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1470:23:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1495:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1466:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1466:32:5"
									},
									"nodeType": "YulIf",
									"src": "1463:2:5"
								},
								{
									"nodeType": "YulBlock",
									"src": "1525:117:5",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1540:15:5",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1554:1:5",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1544:6:5",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1569:63:5",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1604:9:5"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1615:6:5"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1600:3:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "1600:22:5"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1624:7:5"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1579:20:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1579:53:5"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1569:6:5"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1423:9:5",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1434:7:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1446:6:5",
								"type": ""
							}
						],
						"src": "1387:262:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1720:53:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1737:3:5"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1760:5:5"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "1742:17:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "1742:24:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1730:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1730:37:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1730:37:5"
								}
							]
						},
						"name": "abi_encode_t_address_to_t_address_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1708:5:5",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1715:3:5",
								"type": ""
							}
						],
						"src": "1655:118:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1925:220:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1935:74:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2001:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2006:2:5",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "1942:58:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "1942:67:5"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "1935:3:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2107:3:5"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
											"nodeType": "YulIdentifier",
											"src": "2018:88:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2018:93:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2018:93:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2120:19:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2131:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2136:2:5",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2127:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2127:12:5"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2120:3:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1913:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "1921:3:5",
								"type": ""
							}
						],
						"src": "1779:366:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2297:220:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2307:74:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2373:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2378:2:5",
												"type": "",
												"value": "47"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2314:58:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2314:67:5"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2307:3:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2479:3:5"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
											"nodeType": "YulIdentifier",
											"src": "2390:88:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2390:93:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2390:93:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2492:19:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2503:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2508:2:5",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2499:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2499:12:5"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2492:3:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2285:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2293:3:5",
								"type": ""
							}
						],
						"src": "2151:366:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2669:220:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2679:74:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2745:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2750:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2686:58:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2686:67:5"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2679:3:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2851:3:5"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
											"nodeType": "YulIdentifier",
											"src": "2762:88:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2762:93:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2762:93:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2864:19:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2875:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2880:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2871:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2871:12:5"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2864:3:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2657:3:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2665:3:5",
								"type": ""
							}
						],
						"src": "2523:366:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2960:53:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2977:3:5"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3000:5:5"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2982:17:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "2982:24:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2970:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "2970:37:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2970:37:5"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2948:5:5",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2955:3:5",
								"type": ""
							}
						],
						"src": "2895:118:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3117:124:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3127:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3139:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3150:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3135:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3135:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3127:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3207:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3220:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3231:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3216:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "3216:17:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3163:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3163:71:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3163:71:5"
								}
							]
						},
						"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3089:9:5",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3101:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3112:4:5",
								"type": ""
							}
						],
						"src": "3019:222:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3401:288:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3411:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3423:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3434:2:5",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3419:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3419:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3411:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3491:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3504:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3515:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3500:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "3500:17:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3447:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3447:71:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3447:71:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "3572:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3585:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3596:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3581:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "3581:18:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3528:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3528:72:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3528:72:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "3654:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3667:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3678:2:5",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3663:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "3663:18:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3610:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3610:72:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3610:72:5"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3357:9:5",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "3369:6:5",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "3377:6:5",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3385:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3396:4:5",
								"type": ""
							}
						],
						"src": "3247:442:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3821:206:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3831:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3843:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3854:2:5",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3839:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3839:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3831:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3911:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3924:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3935:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3920:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "3920:17:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3867:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3867:71:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3867:71:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "3992:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4005:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4016:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4001:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "4001:18:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3948:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "3948:72:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3948:72:5"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3785:9:5",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "3797:6:5",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3805:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3816:4:5",
								"type": ""
							}
						],
						"src": "3695:332:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4204:248:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4214:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4226:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4237:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4222:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "4222:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4214:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4261:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4272:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4257:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "4257:17:5"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "4280:4:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4286:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "4276:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "4276:20:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4250:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "4250:47:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4250:47:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4306:139:5",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4440:4:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4314:124:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "4314:131:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4306:4:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4184:9:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4199:4:5",
								"type": ""
							}
						],
						"src": "4033:419:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4629:248:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4639:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4651:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4662:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4647:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "4647:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4639:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4686:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4697:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4682:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "4682:17:5"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "4705:4:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4711:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "4701:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "4701:20:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "4675:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "4675:47:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4675:47:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4731:139:5",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4865:4:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4739:124:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "4739:131:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4731:4:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4609:9:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4624:4:5",
								"type": ""
							}
						],
						"src": "4458:419:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5054:248:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5064:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5076:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5087:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5072:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5072:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5064:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5111:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5122:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5107:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "5107:17:5"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "5130:4:5"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5136:9:5"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5126:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "5126:20:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5100:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5100:47:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5100:47:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5156:139:5",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5290:4:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5164:124:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5164:131:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5156:4:5"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5034:9:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5049:4:5",
								"type": ""
							}
						],
						"src": "4883:419:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5406:124:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5416:26:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5428:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5439:2:5",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5424:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5424:18:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5416:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5496:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5509:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5520:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5505:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "5505:17:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5452:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5452:71:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5452:71:5"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5378:9:5",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5390:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5401:4:5",
								"type": ""
							}
						],
						"src": "5308:222:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5718:371:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5728:27:5",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5740:9:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5751:3:5",
												"type": "",
												"value": "128"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5736:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5736:19:5"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5728:4:5"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5809:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5822:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5833:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5818:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "5818:17:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5765:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5765:71:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5765:71:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "5890:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5903:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5914:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5899:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "5899:18:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5846:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5846:72:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5846:72:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "5972:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5985:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5996:2:5",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5981:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "5981:18:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5928:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "5928:72:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5928:72:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value3",
												"nodeType": "YulIdentifier",
												"src": "6054:6:5"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6067:9:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6078:2:5",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6063:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "6063:18:5"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6010:43:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6010:72:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6010:72:5"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5666:9:5",
								"type": ""
							},
							{
								"name": "value3",
								"nodeType": "YulTypedName",
								"src": "5678:6:5",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "5686:6:5",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "5694:6:5",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5702:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5713:4:5",
								"type": ""
							}
						],
						"src": "5536:553:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6191:73:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "6208:3:5"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "6213:6:5"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6201:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6201:19:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6201:19:5"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6229:29:5",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "6248:3:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6253:4:5",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6244:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6244:14:5"
									},
									"variableNames": [
										{
											"name": "updated_pos",
											"nodeType": "YulIdentifier",
											"src": "6229:11:5"
										}
									]
								}
							]
						},
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "6163:3:5",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "6168:6:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "updated_pos",
								"nodeType": "YulTypedName",
								"src": "6179:11:5",
								"type": ""
							}
						],
						"src": "6095:169:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6315:51:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6325:35:5",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "6354:5:5"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "6336:17:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6336:24:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6325:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6297:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6307:7:5",
								"type": ""
							}
						],
						"src": "6270:96:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6416:32:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6426:16:5",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "6437:5:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6426:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_int256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6398:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6408:7:5",
								"type": ""
							}
						],
						"src": "6372:76:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6499:81:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6509:65:5",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "6524:5:5"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6531:42:5",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "6520:3:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6520:54:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6509:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6481:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6491:7:5",
								"type": ""
							}
						],
						"src": "6454:126:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6631:32:5",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6641:16:5",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "6652:5:5"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "6641:7:5"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "6613:5:5",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "6623:7:5",
								"type": ""
							}
						],
						"src": "6586:77:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6775:119:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "6797:6:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6805:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6793:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "6793:14:5"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "6809:34:5",
												"type": "",
												"value": "Ownable: new owner is the zero a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6786:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6786:58:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6786:58:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "6865:6:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6873:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6861:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "6861:15:5"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "6878:8:5",
												"type": "",
												"value": "ddress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6854:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "6854:33:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6854:33:5"
								}
							]
						},
						"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "6767:6:5",
								"type": ""
							}
						],
						"src": "6669:225:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7006:128:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "7028:6:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7036:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7024:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "7024:14:5"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "7040:34:5",
												"type": "",
												"value": "StakingRewardsFactory::deploy: a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7017:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "7017:58:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7017:58:5"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "7096:6:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7104:2:5",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7092:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "7092:15:5"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "7109:17:5",
												"type": "",
												"value": "lready deployed"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7085:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "7085:42:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7085:42:5"
								}
							]
						},
						"name": "store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "6998:6:5",
								"type": ""
							}
						],
						"src": "6900:234:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7246:76:5",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "7268:6:5"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7276:1:5",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7264:3:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "7264:14:5"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "7280:34:5",
												"type": "",
												"value": "Ownable: caller is not the owner"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7257:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "7257:58:5"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7257:58:5"
								}
							]
						},
						"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "7238:6:5",
								"type": ""
							}
						],
						"src": "7140:182:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7371:79:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "7428:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7437:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7440:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "7430:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "7430:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "7430:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7394:5:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7419:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "7401:17:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "7401:24:5"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "7391:2:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "7391:35:5"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "7384:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "7384:43:5"
									},
									"nodeType": "YulIf",
									"src": "7381:2:5"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "7364:5:5",
								"type": ""
							}
						],
						"src": "7328:122:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7498:78:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "7554:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7563:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7566:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "7556:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "7556:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "7556:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7521:5:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7545:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_int256",
															"nodeType": "YulIdentifier",
															"src": "7528:16:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "7528:23:5"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "7518:2:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "7518:34:5"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "7511:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "7511:42:5"
									},
									"nodeType": "YulIf",
									"src": "7508:2:5"
								}
							]
						},
						"name": "validator_revert_t_int256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "7491:5:5",
								"type": ""
							}
						],
						"src": "7456:120:5"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7625:79:5",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "7682:16:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7691:1:5",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7694:1:5",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "7684:6:5"
													},
													"nodeType": "YulFunctionCall",
													"src": "7684:12:5"
												},
												"nodeType": "YulExpressionStatement",
												"src": "7684:12:5"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "7648:5:5"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7673:5:5"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "7655:17:5"
														},
														"nodeType": "YulFunctionCall",
														"src": "7655:24:5"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "7645:2:5"
												},
												"nodeType": "YulFunctionCall",
												"src": "7645:35:5"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "7638:6:5"
										},
										"nodeType": "YulFunctionCall",
										"src": "7638:43:5"
									},
									"nodeType": "YulIf",
									"src": "7635:2:5"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "7618:5:5",
								"type": ""
							}
						],
						"src": "7582:122:5"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"StakingRewardsFactory::deploy: a\")\n\n        mstore(add(memPtr, 32), \"lready deployed\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 5,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "2291:1337:0:-:0;;;3034:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:1;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;3115:13:0;3093:12;;:36;;;;;;;;;;;;;;;;;;3145:10;3133:9;:22;;;;3167:1;3159:5;:9;;;;3172:14;:12;;;:14;;:::i;:::-;3034:156;;2291:1337;;586:96:4;639:7;665:10;658:17;;586:96;:::o;2816:215:0:-;1291:12:1;:10;;;:12;;:::i;:::-;1280:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2875:35:0::1;;;;;;;;2885:6;2875:35;;;;2893:4;2875:35;;;;2899:2;2875:35;;;;2903:6;2875:35;;::::0;2863:6:::1;:9;2870:1;2863:9;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:35;;;;;;;;2936:6;2926:35;;;;2944:4;2926:35;;;;2950:2;2926:35;;;;2954:6;2926:35;;::::0;2914:6:::1;:9;2921:1;2914:9;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2977:36;;;;;;;;2987:7;2977:36;;;;2996:4;2977:36;;;;3002:2;2977:36;;;;3006:6;2977:36;;::::0;2965:6:::1;:9;2972:1;2965:9;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:1;3018:5;:9;;;;2816:215::o:0;1068:85:1:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;7:143:5:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:440::-;;;441:2;429:9;420:7;416:23;412:32;409:2;;;457:1;454;447:12;409:2;500:1;525:64;581:7;572:6;561:9;557:22;525:64;:::i;:::-;515:74;;471:128;638:2;664:64;720:7;711:6;700:9;696:22;664:64;:::i;:::-;654:74;;609:129;399:346;;;;;:::o;751:366::-;;914:67;978:2;973:3;914:67;:::i;:::-;907:74;;990:93;1079:3;990:93;:::i;:::-;1108:2;1103:3;1099:12;1092:19;;897:220;;;:::o;1123:419::-;;1327:2;1316:9;1312:18;1304:26;;1376:9;1370:4;1366:20;1362:1;1351:9;1347:17;1340:47;1404:131;1530:4;1404:131;:::i;:::-;1396:139;;1294:248;;;:::o;1548:169::-;;1666:6;1661:3;1654:19;1706:4;1701:3;1697:14;1682:29;;1644:73;;;;:::o;1723:96::-;;1789:24;1807:5;1789:24;:::i;:::-;1778:35;;1768:51;;;:::o;1825:126::-;;1902:42;1895:5;1891:54;1880:65;;1870:81;;;:::o;1957:77::-;;2023:5;2012:16;;2002:32;;;:::o;2040:182::-;2180:34;2176:1;2168:6;2164:14;2157:58;2146:76;:::o;2228:122::-;2301:24;2319:5;2301:24;:::i;:::-;2294:5;2291:35;2281:2;;2340:1;2337;2330:12;2281:2;2271:79;:::o;2356:122::-;2429:24;2447:5;2429:24;:::i;:::-;2422:5;2419:35;2409:2;;2468:1;2465;2458:12;2409:2;2399:79;:::o;2291:1337:0:-;;;;;;;",
	"deployedSourceMap": "2291:1337:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2770:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2401:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3193:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2552:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2378:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:1;;;:::i;:::-;;2351:24:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2770:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2401:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3193:433::-;1291:12:1;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3274:31:0::1;3308:32;:46;3341:12;3308:46;;;;;;;;;;;;;;;3274:80;;3397:1;3366:33;;:4;:19;;;;;;;;;;;;:33;;;3358:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;3506:4;3521:12;;;;;;;;;;;3536;3486:63;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3456:4;:19;;;:94;;;;;;;;;;;;;;;;;;3574:12;3554:4;:17;;:32;;;;3590:13;3609:12;3590:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:1:1;3193:433:0::0;;:::o;2552:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2378:20::-;;;;:::o;1700:145:1:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;2351:24:0:-;;;;:::o;1068:85:1:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:4:-;639:7;665:10;658:17;;586:96;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;235:6;222:20;213:29;;251:32;277:5;251:32;:::i;:::-;203:86;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;;;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:260::-;;1228:2;1216:9;1207:7;1203:23;1199:32;1196:2;;;1244:1;1241;1234:12;1196:2;1287:1;1312:52;1356:7;1347:6;1336:9;1332:22;1312:52;:::i;:::-;1302:62;;1258:116;1186:195;;;;:::o;1387:262::-;;1495:2;1483:9;1474:7;1470:23;1466:32;1463:2;;;1511:1;1508;1501:12;1463:2;1554:1;1579:53;1624:7;1615:6;1604:9;1600:22;1579:53;:::i;:::-;1569:63;;1525:117;1453:196;;;;:::o;1655:118::-;1742:24;1760:5;1742:24;:::i;:::-;1737:3;1730:37;1720:53;;:::o;1779:366::-;;1942:67;2006:2;2001:3;1942:67;:::i;:::-;1935:74;;2018:93;2107:3;2018:93;:::i;:::-;2136:2;2131:3;2127:12;2120:19;;1925:220;;;:::o;2151:366::-;;2314:67;2378:2;2373:3;2314:67;:::i;:::-;2307:74;;2390:93;2479:3;2390:93;:::i;:::-;2508:2;2503:3;2499:12;2492:19;;2297:220;;;:::o;2523:366::-;;2686:67;2750:2;2745:3;2686:67;:::i;:::-;2679:74;;2762:93;2851:3;2762:93;:::i;:::-;2880:2;2875:3;2871:12;2864:19;;2669:220;;;:::o;2895:118::-;2982:24;3000:5;2982:24;:::i;:::-;2977:3;2970:37;2960:53;;:::o;3019:222::-;;3150:2;3139:9;3135:18;3127:26;;3163:71;3231:1;3220:9;3216:17;3207:6;3163:71;:::i;:::-;3117:124;;;;:::o;3247:442::-;;3434:2;3423:9;3419:18;3411:26;;3447:71;3515:1;3504:9;3500:17;3491:6;3447:71;:::i;:::-;3528:72;3596:2;3585:9;3581:18;3572:6;3528:72;:::i;:::-;3610;3678:2;3667:9;3663:18;3654:6;3610:72;:::i;:::-;3401:288;;;;;;:::o;3695:332::-;;3854:2;3843:9;3839:18;3831:26;;3867:71;3935:1;3924:9;3920:17;3911:6;3867:71;:::i;:::-;3948:72;4016:2;4005:9;4001:18;3992:6;3948:72;:::i;:::-;3821:206;;;;;:::o;4033:419::-;;4237:2;4226:9;4222:18;4214:26;;4286:9;4280:4;4276:20;4272:1;4261:9;4257:17;4250:47;4314:131;4440:4;4314:131;:::i;:::-;4306:139;;4204:248;;;:::o;4458:419::-;;4662:2;4651:9;4647:18;4639:26;;4711:9;4705:4;4701:20;4697:1;4686:9;4682:17;4675:47;4739:131;4865:4;4739:131;:::i;:::-;4731:139;;4629:248;;;:::o;4883:419::-;;5087:2;5076:9;5072:18;5064:26;;5136:9;5130:4;5126:20;5122:1;5111:9;5107:17;5100:47;5164:131;5290:4;5164:131;:::i;:::-;5156:139;;5054:248;;;:::o;5308:222::-;;5439:2;5428:9;5424:18;5416:26;;5452:71;5520:1;5509:9;5505:17;5496:6;5452:71;:::i;:::-;5406:124;;;;:::o;5536:553::-;;5751:3;5740:9;5736:19;5728:27;;5765:71;5833:1;5822:9;5818:17;5809:6;5765:71;:::i;:::-;5846:72;5914:2;5903:9;5899:18;5890:6;5846:72;:::i;:::-;5928;5996:2;5985:9;5981:18;5972:6;5928:72;:::i;:::-;6010;6078:2;6067:9;6063:18;6054:6;6010:72;:::i;:::-;5718:371;;;;;;;:::o;6095:169::-;;6213:6;6208:3;6201:19;6253:4;6248:3;6244:14;6229:29;;6191:73;;;;:::o;6270:96::-;;6336:24;6354:5;6336:24;:::i;:::-;6325:35;;6315:51;;;:::o;6372:76::-;;6437:5;6426:16;;6416:32;;;:::o;6454:126::-;;6531:42;6524:5;6520:54;6509:65;;6499:81;;;:::o;6586:77::-;;6652:5;6641:16;;6631:32;;;:::o;6669:225::-;6809:34;6805:1;6797:6;6793:14;6786:58;6878:8;6873:2;6865:6;6861:15;6854:33;6775:119;:::o;6900:234::-;7040:34;7036:1;7028:6;7024:14;7017:58;7109:17;7104:2;7096:6;7092:15;7085:42;7006:128;:::o;7140:182::-;7280:34;7276:1;7268:6;7264:14;7257:58;7246:76;:::o;7328:122::-;7401:24;7419:5;7401:24;:::i;:::-;7394:5;7391:35;7381:2;;7440:1;7437;7430:12;7381:2;7371:79;:::o;7456:120::-;7528:23;7545:5;7528:23;:::i;:::-;7521:5;7518:34;7508:2;;7566:1;7563;7556:12;7508:2;7498:78;:::o;7582:122::-;7655:24;7673:5;7655:24;:::i;:::-;7648:5;7645:35;7635:2;;7694:1;7691;7684:12;7635:2;7625:79;:::o",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\ncontract Staking {\n\tuint256 oneDay = 24 * 60 * 60;\n\tstruct UserData {\n\t\tbool allowed;\n\t\tbool created;\n\t\tuint256 level1Tokens;\n\t\tuint256 level2Tokens;\n\t\tuint256 level3Tokens;\n\t\tuint256 level1Reward;\n\t\tuint256 level2Reward;\n\t\tuint256 level3Reward;\n\t\t//\n\t\t//\n\t\tuint256 tokens;\n\t\t//\n\t\t//\n\t\tuint256 lastUpdateDate;\n\t}\n\n\tmapping(address => UserData) users;\n\n\tStakingFactory factory;\n\tIERC20 rewardsToken;\n\tIERC20 stakingToken;\n\n\tfunction deposit(uint256 amount) public {\n\t\trequire(users[msg.sender].allowed);\n\t\tuint256 level = factory.level();\n\t\tif (level == 1) {\n\t\t\tusers[msg.sender].level1Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 2) {\n\t\t\tusers[msg.sender].level2Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t} else if (level == 3) {\n\t\t\tusers[msg.sender].level3Tokens += amount;\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t}\n\t\tusers[msg.sender].tokens += amount;\n\t\tusers[msg.sender].lastUpdateDate = block.timestamp;\n\t}\n\n\tfunction calculateReward() public returns (UserData memory user) {\n\t\tif (users[msg.sender].level1Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level1Reward = ((8219 * users[msg.sender].level1Tokens)) / 100;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level2Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 30 * oneDay) {\n\t\t\t\tusers[msg.sender].level2Reward = ((3082 * users[msg.sender].level2Tokens)) / 100;\n\t\t\t}\n\t\t}\n\t\tif (users[msg.sender].level3Tokens != 0) {\n\t\t\tif (block.timestamp > factory.startTime() + 45 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 100;\n\t\t\t}\n\t\t} else {\n\t\t\tif (block.timestamp > factory.startTime() + 60 * oneDay) {\n\t\t\t\tusers[msg.sender].level3Reward = ((2613 * users[msg.sender].level3Tokens)) / 100;\n\t\t\t}\n\t\t}\n\t\treturn users[msg.sender];\n\t}\n\n\tconstructor(\n\t\taddress _factory,\n\t\taddress _rewardsToken,\n\t\taddress _stakingToken\n\t) {\n\t\tfactory = StakingFactory(_factory);\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstakingToken = IERC20(_stakingToken);\n\t}\n}\n\ncontract StakingFactory is Ownable {\n\tIERC20 rewardsToken;\n\tuint256 public startTime;\n\tuint256 public level;\n\taddress[] public stakingTokens;\n\n\tstruct StakingRewardsInfo {\n\t\taddress stakingRewards;\n\t\tuint256 rewardAmount;\n\t}\n\n\t// rewards info by staking token\n\tmapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\n\n\tstruct LevelData {\n\t\tuint256 allowedForXCoins;\n\t\tuint256 rewardPercentTimes100;\n\t\tuint256 lockedDuration;\n\t\tuint256 allowedReward;\n\t}\n\n\tmapping(int256 => LevelData) public levels;\n\n\tfunction createLevels() internal onlyOwner {\n\t\tlevels[1] = LevelData(300000, 8219, 30, 246575);\n\t\tlevels[2] = LevelData(600000, 3082, 45, 184932);\n\t\tlevels[3] = LevelData(1000000, 2630, 60, 263014);\n\n\t\tlevel = 1;\n\t}\n\n\tconstructor(address _rewardsToken, uint256 _startTime) {\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstartTime = _startTime;\n\t\tlevel = 1;\n\t\tcreateLevels();\n\t}\n\n\tfunction deploy(address stakingToken, uint256 rewardAmount) public onlyOwner {\n\t\tStakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\n\t\trequire(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\n\n\t\tinfo.stakingRewards = address(new Staking(address(this), address(rewardsToken), stakingToken));\n\t\tinfo.rewardAmount = rewardAmount;\n\t\tstakingTokens.push(stakingToken);\n\t}\n}\n",
	"sourcePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
	"ast": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1224],
			"ERC20": [1123],
			"IERC20": [1201],
			"Ownable": [622],
			"Staking": [346],
			"StakingFactory": [512]
		},
		"id": 513,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 513,
				"sourceUnit": 1124,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 513,
				"sourceUnit": 623,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 346,
				"linearizedBaseContracts": [346],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 346,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$512",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 512,
								"src": "520:14:0"
							},
							"referencedDeclaration": 512,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$512",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1201",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1201,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1201,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1201",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1201",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1201,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1201,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1201",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 156,
							"nodeType": "Block",
							"src": "630:577:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"baseExpression": {
														"id": 51,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "642:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
															"typeString": "mapping(address => struct Staking.UserData storage ref)"
														}
													},
													"id": 54,
													"indexExpression": {
														"expression": {
															"id": 52,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "648:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "648:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "642:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$31_storage",
														"typeString": "struct Staking.UserData storage ref"
													}
												},
												"id": 55,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "allowed",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 12,
												"src": "642:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											],
											"id": 50,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "634:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
												"typeString": "function (bool) pure"
											}
										},
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "634:34:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 57,
									"nodeType": "ExpressionStatement",
									"src": "634:34:0"
								},
								{
									"assignments": [59],
									"declarations": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 156,
											"src": "672:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 58,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 63,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 60,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "688:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$512",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 355,
											"src": "688:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "688:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "672:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 64,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 59,
											"src": "711:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 65,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "720:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "711:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 90,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 88,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 59,
												"src": "848:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 89,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "857:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "848:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 114,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 112,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "985:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "994:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "985:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 136,
											"nodeType": "IfStatement",
											"src": "981:131:0",
											"trueBody": {
												"id": 135,
												"nodeType": "Block",
												"src": "997:115:0",
												"statements": [
													{
														"expression": {
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 115,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1002:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 118,
																	"indexExpression": {
																		"expression": {
																			"id": 116,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1008:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1008:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1002:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1002:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 120,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1036:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1002:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 122,
														"nodeType": "ExpressionStatement",
														"src": "1002:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 126,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1073:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1073:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 130,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1093:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$346",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$346",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1085:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 128,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1085:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1085:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 132,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1100:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 123,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1047:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1201",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1182,
																"src": "1047:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1047:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 134,
														"nodeType": "ExpressionStatement",
														"src": "1047:60:0"
													}
												]
											}
										},
										"id": 137,
										"nodeType": "IfStatement",
										"src": "844:268:0",
										"trueBody": {
											"id": 111,
											"nodeType": "Block",
											"src": "860:115:0",
											"statements": [
												{
													"expression": {
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 91,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "865:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 94,
																"indexExpression": {
																	"expression": {
																		"id": 92,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "871:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "871:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "865:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "865:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 96,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "865:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 98,
													"nodeType": "ExpressionStatement",
													"src": "865:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "936:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 106,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "956:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$346",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$346",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "948:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "948:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 108,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "963:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 99,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "910:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1201",
																	"typeString": "contract IERC20"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1182,
															"src": "910:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "910:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 110,
													"nodeType": "ExpressionStatement",
													"src": "910:60:0"
												}
											]
										}
									},
									"id": 138,
									"nodeType": "IfStatement",
									"src": "707:405:0",
									"trueBody": {
										"id": 87,
										"nodeType": "Block",
										"src": "723:115:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 67,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "728:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 70,
															"indexExpression": {
																"expression": {
																	"id": 68,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "734:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "734:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "728:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "728:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 72,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "728:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "728:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 78,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "799:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "799:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 82,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "819:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$346",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$346",
																		"typeString": "contract Staking"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "811:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "811:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "811:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 75,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "773:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1201",
																"typeString": "contract IERC20"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "773:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "773:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 145,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 139,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 142,
												"indexExpression": {
													"expression": {
														"id": 140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1121:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1121:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1115:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 143,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1115:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 144,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1143:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1115:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 146,
									"nodeType": "ExpressionStatement",
									"src": "1115:34:0"
								},
								{
									"expression": {
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 147,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 150,
												"indexExpression": {
													"expression": {
														"id": 148,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1159:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1159:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1153:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1153:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 152,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1188:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 153,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1188:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1153:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 155,
									"nodeType": "ExpressionStatement",
									"src": "1153:50:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 157,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 157,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 346,
						"src": "590:617:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 316,
							"nodeType": "Block",
							"src": "1275:802:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 169,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 163,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 166,
												"indexExpression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1289:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1289:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1283:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 167,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1283:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 168,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1317:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1283:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 201,
									"nodeType": "IfStatement",
									"src": "1279:199:0",
									"trueBody": {
										"id": 200,
										"nodeType": "Block",
										"src": "1320:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 170,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1329:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1329:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 172,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1347:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1347:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1369:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 176,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1374:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1369:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1347:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1329:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 199,
												"nodeType": "IfStatement",
												"src": "1325:149:0",
												"trueBody": {
													"id": 198,
													"nodeType": "Block",
													"src": "1382:92:0",
													"statements": [
														{
															"expression": {
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 180,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1388:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 183,
																		"indexExpression": {
																			"expression": {
																				"id": 181,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1394:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1394:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1388:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1388:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 191,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 185,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1423:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 186,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1430:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 189,
																								"indexExpression": {
																									"expression": {
																										"id": 187,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1436:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 188,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1436:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1430:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 190,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1430:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1423:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 192,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1422:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 193,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1421:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1465:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1421:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1388:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 197,
															"nodeType": "ExpressionStatement",
															"src": "1388:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 202,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1485:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 205,
												"indexExpression": {
													"expression": {
														"id": 203,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1491:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1491:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1485:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 206,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1485:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 207,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1519:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1485:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 240,
									"nodeType": "IfStatement",
									"src": "1481:199:0",
									"trueBody": {
										"id": 239,
										"nodeType": "Block",
										"src": "1522:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 209,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1531:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 211,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1549:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1549:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1549:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1571:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 215,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1576:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1571:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1549:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1531:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "IfStatement",
												"src": "1527:149:0",
												"trueBody": {
													"id": 237,
													"nodeType": "Block",
													"src": "1584:92:0",
													"statements": [
														{
															"expression": {
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 219,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1590:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 222,
																		"indexExpression": {
																			"expression": {
																				"id": 220,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1596:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1596:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1590:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1590:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 224,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1625:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 225,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1632:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 228,
																								"indexExpression": {
																									"expression": {
																										"id": 226,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1638:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 227,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1638:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1632:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 229,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1632:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1625:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 231,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1624:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 232,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1623:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1667:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1623:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1590:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 236,
															"nodeType": "ExpressionStatement",
															"src": "1590:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 247,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 241,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 244,
												"indexExpression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1693:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1687:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 245,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1687:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 246,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1721:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1687:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 309,
										"nodeType": "Block",
										"src": "1888:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 279,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1897:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 281,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1915:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1915:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1915:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1937:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 285,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1942:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1937:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1915:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1897:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "1893:149:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "1950:92:0",
													"statements": [
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 289,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1956:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 292,
																		"indexExpression": {
																			"expression": {
																				"id": 290,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1962:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1962:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1956:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1956:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 300,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1991:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 295,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1998:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 298,
																								"indexExpression": {
																									"expression": {
																										"id": 296,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2004:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 297,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2004:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1998:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 299,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1998:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1991:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 301,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1990:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 302,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1989:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2033:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1989:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1956:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "1956:80:0"
														}
													]
												}
											}
										]
									},
									"id": 310,
									"nodeType": "IfStatement",
									"src": "1683:363:0",
									"trueBody": {
										"id": 278,
										"nodeType": "Block",
										"src": "1724:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 248,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1733:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 250,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1751:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1773:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 254,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1778:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1773:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1751:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1733:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"nodeType": "IfStatement",
												"src": "1729:149:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "1786:92:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 258,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1792:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 261,
																		"indexExpression": {
																			"expression": {
																				"id": 259,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1798:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1798:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1792:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1792:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 263,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1827:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 264,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1834:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 267,
																								"indexExpression": {
																									"expression": {
																										"id": 265,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1840:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 266,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1840:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1834:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 268,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1834:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1827:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 270,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1826:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 271,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1825:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1869:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1825:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1792:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "1792:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 311,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2056:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 314,
										"indexExpression": {
											"expression": {
												"id": 312,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2062:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 313,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2062:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2056:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 162,
									"id": 315,
									"nodeType": "Return",
									"src": "2049:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 317,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 158,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1234:2:0"
						},
						"returnParameters": {
							"id": 162,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 317,
									"src": "1253:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 160,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 159,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1253:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1253:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1252:22:0"
						},
						"scope": 346,
						"src": "1210:867:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 344,
							"nodeType": "Block",
							"src": "2165:122:0",
							"statements": [
								{
									"expression": {
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 326,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2169:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$512",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 328,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2194:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 327,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 512,
												"src": "2179:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$512_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 329,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2179:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$512",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2169:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$512",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 331,
									"nodeType": "ExpressionStatement",
									"src": "2169:34:0"
								},
								{
									"expression": {
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 332,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2207:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 334,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "2229:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 333,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1201,
												"src": "2222:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1201_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 335,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2222:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"src": "2207:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1201",
											"typeString": "contract IERC20"
										}
									},
									"id": 337,
									"nodeType": "ExpressionStatement",
									"src": "2207:36:0"
								},
								{
									"expression": {
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 338,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2247:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 340,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "2269:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 339,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1201,
												"src": "2262:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1201_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 341,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2262:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"src": "2247:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1201",
											"typeString": "contract IERC20"
										}
									},
									"id": 343,
									"nodeType": "ExpressionStatement",
									"src": "2247:36:0"
								}
							]
						},
						"id": 345,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 324,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "2095:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2095:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "2115:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 320,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2115:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "2140:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2140:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2091:73:0"
						},
						"returnParameters": {
							"id": 325,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2165:0:0"
						},
						"scope": 346,
						"src": "2080:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 513,
				"src": "167:2122:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 347,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 622,
							"src": "2318:7:0"
						},
						"id": 348,
						"nodeType": "InheritanceSpecifier",
						"src": "2318:7:0"
					}
				],
				"contractDependencies": [346, 622, 1224],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 512,
				"linearizedBaseContracts": [512, 622, 1224],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 351,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2329:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1201",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 350,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 349,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1201,
								"src": "2329:6:0"
							},
							"referencedDeclaration": 1201,
							"src": "2329:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1201",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 353,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2351:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 352,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2351:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 355,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2378:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 354,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2378:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 358,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2401:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 356,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2401:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 357,
							"nodeType": "ArrayTypeName",
							"src": "2401:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 363,
						"members": [
							{
								"constant": false,
								"id": 360,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 363,
								"src": "2465:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 359,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2465:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 362,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 363,
								"src": "2491:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 361,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2491:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 512,
						"src": "2435:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 368,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2552:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$363_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 367,
							"keyType": {
								"id": 364,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2560:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2552:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$363_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 366,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 365,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 363,
									"src": "2571:18:0"
								},
								"referencedDeclaration": 363,
								"src": "2571:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 377,
						"members": [
							{
								"constant": false,
								"id": 370,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2655:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 369,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2655:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 372,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2683:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 371,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2683:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 374,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2716:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 373,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2716:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 376,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2742:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 375,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2742:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 512,
						"src": "2634:133:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "0b96fe53",
						"id": 382,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2770:42:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
							"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 381,
							"keyType": {
								"id": 378,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "2778:6:0",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							},
							"nodeType": "Mapping",
							"src": "2770:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
								"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 380,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 379,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 377,
									"src": "2788:9:0"
								},
								"referencedDeclaration": 377,
								"src": "2788:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$377_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 424,
							"nodeType": "Block",
							"src": "2859:172:0",
							"statements": [
								{
									"expression": {
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 387,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "2863:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 389,
											"indexExpression": {
												"hexValue": "31",
												"id": 388,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2870:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2863:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2885:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2899:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2903:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													}
												],
												"id": 390,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 377,
												"src": "2875:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$377_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 395,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2875:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2863:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$377_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 397,
									"nodeType": "ExpressionStatement",
									"src": "2863:47:0"
								},
								{
									"expression": {
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 398,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "2914:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 400,
											"indexExpression": {
												"hexValue": "32",
												"id": 399,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2921:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2914:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2950:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2954:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													}
												],
												"id": 401,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 377,
												"src": "2926:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$377_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2926:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2914:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$377_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 408,
									"nodeType": "ExpressionStatement",
									"src": "2914:47:0"
								},
								{
									"expression": {
										"id": 418,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 409,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "2965:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 411,
											"indexExpression": {
												"hexValue": "33",
												"id": 410,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2972:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2965:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2996:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3002:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													}
												],
												"id": 412,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 377,
												"src": "2977:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$377_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 417,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2977:36:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2965:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$377_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 419,
									"nodeType": "ExpressionStatement",
									"src": "2965:48:0"
								},
								{
									"expression": {
										"id": 422,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 420,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3018:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 421,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3026:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3018:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 423,
									"nodeType": "ExpressionStatement",
									"src": "3018:9:0"
								}
							]
						},
						"id": 425,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 385,
								"modifierName": {
									"id": 384,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 571,
									"src": "2849:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "2849:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 383,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2837:2:0"
						},
						"returnParameters": {
							"id": 386,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2859:0:0"
						},
						"scope": 512,
						"src": "2816:215:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 449,
							"nodeType": "Block",
							"src": "3089:101:0",
							"statements": [
								{
									"expression": {
										"id": 436,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 432,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 351,
											"src": "3093:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 434,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "3115:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 433,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1201,
												"src": "3108:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1201_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 435,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3108:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"src": "3093:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1201",
											"typeString": "contract IERC20"
										}
									},
									"id": 437,
									"nodeType": "ExpressionStatement",
									"src": "3093:36:0"
								},
								{
									"expression": {
										"id": 440,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 438,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 353,
											"src": "3133:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 439,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 429,
											"src": "3145:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3133:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 441,
									"nodeType": "ExpressionStatement",
									"src": "3133:22:0"
								},
								{
									"expression": {
										"id": 444,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 442,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3159:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 443,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3167:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3159:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 445,
									"nodeType": "ExpressionStatement",
									"src": "3159:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 446,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 425,
											"src": "3172:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3172:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 448,
									"nodeType": "ExpressionStatement",
									"src": "3172:14:0"
								}
							]
						},
						"id": 450,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 430,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "3046:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3046:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "3069:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3045:43:0"
						},
						"returnParameters": {
							"id": 431,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3089:0:0"
						},
						"scope": 512,
						"src": "3034:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 510,
							"nodeType": "Block",
							"src": "3270:356:0",
							"statements": [
								{
									"assignments": [461],
									"declarations": [
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 510,
											"src": "3274:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 460,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 459,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 363,
													"src": "3274:18:0"
												},
												"referencedDeclaration": 363,
												"src": "3274:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 465,
									"initialValue": {
										"baseExpression": {
											"id": 462,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 368,
											"src": "3308:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$363_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 464,
										"indexExpression": {
											"id": 463,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 452,
											"src": "3341:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3308:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3274:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 473,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 467,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3366:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 360,
													"src": "3366:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3397:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 469,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3389:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3366:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 474,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3401:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 466,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3358:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3358:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 476,
									"nodeType": "ExpressionStatement",
									"src": "3358:93:0"
								},
								{
									"expression": {
										"id": 496,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 477,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 461,
												"src": "3456:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 479,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 360,
											"src": "3456:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3506:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3498:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3498:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3498:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 491,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3521:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1201",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1201",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3513:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "3536:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3486:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$346_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 483,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 482,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 346,
																"src": "3490:7:0"
															},
															"referencedDeclaration": 346,
															"src": "3490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$346",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3486:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$346",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$346",
														"typeString": "contract Staking"
													}
												],
												"id": 481,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3478:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 495,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3478:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3456:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 497,
									"nodeType": "ExpressionStatement",
									"src": "3456:94:0"
								},
								{
									"expression": {
										"id": 502,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 498,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 461,
												"src": "3554:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 500,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 362,
											"src": "3554:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 501,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 454,
											"src": "3574:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3554:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 503,
									"nodeType": "ExpressionStatement",
									"src": "3554:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 507,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 452,
												"src": "3609:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 504,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 358,
												"src": "3590:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 506,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3590:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 508,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3590:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 509,
									"nodeType": "ExpressionStatement",
									"src": "3590:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 511,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 457,
								"modifierName": {
									"id": 456,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 571,
									"src": "3260:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3260:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 455,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "3209:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 451,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3209:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 454,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "3231:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 453,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3231:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3208:44:0"
						},
						"returnParameters": {
							"id": 458,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3270:0:0"
						},
						"scope": 512,
						"src": "3193:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 513,
				"src": "2291:1337:0"
			}
		],
		"src": "32:3597:0"
	},
	"legacyAST": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/BYN.sol",
		"exportedSymbols": {
			"Context": [1224],
			"ERC20": [1123],
			"IERC20": [1201],
			"Ownable": [622],
			"Staking": [346],
			"StakingFactory": [512]
		},
		"id": 513,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 513,
				"sourceUnit": 1124,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 513,
				"sourceUnit": 623,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [],
				"contractDependencies": [],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 346,
				"linearizedBaseContracts": [346],
				"name": "Staking",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 10,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "187:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 4,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "187:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 9,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 7,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 5,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "204:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 6,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "209:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "204:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 8,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "214:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "204:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "Staking.UserData",
						"id": 31,
						"members": [
							{
								"constant": false,
								"id": 12,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "239:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 11,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "239:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 14,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "255:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 13,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "255:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 16,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "271:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 15,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "271:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 18,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "295:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 17,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "295:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 20,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "319:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 19,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "319:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 22,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "343:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 21,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "343:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "367:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 23,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "367:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "391:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 25,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "391:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "425:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "425:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 31,
								"src": "453:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "453:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 346,
						"src": "219:260:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 36,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "482:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
							"typeString": "mapping(address => struct Staking.UserData)"
						},
						"typeName": {
							"id": 35,
							"keyType": {
								"id": 32,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "490:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "482:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
								"typeString": "mapping(address => struct Staking.UserData)"
							},
							"valueType": {
								"id": 34,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 33,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 31,
									"src": "501:8:0"
								},
								"referencedDeclaration": 31,
								"src": "501:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
									"typeString": "struct Staking.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 39,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "520:22:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactory_$512",
							"typeString": "contract StakingFactory"
						},
						"typeName": {
							"id": 38,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 37,
								"name": "StakingFactory",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 512,
								"src": "520:14:0"
							},
							"referencedDeclaration": 512,
							"src": "520:14:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactory_$512",
								"typeString": "contract StakingFactory"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 42,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "545:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1201",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 41,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 40,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1201,
								"src": "545:6:0"
							},
							"referencedDeclaration": 1201,
							"src": "545:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1201",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 45,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 346,
						"src": "567:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1201",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 44,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 43,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1201,
								"src": "567:6:0"
							},
							"referencedDeclaration": 1201,
							"src": "567:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1201",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 156,
							"nodeType": "Block",
							"src": "630:577:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"baseExpression": {
														"id": 51,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "642:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
															"typeString": "mapping(address => struct Staking.UserData storage ref)"
														}
													},
													"id": 54,
													"indexExpression": {
														"expression": {
															"id": 52,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "648:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "648:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "642:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$31_storage",
														"typeString": "struct Staking.UserData storage ref"
													}
												},
												"id": 55,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "allowed",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 12,
												"src": "642:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											],
											"id": 50,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "634:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
												"typeString": "function (bool) pure"
											}
										},
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "634:34:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 57,
									"nodeType": "ExpressionStatement",
									"src": "634:34:0"
								},
								{
									"assignments": [59],
									"declarations": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 156,
											"src": "672:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 58,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "672:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 63,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 60,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "688:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactory_$512",
													"typeString": "contract StakingFactory"
												}
											},
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 355,
											"src": "688:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "688:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "672:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 64,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 59,
											"src": "711:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 65,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "720:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "711:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 90,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 88,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 59,
												"src": "848:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "32",
												"id": 89,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "857:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "848:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"falseBody": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 114,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 112,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "985:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"hexValue": "33",
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "994:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3_by_1",
														"typeString": "int_const 3"
													},
													"value": "3"
												},
												"src": "985:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"id": 136,
											"nodeType": "IfStatement",
											"src": "981:131:0",
											"trueBody": {
												"id": 135,
												"nodeType": "Block",
												"src": "997:115:0",
												"statements": [
													{
														"expression": {
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 115,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "1002:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																			"typeString": "mapping(address => struct Staking.UserData storage ref)"
																		}
																	},
																	"id": 118,
																	"indexExpression": {
																		"expression": {
																			"id": 116,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1008:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1008:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1002:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserData_$31_storage",
																		"typeString": "struct Staking.UserData storage ref"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "level3Tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 20,
																"src": "1002:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 120,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1036:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1002:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 122,
														"nodeType": "ExpressionStatement",
														"src": "1002:40:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 126,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1073:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1073:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 130,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1093:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$346",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$346",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1085:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 128,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1085:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1085:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 132,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1100:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 123,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1047:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1201",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1182,
																"src": "1047:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1047:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 134,
														"nodeType": "ExpressionStatement",
														"src": "1047:60:0"
													}
												]
											}
										},
										"id": 137,
										"nodeType": "IfStatement",
										"src": "844:268:0",
										"trueBody": {
											"id": 111,
											"nodeType": "Block",
											"src": "860:115:0",
											"statements": [
												{
													"expression": {
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"baseExpression": {
																	"id": 91,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "865:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																		"typeString": "mapping(address => struct Staking.UserData storage ref)"
																	}
																},
																"id": 94,
																"indexExpression": {
																	"expression": {
																		"id": 92,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "871:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "871:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "865:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserData_$31_storage",
																	"typeString": "struct Staking.UserData storage ref"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "level2Tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "865:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 96,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "865:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 98,
													"nodeType": "ExpressionStatement",
													"src": "865:40:0"
												},
												{
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "936:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 106,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "956:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$346",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$346",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "948:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "948:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 108,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "963:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 99,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "910:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1201",
																	"typeString": "contract IERC20"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1182,
															"src": "910:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "910:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 110,
													"nodeType": "ExpressionStatement",
													"src": "910:60:0"
												}
											]
										}
									},
									"id": 138,
									"nodeType": "IfStatement",
									"src": "707:405:0",
									"trueBody": {
										"id": 87,
										"nodeType": "Block",
										"src": "723:115:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 67,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "728:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																	"typeString": "mapping(address => struct Staking.UserData storage ref)"
																}
															},
															"id": 70,
															"indexExpression": {
																"expression": {
																	"id": 68,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "734:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "734:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "728:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$31_storage",
																"typeString": "struct Staking.UserData storage ref"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "728:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 72,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "728:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "728:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 78,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "799:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "799:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 82,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "819:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$346",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$346",
																		"typeString": "contract Staking"
																	}
																],
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "811:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 80,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "811:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "811:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 75,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "773:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1201",
																"typeString": "contract IERC20"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1182,
														"src": "773:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "773:60:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 145,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 139,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 142,
												"indexExpression": {
													"expression": {
														"id": 140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1121:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1121:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1115:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 143,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "1115:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 144,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 47,
											"src": "1143:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1115:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 146,
									"nodeType": "ExpressionStatement",
									"src": "1115:34:0"
								},
								{
									"expression": {
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 147,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 150,
												"indexExpression": {
													"expression": {
														"id": 148,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1159:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1159:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1153:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 151,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 30,
											"src": "1153:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 152,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "1188:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 153,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "1188:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1153:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 155,
									"nodeType": "ExpressionStatement",
									"src": "1153:50:0"
								}
							]
						},
						"functionSelector": "b6b55f25",
						"id": 157,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 48,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 157,
									"src": "607:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "606:16:0"
						},
						"returnParameters": {
							"id": 49,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "630:0:0"
						},
						"scope": 346,
						"src": "590:617:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 316,
							"nodeType": "Block",
							"src": "1275:802:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 169,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 163,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 166,
												"indexExpression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1289:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1289:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1283:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 167,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 16,
											"src": "1283:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 168,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1317:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1283:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 201,
									"nodeType": "IfStatement",
									"src": "1279:199:0",
									"trueBody": {
										"id": 200,
										"nodeType": "Block",
										"src": "1320:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 170,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1329:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1329:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 172,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1347:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1347:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1369:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 176,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1374:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1369:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1347:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1329:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 199,
												"nodeType": "IfStatement",
												"src": "1325:149:0",
												"trueBody": {
													"id": 198,
													"nodeType": "Block",
													"src": "1382:92:0",
													"statements": [
														{
															"expression": {
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 180,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1388:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 183,
																		"indexExpression": {
																			"expression": {
																				"id": 181,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1394:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1394:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1388:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "1388:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 191,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "38323139",
																							"id": 185,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1423:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8219_by_1",
																								"typeString": "int_const 8219"
																							},
																							"value": "8219"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 186,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1430:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 189,
																								"indexExpression": {
																									"expression": {
																										"id": 187,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1436:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 188,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1436:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1430:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 190,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "1430:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1423:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 192,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1422:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 193,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1421:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1465:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1421:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1388:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 197,
															"nodeType": "ExpressionStatement",
															"src": "1388:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 202,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1485:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 205,
												"indexExpression": {
													"expression": {
														"id": 203,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1491:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1491:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1485:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 206,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level2Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 18,
											"src": "1485:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 207,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1519:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1485:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 240,
									"nodeType": "IfStatement",
									"src": "1481:199:0",
									"trueBody": {
										"id": 239,
										"nodeType": "Block",
										"src": "1522:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 209,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1531:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 211,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1549:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1549:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1549:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1571:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 215,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1576:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1571:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1549:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1531:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "IfStatement",
												"src": "1527:149:0",
												"trueBody": {
													"id": 237,
													"nodeType": "Block",
													"src": "1584:92:0",
													"statements": [
														{
															"expression": {
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 219,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1590:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 222,
																		"indexExpression": {
																			"expression": {
																				"id": 220,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1596:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1596:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1590:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level2Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 24,
																	"src": "1590:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33303832",
																							"id": 224,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1625:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3082_by_1",
																								"typeString": "int_const 3082"
																							},
																							"value": "3082"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 225,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1632:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 228,
																								"indexExpression": {
																									"expression": {
																										"id": 226,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1638:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 227,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1638:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1632:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 229,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level2Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "1632:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1625:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 231,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1624:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 232,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1623:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1667:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1623:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1590:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 236,
															"nodeType": "ExpressionStatement",
															"src": "1590:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 247,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 241,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "1687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
														"typeString": "mapping(address => struct Staking.UserData storage ref)"
													}
												},
												"id": 244,
												"indexExpression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1693:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "1687:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$31_storage",
													"typeString": "struct Staking.UserData storage ref"
												}
											},
											"id": 245,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level3Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 20,
											"src": "1687:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 246,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1721:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "1687:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"falseBody": {
										"id": 309,
										"nodeType": "Block",
										"src": "1888:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 279,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1897:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 281,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1915:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1915:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1915:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3630",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1937:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 285,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1942:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1937:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1915:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1897:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "1893:149:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "1950:92:0",
													"statements": [
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 289,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1956:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 292,
																		"indexExpression": {
																			"expression": {
																				"id": 290,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1962:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1962:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1956:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1956:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 300,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1991:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 295,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1998:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 298,
																								"indexExpression": {
																									"expression": {
																										"id": 296,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2004:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 297,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2004:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1998:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 299,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1998:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1991:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 301,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1990:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 302,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1989:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2033:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1989:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1956:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "1956:80:0"
														}
													]
												}
											}
										]
									},
									"id": 310,
									"nodeType": "IfStatement",
									"src": "1683:363:0",
									"trueBody": {
										"id": 278,
										"nodeType": "Block",
										"src": "1724:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 248,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1733:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 250,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "1751:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3435",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1773:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 254,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1778:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1773:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1751:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1733:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"nodeType": "IfStatement",
												"src": "1729:149:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "1786:92:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 258,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "1792:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																				"typeString": "mapping(address => struct Staking.UserData storage ref)"
																			}
																		},
																		"id": 261,
																		"indexExpression": {
																			"expression": {
																				"id": 259,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1798:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1798:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1792:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$31_storage",
																			"typeString": "struct Staking.UserData storage ref"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level3Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "1792:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "32363133",
																							"id": 263,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1827:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2613_by_1",
																								"typeString": "int_const 2613"
																							},
																							"value": "2613"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 264,
																									"name": "users",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 36,
																									"src": "1834:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
																										"typeString": "mapping(address => struct Staking.UserData storage ref)"
																									}
																								},
																								"id": 267,
																								"indexExpression": {
																									"expression": {
																										"id": 265,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "1840:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 266,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "1840:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1834:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$31_storage",
																									"typeString": "struct Staking.UserData storage ref"
																								}
																							},
																							"id": 268,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level3Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 20,
																							"src": "1834:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1827:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 270,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1826:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 271,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1825:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1869:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1825:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1792:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "1792:80:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"baseExpression": {
											"id": 311,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 36,
											"src": "2056:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$31_storage_$",
												"typeString": "mapping(address => struct Staking.UserData storage ref)"
											}
										},
										"id": 314,
										"indexExpression": {
											"expression": {
												"id": 312,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2062:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 313,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2062:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2056:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage",
											"typeString": "struct Staking.UserData storage ref"
										}
									},
									"functionReturnParameters": 162,
									"id": 315,
									"nodeType": "Return",
									"src": "2049:24:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 317,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 158,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1234:2:0"
						},
						"returnParameters": {
							"id": 162,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 317,
									"src": "1253:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$31_memory_ptr",
										"typeString": "struct Staking.UserData"
									},
									"typeName": {
										"id": 160,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 159,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 31,
											"src": "1253:8:0"
										},
										"referencedDeclaration": 31,
										"src": "1253:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$31_storage_ptr",
											"typeString": "struct Staking.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1252:22:0"
						},
						"scope": 346,
						"src": "1210:867:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 344,
							"nodeType": "Block",
							"src": "2165:122:0",
							"statements": [
								{
									"expression": {
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 326,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 39,
											"src": "2169:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$512",
												"typeString": "contract StakingFactory"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 328,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2194:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 327,
												"name": "StakingFactory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 512,
												"src": "2179:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactory_$512_$",
													"typeString": "type(contract StakingFactory)"
												}
											},
											"id": 329,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2179:24:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactory_$512",
												"typeString": "contract StakingFactory"
											}
										},
										"src": "2169:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactory_$512",
											"typeString": "contract StakingFactory"
										}
									},
									"id": 331,
									"nodeType": "ExpressionStatement",
									"src": "2169:34:0"
								},
								{
									"expression": {
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 332,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "2207:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 334,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "2229:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 333,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1201,
												"src": "2222:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1201_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 335,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2222:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"src": "2207:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1201",
											"typeString": "contract IERC20"
										}
									},
									"id": 337,
									"nodeType": "ExpressionStatement",
									"src": "2207:36:0"
								},
								{
									"expression": {
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 338,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "2247:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 340,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "2269:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 339,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1201,
												"src": "2262:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1201_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 341,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2262:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"src": "2247:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1201",
											"typeString": "contract IERC20"
										}
									},
									"id": 343,
									"nodeType": "ExpressionStatement",
									"src": "2247:36:0"
								}
							]
						},
						"id": 345,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 324,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "2095:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2095:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "2115:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 320,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2115:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "2140:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 322,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2140:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2091:73:0"
						},
						"returnParameters": {
							"id": 325,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2165:0:0"
						},
						"scope": 346,
						"src": "2080:207:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 513,
				"src": "167:2122:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 347,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 622,
							"src": "2318:7:0"
						},
						"id": 348,
						"nodeType": "InheritanceSpecifier",
						"src": "2318:7:0"
					}
				],
				"contractDependencies": [346, 622, 1224],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 512,
				"linearizedBaseContracts": [512, 622, 1224],
				"name": "StakingFactory",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 351,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2329:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$1201",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 350,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 349,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 1201,
								"src": "2329:6:0"
							},
							"referencedDeclaration": 1201,
							"src": "2329:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$1201",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 353,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2351:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 352,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2351:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 355,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2378:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 354,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "2378:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 358,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2401:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 356,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2401:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 357,
							"nodeType": "ArrayTypeName",
							"src": "2401:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.StakingRewardsInfo",
						"id": 363,
						"members": [
							{
								"constant": false,
								"id": 360,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 363,
								"src": "2465:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 359,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "2465:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 362,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 363,
								"src": "2491:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 361,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2491:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 512,
						"src": "2435:80:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 368,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2552:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$363_storage_$",
							"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 367,
							"keyType": {
								"id": 364,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "2560:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "2552:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$363_storage_$",
								"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 366,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 365,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 363,
									"src": "2571:18:0"
								},
								"referencedDeclaration": 363,
								"src": "2571:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
									"typeString": "struct StakingFactory.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactory.LevelData",
						"id": 377,
						"members": [
							{
								"constant": false,
								"id": 370,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2655:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 369,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2655:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 372,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2683:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 371,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2683:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 374,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2716:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 373,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2716:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 376,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 377,
								"src": "2742:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 375,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "2742:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 512,
						"src": "2634:133:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "0b96fe53",
						"id": 382,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 512,
						"src": "2770:42:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
							"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
						},
						"typeName": {
							"id": 381,
							"keyType": {
								"id": 378,
								"name": "int256",
								"nodeType": "ElementaryTypeName",
								"src": "2778:6:0",
								"typeDescriptions": {
									"typeIdentifier": "t_int256",
									"typeString": "int256"
								}
							},
							"nodeType": "Mapping",
							"src": "2770:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
								"typeString": "mapping(int256 => struct StakingFactory.LevelData)"
							},
							"valueType": {
								"id": 380,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 379,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 377,
									"src": "2788:9:0"
								},
								"referencedDeclaration": 377,
								"src": "2788:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$377_storage_ptr",
									"typeString": "struct StakingFactory.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 424,
							"nodeType": "Block",
							"src": "2859:172:0",
							"statements": [
								{
									"expression": {
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 387,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "2863:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 389,
											"indexExpression": {
												"hexValue": "31",
												"id": 388,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2870:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2863:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "333030303030",
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2885:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													"value": "300000"
												},
												{
													"hexValue": "38323139",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													"value": "8219"
												},
												{
													"hexValue": "3330",
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2899:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "323436353735",
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2903:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													},
													"value": "246575"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_300000_by_1",
														"typeString": "int_const 300000"
													},
													{
														"typeIdentifier": "t_rational_8219_by_1",
														"typeString": "int_const 8219"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_246575_by_1",
														"typeString": "int_const 246575"
													}
												],
												"id": 390,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 377,
												"src": "2875:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$377_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 395,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2875:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2863:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$377_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 397,
									"nodeType": "ExpressionStatement",
									"src": "2863:47:0"
								},
								{
									"expression": {
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 398,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "2914:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 400,
											"indexExpression": {
												"hexValue": "32",
												"id": 399,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2921:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2914:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "363030303030",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													"value": "600000"
												},
												{
													"hexValue": "33303832",
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													"value": "3082"
												},
												{
													"hexValue": "3435",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2950:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													"value": "45"
												},
												{
													"hexValue": "313834393332",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2954:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													},
													"value": "184932"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_600000_by_1",
														"typeString": "int_const 600000"
													},
													{
														"typeIdentifier": "t_rational_3082_by_1",
														"typeString": "int_const 3082"
													},
													{
														"typeIdentifier": "t_rational_45_by_1",
														"typeString": "int_const 45"
													},
													{
														"typeIdentifier": "t_rational_184932_by_1",
														"typeString": "int_const 184932"
													}
												],
												"id": 401,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 377,
												"src": "2926:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$377_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 406,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2926:35:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2914:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$377_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 408,
									"nodeType": "ExpressionStatement",
									"src": "2914:47:0"
								},
								{
									"expression": {
										"id": 418,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 409,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 382,
												"src": "2965:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int256_$_t_struct$_LevelData_$377_storage_$",
													"typeString": "mapping(int256 => struct StakingFactory.LevelData storage ref)"
												}
											},
											"id": 411,
											"indexExpression": {
												"hexValue": "33",
												"id": 410,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2972:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "2965:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_storage",
												"typeString": "struct StakingFactory.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "31303030303030",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													"value": "1000000"
												},
												{
													"hexValue": "32363330",
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2996:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													"value": "2630"
												},
												{
													"hexValue": "3630",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3002:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												{
													"hexValue": "323633303134",
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													},
													"value": "263014"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1000000_by_1",
														"typeString": "int_const 1000000"
													},
													{
														"typeIdentifier": "t_rational_2630_by_1",
														"typeString": "int_const 2630"
													},
													{
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													{
														"typeIdentifier": "t_rational_263014_by_1",
														"typeString": "int_const 263014"
													}
												],
												"id": 412,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 377,
												"src": "2977:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$377_storage_ptr_$",
													"typeString": "type(struct StakingFactory.LevelData storage pointer)"
												}
											},
											"id": 417,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2977:36:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$377_memory_ptr",
												"typeString": "struct StakingFactory.LevelData memory"
											}
										},
										"src": "2965:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$377_storage",
											"typeString": "struct StakingFactory.LevelData storage ref"
										}
									},
									"id": 419,
									"nodeType": "ExpressionStatement",
									"src": "2965:48:0"
								},
								{
									"expression": {
										"id": 422,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 420,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3018:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 421,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3026:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3018:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 423,
									"nodeType": "ExpressionStatement",
									"src": "3018:9:0"
								}
							]
						},
						"id": 425,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 385,
								"modifierName": {
									"id": 384,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 571,
									"src": "2849:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "2849:9:0"
							}
						],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 383,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2837:2:0"
						},
						"returnParameters": {
							"id": 386,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2859:0:0"
						},
						"scope": 512,
						"src": "2816:215:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 449,
							"nodeType": "Block",
							"src": "3089:101:0",
							"statements": [
								{
									"expression": {
										"id": 436,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 432,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 351,
											"src": "3093:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 434,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "3115:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 433,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1201,
												"src": "3108:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$1201_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 435,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3108:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1201",
												"typeString": "contract IERC20"
											}
										},
										"src": "3093:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1201",
											"typeString": "contract IERC20"
										}
									},
									"id": 437,
									"nodeType": "ExpressionStatement",
									"src": "3093:36:0"
								},
								{
									"expression": {
										"id": 440,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 438,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 353,
											"src": "3133:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 439,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 429,
											"src": "3145:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3133:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 441,
									"nodeType": "ExpressionStatement",
									"src": "3133:22:0"
								},
								{
									"expression": {
										"id": 444,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 442,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 355,
											"src": "3159:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 443,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3167:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3159:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 445,
									"nodeType": "ExpressionStatement",
									"src": "3159:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 446,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 425,
											"src": "3172:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 447,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3172:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 448,
									"nodeType": "ExpressionStatement",
									"src": "3172:14:0"
								}
							]
						},
						"id": 450,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 430,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "3046:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3046:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "3069:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3045:43:0"
						},
						"returnParameters": {
							"id": 431,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3089:0:0"
						},
						"scope": 512,
						"src": "3034:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 510,
							"nodeType": "Block",
							"src": "3270:356:0",
							"statements": [
								{
									"assignments": [461],
									"declarations": [
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 510,
											"src": "3274:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
												"typeString": "struct StakingFactory.StakingRewardsInfo"
											},
											"typeName": {
												"id": 460,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 459,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 363,
													"src": "3274:18:0"
												},
												"referencedDeclaration": 363,
												"src": "3274:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 465,
									"initialValue": {
										"baseExpression": {
											"id": 462,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 368,
											"src": "3308:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$363_storage_$",
												"typeString": "mapping(address => struct StakingFactory.StakingRewardsInfo storage ref)"
											}
										},
										"id": 464,
										"indexExpression": {
											"id": 463,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 452,
											"src": "3341:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3308:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage",
											"typeString": "struct StakingFactory.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3274:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 473,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 467,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3366:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
															"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 360,
													"src": "3366:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3397:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 469,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3389:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "3366:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 474,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3401:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 466,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "3358:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3358:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 476,
									"nodeType": "ExpressionStatement",
									"src": "3358:93:0"
								},
								{
									"expression": {
										"id": 496,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 477,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 461,
												"src": "3456:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 479,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 360,
											"src": "3456:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3506:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactory_$512",
																		"typeString": "contract StakingFactory"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3498:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3498:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3498:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 491,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3521:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1201",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1201",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3513:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "3536:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3486:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Staking_$346_$",
															"typeString": "function (address,address,address) returns (contract Staking)"
														},
														"typeName": {
															"id": 483,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 482,
																"name": "Staking",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 346,
																"src": "3490:7:0"
															},
															"referencedDeclaration": 346,
															"src": "3490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$346",
																"typeString": "contract Staking"
															}
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3486:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Staking_$346",
														"typeString": "contract Staking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_Staking_$346",
														"typeString": "contract Staking"
													}
												],
												"id": 481,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "3478:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 495,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "3478:72:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "3456:94:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 497,
									"nodeType": "ExpressionStatement",
									"src": "3456:94:0"
								},
								{
									"expression": {
										"id": 502,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 498,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 461,
												"src": "3554:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$363_storage_ptr",
													"typeString": "struct StakingFactory.StakingRewardsInfo storage pointer"
												}
											},
											"id": 500,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 362,
											"src": "3554:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 501,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 454,
											"src": "3574:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3554:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 503,
									"nodeType": "ExpressionStatement",
									"src": "3554:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 507,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 452,
												"src": "3609:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 504,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 358,
												"src": "3590:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 506,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "3590:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 508,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3590:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 509,
									"nodeType": "ExpressionStatement",
									"src": "3590:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 511,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 457,
								"modifierName": {
									"id": 456,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 571,
									"src": "3260:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "3260:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 455,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "3209:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 451,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3209:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 454,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "3231:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 453,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3231:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3208:44:0"
						},
						"returnParameters": {
							"id": 458,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3270:0:0"
						},
						"scope": 512,
						"src": "3193:433:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					}
				],
				"scope": 513,
				"src": "2291:1337:0"
			}
		],
		"src": "32:3597:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.1+commit.df193b15.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-03-30T16:14:40.726Z",
	"devdoc": {
		"kind": "dev",
		"methods": {
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
