{
	"contractName": "ERC20",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "string",
					"name": "name_",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "symbol_",
					"type": "string"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "recipient",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "addedValue",
					"type": "uint256"
				}
			],
			"name": "increaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "subtractedValue",
					"type": "uint256"
				}
			],
			"name": "decreaseAllowance",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc1925bb3fc1a816be3a1f5d0405e52cbb4aa8625ea934e4b6f681e5d472a24db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59f463a4472966b43b33a20813ae62b0f5a338f0c3a8e5ef8bb19a9764fe2c8d\",\"dweb:/ipfs/QmRiBDg1iEZ3VaRmrKysXWpioaambDZeQ6NQrPV64iBWBN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
	"bytecode": "0x60806040523480156200001157600080fd5b506040516200175a3803806200175a833981810160405281019062000037919062000193565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6113d480620003866000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e40565b60405180910390f35b6100e660048036038101906100e19190610c8e565b610308565b6040516100f39190610e25565b60405180910390f35b610104610326565b6040516101119190610f42565b60405180910390f35b610134600480360381019061012f9190610c3f565b610330565b6040516101419190610e25565b60405180910390f35b610152610431565b60405161015f9190610f5d565b60405180910390f35b610182600480360381019061017d9190610c8e565b61043a565b60405161018f9190610e25565b60405180910390f35b6101b260048036038101906101ad9190610bda565b6104e6565b6040516101bf9190610f42565b60405180910390f35b6101d061052e565b6040516101dd9190610e40565b60405180910390f35b61020060048036038101906101fb9190610c8e565b6105c0565b60405161020d9190610e25565b60405180910390f35b610230600480360381019061022b9190610c8e565b6106b4565b60405161023d9190610e25565b60405180910390f35b610260600480360381019061025b9190610c03565b6106d2565b60405161026d9190610f42565b60405180910390f35b606060038054610285906110a6565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906110a6565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610759565b8484610761565b6001905092915050565b6000600254905090565b600061033d84848461092c565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610759565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ec2565b60405180910390fd5b61042585610414610759565b85846104209190610fea565b610761565b60019150509392505050565b60006012905090565b60006104dc610447610759565b848460016000610455610759565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d79190610f94565b610761565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053d906110a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610569906110a6565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b5050505050905090565b600080600160006105cf610759565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390610f22565b60405180910390fd5b6106a9610697610759565b8585846106a49190610fea565b610761565b600191505092915050565b60006106c86106c1610759565b848461092c565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890610f02565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610e82565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161091f9190610f42565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390610ee2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0390610e62565b60405180910390fd5b610a17838383610bab565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490610ea2565b60405180910390fd5b8181610aa99190610fea565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b399190610f94565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9d9190610f42565b60405180910390a350505050565b505050565b600081359050610bbf81611370565b92915050565b600081359050610bd481611387565b92915050565b600060208284031215610bec57600080fd5b6000610bfa84828501610bb0565b91505092915050565b60008060408385031215610c1657600080fd5b6000610c2485828601610bb0565b9250506020610c3585828601610bb0565b9150509250929050565b600080600060608486031215610c5457600080fd5b6000610c6286828701610bb0565b9350506020610c7386828701610bb0565b9250506040610c8486828701610bc5565b9150509250925092565b60008060408385031215610ca157600080fd5b6000610caf85828601610bb0565b9250506020610cc085828601610bc5565b9150509250929050565b610cd381611030565b82525050565b6000610ce482610f78565b610cee8185610f83565b9350610cfe818560208601611073565b610d0781611136565b840191505092915050565b6000610d1f602383610f83565b9150610d2a82611147565b604082019050919050565b6000610d42602283610f83565b9150610d4d82611196565b604082019050919050565b6000610d65602683610f83565b9150610d70826111e5565b604082019050919050565b6000610d88602883610f83565b9150610d9382611234565b604082019050919050565b6000610dab602583610f83565b9150610db682611283565b604082019050919050565b6000610dce602483610f83565b9150610dd9826112d2565b604082019050919050565b6000610df1602583610f83565b9150610dfc82611321565b604082019050919050565b610e108161105c565b82525050565b610e1f81611066565b82525050565b6000602082019050610e3a6000830184610cca565b92915050565b60006020820190508181036000830152610e5a8184610cd9565b905092915050565b60006020820190508181036000830152610e7b81610d12565b9050919050565b60006020820190508181036000830152610e9b81610d35565b9050919050565b60006020820190508181036000830152610ebb81610d58565b9050919050565b60006020820190508181036000830152610edb81610d7b565b9050919050565b60006020820190508181036000830152610efb81610d9e565b9050919050565b60006020820190508181036000830152610f1b81610dc1565b9050919050565b60006020820190508181036000830152610f3b81610de4565b9050919050565b6000602082019050610f576000830184610e07565b92915050565b6000602082019050610f726000830184610e16565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f9f8261105c565b9150610faa8361105c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fdf57610fde6110d8565b5b828201905092915050565b6000610ff58261105c565b91506110008361105c565b925082821015611013576110126110d8565b5b828203905092915050565b60006110298261103c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611091578082015181840152602081019050611076565b838111156110a0576000848401525b50505050565b600060028204905060018216806110be57607f821691505b602082108114156110d2576110d1611107565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6113798161101e565b811461138457600080fd5b50565b6113908161105c565b811461139b57600080fd5b5056fea26469706673582212205230c1bca543f36eedc2dce836cb9ee82625271e449d5617ee2aa5986d6d56f064736f6c63430008010033",
	"deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e40565b60405180910390f35b6100e660048036038101906100e19190610c8e565b610308565b6040516100f39190610e25565b60405180910390f35b610104610326565b6040516101119190610f42565b60405180910390f35b610134600480360381019061012f9190610c3f565b610330565b6040516101419190610e25565b60405180910390f35b610152610431565b60405161015f9190610f5d565b60405180910390f35b610182600480360381019061017d9190610c8e565b61043a565b60405161018f9190610e25565b60405180910390f35b6101b260048036038101906101ad9190610bda565b6104e6565b6040516101bf9190610f42565b60405180910390f35b6101d061052e565b6040516101dd9190610e40565b60405180910390f35b61020060048036038101906101fb9190610c8e565b6105c0565b60405161020d9190610e25565b60405180910390f35b610230600480360381019061022b9190610c8e565b6106b4565b60405161023d9190610e25565b60405180910390f35b610260600480360381019061025b9190610c03565b6106d2565b60405161026d9190610f42565b60405180910390f35b606060038054610285906110a6565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906110a6565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610759565b8484610761565b6001905092915050565b6000600254905090565b600061033d84848461092c565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610759565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ec2565b60405180910390fd5b61042585610414610759565b85846104209190610fea565b610761565b60019150509392505050565b60006012905090565b60006104dc610447610759565b848460016000610455610759565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d79190610f94565b610761565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053d906110a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610569906110a6565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b5050505050905090565b600080600160006105cf610759565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390610f22565b60405180910390fd5b6106a9610697610759565b8585846106a49190610fea565b610761565b600191505092915050565b60006106c86106c1610759565b848461092c565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890610f02565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610e82565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161091f9190610f42565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390610ee2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0390610e62565b60405180910390fd5b610a17838383610bab565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490610ea2565b60405180910390fd5b8181610aa99190610fea565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b399190610f94565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9d9190610f42565b60405180910390a350505050565b505050565b600081359050610bbf81611370565b92915050565b600081359050610bd481611387565b92915050565b600060208284031215610bec57600080fd5b6000610bfa84828501610bb0565b91505092915050565b60008060408385031215610c1657600080fd5b6000610c2485828601610bb0565b9250506020610c3585828601610bb0565b9150509250929050565b600080600060608486031215610c5457600080fd5b6000610c6286828701610bb0565b9350506020610c7386828701610bb0565b9250506040610c8486828701610bc5565b9150509250925092565b60008060408385031215610ca157600080fd5b6000610caf85828601610bb0565b9250506020610cc085828601610bc5565b9150509250929050565b610cd381611030565b82525050565b6000610ce482610f78565b610cee8185610f83565b9350610cfe818560208601611073565b610d0781611136565b840191505092915050565b6000610d1f602383610f83565b9150610d2a82611147565b604082019050919050565b6000610d42602283610f83565b9150610d4d82611196565b604082019050919050565b6000610d65602683610f83565b9150610d70826111e5565b604082019050919050565b6000610d88602883610f83565b9150610d9382611234565b604082019050919050565b6000610dab602583610f83565b9150610db682611283565b604082019050919050565b6000610dce602483610f83565b9150610dd9826112d2565b604082019050919050565b6000610df1602583610f83565b9150610dfc82611321565b604082019050919050565b610e108161105c565b82525050565b610e1f81611066565b82525050565b6000602082019050610e3a6000830184610cca565b92915050565b60006020820190508181036000830152610e5a8184610cd9565b905092915050565b60006020820190508181036000830152610e7b81610d12565b9050919050565b60006020820190508181036000830152610e9b81610d35565b9050919050565b60006020820190508181036000830152610ebb81610d58565b9050919050565b60006020820190508181036000830152610edb81610d7b565b9050919050565b60006020820190508181036000830152610efb81610d9e565b9050919050565b60006020820190508181036000830152610f1b81610dc1565b9050919050565b60006020820190508181036000830152610f3b81610de4565b9050919050565b6000602082019050610f576000830184610e07565b92915050565b6000602082019050610f726000830184610e16565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f9f8261105c565b9150610faa8361105c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fdf57610fde6110d8565b5b828201905092915050565b6000610ff58261105c565b91506110008361105c565b925082821015611013576110126110d8565b5b828203905092915050565b60006110298261103c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611091578082015181840152602081019050611076565b838111156110a0576000848401525b50505050565b600060028204905060018216806110be57607f821691505b602082108114156110d2576110d1611107565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6113798161101e565b811461138457600080fd5b50565b6113908161105c565b811461139b57600080fd5b5056fea26469706673582212205230c1bca543f36eedc2dce836cb9ee82625271e449d5617ee2aa5986d6d56f064736f6c63430008010033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:3266:16",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "102:259:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "112:75:16",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "179:6:16"
													}
												],
												"functionName": {
													"name": "array_allocation_size_t_string_memory_ptr",
													"nodeType": "YulIdentifier",
													"src": "137:41:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "137:49:16"
											}
										],
										"functionName": {
											"name": "allocate_memory",
											"nodeType": "YulIdentifier",
											"src": "121:15:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "121:66:16"
									},
									"variableNames": [
										{
											"name": "array",
											"nodeType": "YulIdentifier",
											"src": "112:5:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "array",
												"nodeType": "YulIdentifier",
												"src": "203:5:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "210:6:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "196:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "196:21:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "196:21:16"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "226:27:16",
									"value": {
										"arguments": [
											{
												"name": "array",
												"nodeType": "YulIdentifier",
												"src": "241:5:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "248:4:16",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "237:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "237:16:16"
									},
									"variables": [
										{
											"name": "dst",
											"nodeType": "YulTypedName",
											"src": "230:3:16",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "291:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "300:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "303:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "293:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "293:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "293:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "src",
														"nodeType": "YulIdentifier",
														"src": "272:3:16"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "277:6:16"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "268:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "268:16:16"
											},
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "286:3:16"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "265:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "265:25:16"
									},
									"nodeType": "YulIf",
									"src": "262:2:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "src",
												"nodeType": "YulIdentifier",
												"src": "338:3:16"
											},
											{
												"name": "dst",
												"nodeType": "YulIdentifier",
												"src": "343:3:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "348:6:16"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "316:21:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "316:39:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "316:39:16"
								}
							]
						},
						"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "src",
								"nodeType": "YulTypedName",
								"src": "75:3:16",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "80:6:16",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "88:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "array",
								"nodeType": "YulTypedName",
								"src": "96:5:16",
								"type": ""
							}
						],
						"src": "7:354:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "454:215:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "503:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "512:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "515:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "505:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "505:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "505:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "482:6:16"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "490:4:16",
																"type": "",
																"value": "0x1f"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "478:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "478:17:16"
													},
													{
														"name": "end",
														"nodeType": "YulIdentifier",
														"src": "497:3:16"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "474:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "474:27:16"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "467:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "467:35:16"
									},
									"nodeType": "YulIf",
									"src": "464:2:16"
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "528:27:16",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "548:6:16"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "542:5:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "542:13:16"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "532:6:16",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "564:99:16",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "636:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "644:4:16",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "632:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "632:17:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "651:6:16"
											},
											{
												"name": "end",
												"nodeType": "YulIdentifier",
												"src": "659:3:16"
											}
										],
										"functionName": {
											"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
											"nodeType": "YulIdentifier",
											"src": "573:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "573:90:16"
									},
									"variableNames": [
										{
											"name": "array",
											"nodeType": "YulIdentifier",
											"src": "564:5:16"
										}
									]
								}
							]
						},
						"name": "abi_decode_t_string_memory_ptr_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "432:6:16",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "440:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "array",
								"nodeType": "YulTypedName",
								"src": "448:5:16",
								"type": ""
							}
						],
						"src": "381:288:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "789:538:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "835:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "844:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "847:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "837:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "837:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "837:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "810:7:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "819:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "806:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "806:23:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "831:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "802:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "802:32:16"
									},
									"nodeType": "YulIf",
									"src": "799:2:16"
								},
								{
									"nodeType": "YulBlock",
									"src": "861:224:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "876:38:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "900:9:16"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "911:1:16",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "896:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "896:17:16"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "890:5:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "890:24:16"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "880:6:16",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "961:16:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "970:1:16",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "973:1:16",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "963:6:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "963:12:16"
														},
														"nodeType": "YulExpressionStatement",
														"src": "963:12:16"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "933:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "941:18:16",
														"type": "",
														"value": "0xffffffffffffffff"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "930:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "930:30:16"
											},
											"nodeType": "YulIf",
											"src": "927:2:16"
										},
										{
											"nodeType": "YulAssignment",
											"src": "991:84:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1047:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1058:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1043:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1043:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1067:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_string_memory_ptr_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1001:41:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1001:74:16"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "991:6:16"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1095:225:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1110:39:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1134:9:16"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1145:2:16",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1130:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1130:18:16"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1124:5:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1124:25:16"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1114:6:16",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1196:16:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1205:1:16",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1208:1:16",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1198:6:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "1198:12:16"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1198:12:16"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "1168:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1176:18:16",
														"type": "",
														"value": "0xffffffffffffffff"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "1165:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1165:30:16"
											},
											"nodeType": "YulIf",
											"src": "1162:2:16"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1226:84:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1282:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1293:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1278:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1278:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1302:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_string_memory_ptr_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1236:41:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1236:74:16"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "1226:6:16"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "751:9:16",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "762:7:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "774:6:16",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "782:6:16",
								"type": ""
							}
						],
						"src": "675:652:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1374:88:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1384:30:16",
									"value": {
										"arguments": [],
										"functionName": {
											"name": "allocate_unbounded",
											"nodeType": "YulIdentifier",
											"src": "1394:18:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1394:20:16"
									},
									"variableNames": [
										{
											"name": "memPtr",
											"nodeType": "YulIdentifier",
											"src": "1384:6:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "1443:6:16"
											},
											{
												"name": "size",
												"nodeType": "YulIdentifier",
												"src": "1451:4:16"
											}
										],
										"functionName": {
											"name": "finalize_allocation",
											"nodeType": "YulIdentifier",
											"src": "1423:19:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1423:33:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1423:33:16"
								}
							]
						},
						"name": "allocate_memory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "size",
								"nodeType": "YulTypedName",
								"src": "1358:4:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "1367:6:16",
								"type": ""
							}
						],
						"src": "1333:129:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1508:35:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1518:19:16",
									"value": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1534:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "1528:5:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1528:9:16"
									},
									"variableNames": [
										{
											"name": "memPtr",
											"nodeType": "YulIdentifier",
											"src": "1518:6:16"
										}
									]
								}
							]
						},
						"name": "allocate_unbounded",
						"nodeType": "YulFunctionDefinition",
						"returnVariables": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "1501:6:16",
								"type": ""
							}
						],
						"src": "1468:75:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1616:241:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1721:22:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x41",
														"nodeType": "YulIdentifier",
														"src": "1723:16:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "1723:18:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1723:18:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1693:6:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1701:18:16",
												"type": "",
												"value": "0xffffffffffffffff"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "1690:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1690:30:16"
									},
									"nodeType": "YulIf",
									"src": "1687:2:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "1753:37:16",
									"value": {
										"arguments": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1783:6:16"
											}
										],
										"functionName": {
											"name": "round_up_to_mul_of_32",
											"nodeType": "YulIdentifier",
											"src": "1761:21:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1761:29:16"
									},
									"variableNames": [
										{
											"name": "size",
											"nodeType": "YulIdentifier",
											"src": "1753:4:16"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "1827:23:16",
									"value": {
										"arguments": [
											{
												"name": "size",
												"nodeType": "YulIdentifier",
												"src": "1839:4:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1845:4:16",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "1835:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1835:15:16"
									},
									"variableNames": [
										{
											"name": "size",
											"nodeType": "YulIdentifier",
											"src": "1827:4:16"
										}
									]
								}
							]
						},
						"name": "array_allocation_size_t_string_memory_ptr",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1600:6:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "size",
								"nodeType": "YulTypedName",
								"src": "1611:4:16",
								"type": ""
							}
						],
						"src": "1549:308:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1912:258:16",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "1922:10:16",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "1931:1:16",
										"type": "",
										"value": "0"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "1926:1:16",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1991:63:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2016:3:16"
																},
																{
																	"name": "i",
																	"nodeType": "YulIdentifier",
																	"src": "2021:1:16"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2012:3:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "2012:11:16"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "2035:3:16"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "2040:1:16"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:16"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2031:11:16"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "2025:5:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "2025:18:16"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2005:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "2005:39:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2005:39:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "1952:1:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "1955:6:16"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "1949:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1949:13:16"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "1963:19:16",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "1965:15:16",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "1974:1:16"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1977:2:16",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1970:3:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "1970:10:16"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "1965:1:16"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "1945:3:16",
										"statements": []
									},
									"src": "1941:113:16"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2088:76:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2138:3:16"
																},
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:16"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2134:3:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "2134:16:16"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2152:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "2127:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "2127:27:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2127:27:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "2069:1:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2072:6:16"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "2066:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2066:13:16"
									},
									"nodeType": "YulIf",
									"src": "2063:2:16"
								}
							]
						},
						"name": "copy_memory_to_memory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "src",
								"nodeType": "YulTypedName",
								"src": "1894:3:16",
								"type": ""
							},
							{
								"name": "dst",
								"nodeType": "YulTypedName",
								"src": "1899:3:16",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "1904:6:16",
								"type": ""
							}
						],
						"src": "1863:307:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2227:269:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2237:22:16",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "2251:4:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2257:1:16",
												"type": "",
												"value": "2"
											}
										],
										"functionName": {
											"name": "div",
											"nodeType": "YulIdentifier",
											"src": "2247:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2247:12:16"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "2237:6:16"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "2268:38:16",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "2298:4:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2304:1:16",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "2294:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2294:12:16"
									},
									"variables": [
										{
											"name": "outOfPlaceEncoding",
											"nodeType": "YulTypedName",
											"src": "2272:18:16",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2345:51:16",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "2359:27:16",
												"value": {
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "2373:6:16"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2381:4:16",
															"type": "",
															"value": "0x7f"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "2369:3:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "2369:17:16"
												},
												"variableNames": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2359:6:16"
													}
												]
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "2325:18:16"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "2318:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2318:26:16"
									},
									"nodeType": "YulIf",
									"src": "2315:2:16"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2448:42:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x22",
														"nodeType": "YulIdentifier",
														"src": "2462:16:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "2462:18:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2462:18:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "2412:18:16"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2435:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2443:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "2432:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2432:14:16"
											}
										],
										"functionName": {
											"name": "eq",
											"nodeType": "YulIdentifier",
											"src": "2409:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2409:38:16"
									},
									"nodeType": "YulIf",
									"src": "2406:2:16"
								}
							]
						},
						"name": "extract_byte_array_length",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "data",
								"nodeType": "YulTypedName",
								"src": "2211:4:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "2220:6:16",
								"type": ""
							}
						],
						"src": "2176:320:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2545:238:16",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "2555:58:16",
									"value": {
										"arguments": [
											{
												"name": "memPtr",
												"nodeType": "YulIdentifier",
												"src": "2577:6:16"
											},
											{
												"arguments": [
													{
														"name": "size",
														"nodeType": "YulIdentifier",
														"src": "2607:4:16"
													}
												],
												"functionName": {
													"name": "round_up_to_mul_of_32",
													"nodeType": "YulIdentifier",
													"src": "2585:21:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2585:27:16"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2573:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2573:40:16"
									},
									"variables": [
										{
											"name": "newFreePtr",
											"nodeType": "YulTypedName",
											"src": "2559:10:16",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "2724:22:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x41",
														"nodeType": "YulIdentifier",
														"src": "2726:16:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "2726:18:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "2726:18:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "2667:10:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2679:18:16",
														"type": "",
														"value": "0xffffffffffffffff"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "2664:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2664:34:16"
											},
											{
												"arguments": [
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "2703:10:16"
													},
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "2715:6:16"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "2700:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2700:22:16"
											}
										],
										"functionName": {
											"name": "or",
											"nodeType": "YulIdentifier",
											"src": "2661:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2661:62:16"
									},
									"nodeType": "YulIf",
									"src": "2658:2:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2762:2:16",
												"type": "",
												"value": "64"
											},
											{
												"name": "newFreePtr",
												"nodeType": "YulIdentifier",
												"src": "2766:10:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2755:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2755:22:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2755:22:16"
								}
							]
						},
						"name": "finalize_allocation",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "2531:6:16",
								"type": ""
							},
							{
								"name": "size",
								"nodeType": "YulTypedName",
								"src": "2539:4:16",
								"type": ""
							}
						],
						"src": "2502:281:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2817:152:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2834:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2837:77:16",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2827:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2827:88:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2827:88:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2931:1:16",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2934:4:16",
												"type": "",
												"value": "0x22"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2924:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2924:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2924:15:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2955:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2958:4:16",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "2948:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2948:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2948:15:16"
								}
							]
						},
						"name": "panic_error_0x22",
						"nodeType": "YulFunctionDefinition",
						"src": "2789:180:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3003:152:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3020:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3023:77:16",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3013:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3013:88:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3013:88:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3117:1:16",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3120:4:16",
												"type": "",
												"value": "0x41"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3110:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3110:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3110:15:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3141:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3144:4:16",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "3134:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3134:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3134:15:16"
								}
							]
						},
						"name": "panic_error_0x41",
						"nodeType": "YulFunctionDefinition",
						"src": "2975:180:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3209:54:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3219:38:16",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3237:5:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3244:2:16",
														"type": "",
														"value": "31"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3233:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "3233:14:16"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3253:2:16",
														"type": "",
														"value": "31"
													}
												],
												"functionName": {
													"name": "not",
													"nodeType": "YulIdentifier",
													"src": "3249:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "3249:7:16"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "3229:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3229:28:16"
									},
									"variableNames": [
										{
											"name": "result",
											"nodeType": "YulIdentifier",
											"src": "3219:6:16"
										}
									]
								}
							]
						},
						"name": "round_up_to_mul_of_32",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "3192:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "result",
								"nodeType": "YulTypedName",
								"src": "3202:6:16",
								"type": ""
							}
						],
						"src": "3161:102:16"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
			"id": 16,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:13511:16",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "59:87:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "69:29:16",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "91:6:16"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "78:12:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "78:20:16"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "69:5:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "134:5:16"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "107:26:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "107:33:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "107:33:16"
								}
							]
						},
						"name": "abi_decode_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "37:6:16",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "45:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "53:5:16",
								"type": ""
							}
						],
						"src": "7:139:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "204:87:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "214:29:16",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "236:6:16"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "223:12:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "223:20:16"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "214:5:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "279:5:16"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "252:26:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "252:33:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "252:33:16"
								}
							]
						},
						"name": "abi_decode_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "182:6:16",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "190:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "198:5:16",
								"type": ""
							}
						],
						"src": "152:139:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "363:196:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "409:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "418:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "421:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "411:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "411:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "411:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "384:7:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "393:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "380:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "380:23:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "405:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "376:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "376:32:16"
									},
									"nodeType": "YulIf",
									"src": "373:2:16"
								},
								{
									"nodeType": "YulBlock",
									"src": "435:117:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "450:15:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "464:1:16",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "454:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "479:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "514:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "525:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "510:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "510:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "534:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "489:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "489:53:16"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "479:6:16"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "333:9:16",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "344:7:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "356:6:16",
								"type": ""
							}
						],
						"src": "297:262:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "648:324:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "694:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "703:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "706:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "696:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "696:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "696:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "669:7:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "678:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "665:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "665:23:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "690:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "661:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "661:32:16"
									},
									"nodeType": "YulIf",
									"src": "658:2:16"
								},
								{
									"nodeType": "YulBlock",
									"src": "720:117:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "735:15:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "749:1:16",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "739:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "764:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "799:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "810:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "795:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "795:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "819:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "774:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "774:53:16"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "764:6:16"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "847:118:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "862:16:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "876:2:16",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "866:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "892:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "927:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "938:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "923:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "923:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "947:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "902:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "902:53:16"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "892:6:16"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "610:9:16",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "621:7:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "633:6:16",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "641:6:16",
								"type": ""
							}
						],
						"src": "565:407:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1078:452:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1124:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1133:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1136:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1126:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "1126:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1126:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1099:7:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1108:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1095:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1095:23:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1120:2:16",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1091:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1091:32:16"
									},
									"nodeType": "YulIf",
									"src": "1088:2:16"
								},
								{
									"nodeType": "YulBlock",
									"src": "1150:117:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1165:15:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1179:1:16",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1169:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1194:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1229:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1240:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1225:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1225:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1249:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "1204:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1204:53:16"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1194:6:16"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1277:118:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1292:16:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1306:2:16",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1296:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1322:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1357:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1368:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1353:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1353:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1377:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "1332:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1332:53:16"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "1322:6:16"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1405:118:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1420:16:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1434:2:16",
												"type": "",
												"value": "64"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1424:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1450:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1485:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1496:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1481:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1481:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1505:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1460:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1460:53:16"
											},
											"variableNames": [
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "1450:6:16"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1032:9:16",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1043:7:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1055:6:16",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "1063:6:16",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "1071:6:16",
								"type": ""
							}
						],
						"src": "978:552:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1619:324:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1665:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1674:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1677:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1667:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "1667:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1667:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1640:7:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1649:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1636:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1636:23:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1661:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1632:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "1632:32:16"
									},
									"nodeType": "YulIf",
									"src": "1629:2:16"
								},
								{
									"nodeType": "YulBlock",
									"src": "1691:117:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1706:15:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1720:1:16",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1710:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1735:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1770:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1781:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1766:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1766:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1790:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "1745:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1745:53:16"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1735:6:16"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "1818:118:16",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1833:16:16",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1847:2:16",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1837:6:16",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1863:63:16",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1898:9:16"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1909:6:16"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1894:3:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "1894:22:16"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1918:7:16"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1873:20:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "1873:53:16"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "1863:6:16"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1581:9:16",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1592:7:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1604:6:16",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "1612:6:16",
								"type": ""
							}
						],
						"src": "1536:407:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2008:50:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2025:3:16"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2045:5:16"
													}
												],
												"functionName": {
													"name": "cleanup_t_bool",
													"nodeType": "YulIdentifier",
													"src": "2030:14:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2030:21:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "2018:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2018:34:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2018:34:16"
								}
							]
						},
						"name": "abi_encode_t_bool_to_t_bool_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1996:5:16",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2003:3:16",
								"type": ""
							}
						],
						"src": "1949:109:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2156:272:16",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "2166:53:16",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2213:5:16"
											}
										],
										"functionName": {
											"name": "array_length_t_string_memory_ptr",
											"nodeType": "YulIdentifier",
											"src": "2180:32:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2180:39:16"
									},
									"variables": [
										{
											"name": "length",
											"nodeType": "YulTypedName",
											"src": "2170:6:16",
											"type": ""
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "2228:78:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2294:3:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2299:6:16"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2235:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2235:71:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2228:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2341:5:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2348:4:16",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2337:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2337:16:16"
											},
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2355:3:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "2360:6:16"
											}
										],
										"functionName": {
											"name": "copy_memory_to_memory",
											"nodeType": "YulIdentifier",
											"src": "2315:21:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2315:52:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2315:52:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2376:46:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2387:3:16"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2414:6:16"
													}
												],
												"functionName": {
													"name": "round_up_to_mul_of_32",
													"nodeType": "YulIdentifier",
													"src": "2392:21:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "2392:29:16"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2383:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2383:39:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2376:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "2137:5:16",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2144:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2152:3:16",
								"type": ""
							}
						],
						"src": "2064:364:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2580:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2590:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2656:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2661:2:16",
												"type": "",
												"value": "35"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2597:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2597:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2590:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2762:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
											"nodeType": "YulIdentifier",
											"src": "2673:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2673:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2673:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2775:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2786:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2791:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2782:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2782:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2775:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2568:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2576:3:16",
								"type": ""
							}
						],
						"src": "2434:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2952:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2962:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3028:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3033:2:16",
												"type": "",
												"value": "34"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2969:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "2969:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2962:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3134:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
											"nodeType": "YulIdentifier",
											"src": "3045:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3045:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3045:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3147:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3158:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3163:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3154:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3154:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "3147:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2940:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2948:3:16",
								"type": ""
							}
						],
						"src": "2806:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3324:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3334:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3400:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3405:2:16",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3341:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3341:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "3334:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3506:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
											"nodeType": "YulIdentifier",
											"src": "3417:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3417:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3417:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3519:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3530:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3535:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3526:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3526:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "3519:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3312:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "3320:3:16",
								"type": ""
							}
						],
						"src": "3178:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3696:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3706:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3772:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3777:2:16",
												"type": "",
												"value": "40"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3713:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3713:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "3706:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3878:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
											"nodeType": "YulIdentifier",
											"src": "3789:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3789:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3789:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3891:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3902:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3907:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3898:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "3898:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "3891:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3684:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "3692:3:16",
								"type": ""
							}
						],
						"src": "3550:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4068:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4078:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4144:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4149:2:16",
												"type": "",
												"value": "37"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4085:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4085:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "4078:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4250:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
											"nodeType": "YulIdentifier",
											"src": "4161:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4161:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4161:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4263:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4274:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4279:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4270:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4270:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "4263:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "4056:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "4064:3:16",
								"type": ""
							}
						],
						"src": "3922:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4440:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4450:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4516:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4521:2:16",
												"type": "",
												"value": "36"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4457:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4457:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "4450:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4622:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
											"nodeType": "YulIdentifier",
											"src": "4533:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4533:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4533:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "4635:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4646:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4651:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4642:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4642:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "4635:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "4428:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "4436:3:16",
								"type": ""
							}
						],
						"src": "4294:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4812:220:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4822:74:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4888:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4893:2:16",
												"type": "",
												"value": "37"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4829:58:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4829:67:16"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "4822:3:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "4994:3:16"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
											"nodeType": "YulIdentifier",
											"src": "4905:88:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "4905:93:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4905:93:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5007:19:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "5018:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5023:2:16",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5014:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5014:12:16"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "5007:3:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "4800:3:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "4808:3:16",
								"type": ""
							}
						],
						"src": "4666:366:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5103:53:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "5120:3:16"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5143:5:16"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "5125:17:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "5125:24:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5113:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5113:37:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5113:37:16"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5091:5:16",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "5098:3:16",
								"type": ""
							}
						],
						"src": "5038:118:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5223:51:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "5240:3:16"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5261:5:16"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "5245:15:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "5245:22:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5233:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5233:35:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5233:35:16"
								}
							]
						},
						"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "5211:5:16",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "5218:3:16",
								"type": ""
							}
						],
						"src": "5162:112:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5372:118:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5382:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5394:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5405:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5390:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5390:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5382:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5456:6:16"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5469:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5480:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5465:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "5465:17:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_bool_to_t_bool_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5418:37:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5418:65:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5418:65:16"
								}
							]
						},
						"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5344:9:16",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5356:6:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5367:4:16",
								"type": ""
							}
						],
						"src": "5280:210:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5614:195:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5624:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5636:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5647:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5632:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5632:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5624:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5671:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5682:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5667:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "5667:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "5690:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5696:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5686:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "5686:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5660:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5660:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5660:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5716:86:16",
									"value": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5788:6:16"
											},
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5797:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5724:63:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "5724:78:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5716:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5586:9:16",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "5598:6:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5609:4:16",
								"type": ""
							}
						],
						"src": "5496:313:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5986:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5996:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "6008:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6019:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6004:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6004:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5996:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6043:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6054:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6039:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "6039:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "6062:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6068:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6058:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "6058:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6032:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6032:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6032:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6088:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6222:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6096:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6096:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6088:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5966:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5981:4:16",
								"type": ""
							}
						],
						"src": "5815:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6411:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6421:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "6433:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6444:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6429:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6429:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6421:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6468:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6479:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6464:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "6464:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "6487:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6493:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6483:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "6483:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6457:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6457:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6457:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6513:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6647:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6521:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6521:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6513:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "6391:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "6406:4:16",
								"type": ""
							}
						],
						"src": "6240:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6836:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6846:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "6858:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6869:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6854:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6854:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6846:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6893:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6904:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6889:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "6889:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "6912:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6918:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6908:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "6908:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6882:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6882:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6882:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6938:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7072:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6946:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "6946:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6938:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "6816:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "6831:4:16",
								"type": ""
							}
						],
						"src": "6665:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7261:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "7271:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "7283:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "7294:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "7279:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "7279:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "7271:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7318:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7329:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7314:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "7314:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "7337:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7343:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "7333:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "7333:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7307:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "7307:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7307:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "7363:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7497:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7371:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "7371:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "7363:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "7241:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "7256:4:16",
								"type": ""
							}
						],
						"src": "7090:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7686:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "7696:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "7708:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "7719:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "7704:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "7704:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "7696:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7743:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7754:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7739:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "7739:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "7762:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7768:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "7758:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "7758:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7732:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "7732:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7732:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "7788:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7922:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7796:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "7796:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "7788:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "7666:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "7681:4:16",
								"type": ""
							}
						],
						"src": "7515:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8111:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8121:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "8133:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8144:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "8129:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8129:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "8121:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8168:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8179:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8164:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "8164:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "8187:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8193:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "8183:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "8183:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8157:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8157:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8157:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "8213:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "8347:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "8221:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8221:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "8213:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "8091:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "8106:4:16",
								"type": ""
							}
						],
						"src": "7940:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8536:248:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8546:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "8558:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8569:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "8554:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8554:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "8546:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8593:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8604:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8589:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "8589:17:16"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "8612:4:16"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8618:9:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "8608:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "8608:20:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8582:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8582:47:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8582:47:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "8638:139:16",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "8772:4:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "8646:124:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8646:131:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "8638:4:16"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "8516:9:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "8531:4:16",
								"type": ""
							}
						],
						"src": "8365:419:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8888:124:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8898:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "8910:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8921:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "8906:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8906:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "8898:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "8978:6:16"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8991:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9002:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8987:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "8987:17:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "8934:43:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "8934:71:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8934:71:16"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "8860:9:16",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "8872:6:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "8883:4:16",
								"type": ""
							}
						],
						"src": "8790:222:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9112:120:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "9122:26:16",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "9134:9:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "9145:2:16",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "9130:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9130:18:16"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "9122:4:16"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "9198:6:16"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "9211:9:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9222:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "9207:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "9207:17:16"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
											"nodeType": "YulIdentifier",
											"src": "9158:39:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9158:67:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "9158:67:16"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "9084:9:16",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "9096:6:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "9107:4:16",
								"type": ""
							}
						],
						"src": "9018:214:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9297:40:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "9308:22:16",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "9324:5:16"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "9318:5:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9318:12:16"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "9308:6:16"
										}
									]
								}
							]
						},
						"name": "array_length_t_string_memory_ptr",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "9280:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "9290:6:16",
								"type": ""
							}
						],
						"src": "9238:99:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9439:73:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "9456:3:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "9461:6:16"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "9449:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9449:19:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "9449:19:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "9477:29:16",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "9496:3:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "9501:4:16",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "9492:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9492:14:16"
									},
									"variableNames": [
										{
											"name": "updated_pos",
											"nodeType": "YulIdentifier",
											"src": "9477:11:16"
										}
									]
								}
							]
						},
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "9411:3:16",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "9416:6:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "updated_pos",
								"nodeType": "YulTypedName",
								"src": "9427:11:16",
								"type": ""
							}
						],
						"src": "9343:169:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9562:261:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "9572:25:16",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "9595:1:16"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "9577:17:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9577:20:16"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "9572:1:16"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "9606:25:16",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "9629:1:16"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "9611:17:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9611:20:16"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "9606:1:16"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "9769:22:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "9771:16:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "9771:18:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "9771:18:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "9690:1:16"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9697:66:16",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9765:1:16"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "9693:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "9693:74:16"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "9687:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9687:81:16"
									},
									"nodeType": "YulIf",
									"src": "9684:2:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "9801:16:16",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "9812:1:16"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "9815:1:16"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "9808:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9808:9:16"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "9801:3:16"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "9549:1:16",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "9552:1:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "9558:3:16",
								"type": ""
							}
						],
						"src": "9518:305:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9874:146:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "9884:25:16",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "9907:1:16"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "9889:17:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9889:20:16"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "9884:1:16"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "9918:25:16",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "9941:1:16"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "9923:17:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9923:20:16"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "9918:1:16"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "9965:22:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "9967:16:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "9967:18:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "9967:18:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "9959:1:16"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "9962:1:16"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "9956:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "9956:8:16"
									},
									"nodeType": "YulIf",
									"src": "9953:2:16"
								},
								{
									"nodeType": "YulAssignment",
									"src": "9997:17:16",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "10009:1:16"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "10012:1:16"
											}
										],
										"functionName": {
											"name": "sub",
											"nodeType": "YulIdentifier",
											"src": "10005:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10005:9:16"
									},
									"variableNames": [
										{
											"name": "diff",
											"nodeType": "YulIdentifier",
											"src": "9997:4:16"
										}
									]
								}
							]
						},
						"name": "checked_sub_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "9860:1:16",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "9863:1:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "diff",
								"nodeType": "YulTypedName",
								"src": "9869:4:16",
								"type": ""
							}
						],
						"src": "9829:191:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10071:51:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "10081:35:16",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "10110:5:16"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "10092:17:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10092:24:16"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "10081:7:16"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "10053:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "10063:7:16",
								"type": ""
							}
						],
						"src": "10026:96:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10170:48:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "10180:32:16",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "10205:5:16"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "10198:6:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "10198:13:16"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "10191:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10191:21:16"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "10180:7:16"
										}
									]
								}
							]
						},
						"name": "cleanup_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "10152:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "10162:7:16",
								"type": ""
							}
						],
						"src": "10128:90:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10269:81:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "10279:65:16",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "10294:5:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "10301:42:16",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "10290:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10290:54:16"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "10279:7:16"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "10251:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "10261:7:16",
								"type": ""
							}
						],
						"src": "10224:126:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10401:32:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "10411:16:16",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "10422:5:16"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "10411:7:16"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "10383:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "10393:7:16",
								"type": ""
							}
						],
						"src": "10356:77:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10482:43:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "10492:27:16",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "10507:5:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "10514:4:16",
												"type": "",
												"value": "0xff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "10503:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10503:16:16"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "10492:7:16"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint8",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "10464:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "10474:7:16",
								"type": ""
							}
						],
						"src": "10439:86:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10580:258:16",
							"statements": [
								{
									"nodeType": "YulVariableDeclaration",
									"src": "10590:10:16",
									"value": {
										"kind": "number",
										"nodeType": "YulLiteral",
										"src": "10599:1:16",
										"type": "",
										"value": "0"
									},
									"variables": [
										{
											"name": "i",
											"nodeType": "YulTypedName",
											"src": "10594:1:16",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "10659:63:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10684:3:16"
																},
																{
																	"name": "i",
																	"nodeType": "YulIdentifier",
																	"src": "10689:1:16"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "10680:3:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "10680:11:16"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "10703:3:16"
																		},
																		{
																			"name": "i",
																			"nodeType": "YulIdentifier",
																			"src": "10708:1:16"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "10699:3:16"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "10699:11:16"
																}
															],
															"functionName": {
																"name": "mload",
																"nodeType": "YulIdentifier",
																"src": "10693:5:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "10693:18:16"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "10673:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "10673:39:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "10673:39:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "10620:1:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "10623:6:16"
											}
										],
										"functionName": {
											"name": "lt",
											"nodeType": "YulIdentifier",
											"src": "10617:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10617:13:16"
									},
									"nodeType": "YulForLoop",
									"post": {
										"nodeType": "YulBlock",
										"src": "10631:19:16",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "10633:15:16",
												"value": {
													"arguments": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "10642:1:16"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10645:2:16",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10638:3:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "10638:10:16"
												},
												"variableNames": [
													{
														"name": "i",
														"nodeType": "YulIdentifier",
														"src": "10633:1:16"
													}
												]
											}
										]
									},
									"pre": {
										"nodeType": "YulBlock",
										"src": "10613:3:16",
										"statements": []
									},
									"src": "10609:113:16"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "10756:76:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10806:3:16"
																},
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10811:6:16"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "10802:3:16"
															},
															"nodeType": "YulFunctionCall",
															"src": "10802:16:16"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10820:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "mstore",
														"nodeType": "YulIdentifier",
														"src": "10795:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "10795:27:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "10795:27:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "i",
												"nodeType": "YulIdentifier",
												"src": "10737:1:16"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "10740:6:16"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "10734:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10734:13:16"
									},
									"nodeType": "YulIf",
									"src": "10731:2:16"
								}
							]
						},
						"name": "copy_memory_to_memory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "src",
								"nodeType": "YulTypedName",
								"src": "10562:3:16",
								"type": ""
							},
							{
								"name": "dst",
								"nodeType": "YulTypedName",
								"src": "10567:3:16",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "10572:6:16",
								"type": ""
							}
						],
						"src": "10531:307:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "10895:269:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "10905:22:16",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "10919:4:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "10925:1:16",
												"type": "",
												"value": "2"
											}
										],
										"functionName": {
											"name": "div",
											"nodeType": "YulIdentifier",
											"src": "10915:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10915:12:16"
									},
									"variableNames": [
										{
											"name": "length",
											"nodeType": "YulIdentifier",
											"src": "10905:6:16"
										}
									]
								},
								{
									"nodeType": "YulVariableDeclaration",
									"src": "10936:38:16",
									"value": {
										"arguments": [
											{
												"name": "data",
												"nodeType": "YulIdentifier",
												"src": "10966:4:16"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "10972:1:16",
												"type": "",
												"value": "1"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "10962:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10962:12:16"
									},
									"variables": [
										{
											"name": "outOfPlaceEncoding",
											"nodeType": "YulTypedName",
											"src": "10940:18:16",
											"type": ""
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "11013:51:16",
										"statements": [
											{
												"nodeType": "YulAssignment",
												"src": "11027:27:16",
												"value": {
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "11041:6:16"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11049:4:16",
															"type": "",
															"value": "0x7f"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "11037:3:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "11037:17:16"
												},
												"variableNames": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "11027:6:16"
													}
												]
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "10993:18:16"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "10986:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "10986:26:16"
									},
									"nodeType": "YulIf",
									"src": "10983:2:16"
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "11116:42:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x22",
														"nodeType": "YulIdentifier",
														"src": "11130:16:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "11130:18:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "11130:18:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulIdentifier",
												"src": "11080:18:16"
											},
											{
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "11103:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11111:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "11100:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "11100:14:16"
											}
										],
										"functionName": {
											"name": "eq",
											"nodeType": "YulIdentifier",
											"src": "11077:2:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11077:38:16"
									},
									"nodeType": "YulIf",
									"src": "11074:2:16"
								}
							]
						},
						"name": "extract_byte_array_length",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "data",
								"nodeType": "YulTypedName",
								"src": "10879:4:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "10888:6:16",
								"type": ""
							}
						],
						"src": "10844:320:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "11198:152:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11215:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11218:77:16",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11208:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11208:88:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11208:88:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11312:1:16",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11315:4:16",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11305:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11305:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11305:15:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11336:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11339:4:16",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "11329:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11329:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11329:15:16"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "11170:180:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "11384:152:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11401:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11404:77:16",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11394:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11394:88:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11394:88:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11498:1:16",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11501:4:16",
												"type": "",
												"value": "0x22"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11491:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11491:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11491:15:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11522:1:16",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "11525:4:16",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "11515:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11515:15:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11515:15:16"
								}
							]
						},
						"name": "panic_error_0x22",
						"nodeType": "YulFunctionDefinition",
						"src": "11356:180:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "11590:54:16",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "11600:38:16",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "11618:5:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11625:2:16",
														"type": "",
														"value": "31"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "11614:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "11614:14:16"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11634:2:16",
														"type": "",
														"value": "31"
													}
												],
												"functionName": {
													"name": "not",
													"nodeType": "YulIdentifier",
													"src": "11630:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "11630:7:16"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "11610:3:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11610:28:16"
									},
									"variableNames": [
										{
											"name": "result",
											"nodeType": "YulIdentifier",
											"src": "11600:6:16"
										}
									]
								}
							]
						},
						"name": "round_up_to_mul_of_32",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "11573:5:16",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "result",
								"nodeType": "YulTypedName",
								"src": "11583:6:16",
								"type": ""
							}
						],
						"src": "11542:102:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "11756:116:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "11778:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11786:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "11774:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "11774:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "11790:34:16",
												"type": "",
												"value": "ERC20: transfer to the zero addr"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11767:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11767:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11767:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "11846:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "11854:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "11842:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "11842:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "11859:5:16",
												"type": "",
												"value": "ess"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11835:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11835:30:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11835:30:16"
								}
							]
						},
						"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "11748:6:16",
								"type": ""
							}
						],
						"src": "11650:222:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "11984:115:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12006:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12014:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12002:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12002:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12018:34:16",
												"type": "",
												"value": "ERC20: approve to the zero addre"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "11995:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "11995:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "11995:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12074:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12082:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12070:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12070:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12087:4:16",
												"type": "",
												"value": "ss"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12063:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12063:29:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12063:29:16"
								}
							]
						},
						"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "11976:6:16",
								"type": ""
							}
						],
						"src": "11878:221:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "12211:119:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12233:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12241:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12229:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12229:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12245:34:16",
												"type": "",
												"value": "ERC20: transfer amount exceeds b"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12222:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12222:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12222:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12301:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12309:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12297:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12297:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12314:8:16",
												"type": "",
												"value": "alance"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12290:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12290:33:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12290:33:16"
								}
							]
						},
						"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "12203:6:16",
								"type": ""
							}
						],
						"src": "12105:225:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "12442:121:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12464:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12472:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12460:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12460:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12476:34:16",
												"type": "",
												"value": "ERC20: transfer amount exceeds a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12453:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12453:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12453:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12532:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12540:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12528:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12528:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12545:10:16",
												"type": "",
												"value": "llowance"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12521:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12521:35:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12521:35:16"
								}
							]
						},
						"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "12434:6:16",
								"type": ""
							}
						],
						"src": "12336:227:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "12675:118:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12697:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12705:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12693:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12693:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12709:34:16",
												"type": "",
												"value": "ERC20: transfer from the zero ad"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12686:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12686:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12686:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12765:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12773:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12761:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12761:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12778:7:16",
												"type": "",
												"value": "dress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12754:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12754:32:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12754:32:16"
								}
							]
						},
						"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "12667:6:16",
								"type": ""
							}
						],
						"src": "12569:224:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "12905:117:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12927:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "12935:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12923:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12923:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "12939:34:16",
												"type": "",
												"value": "ERC20: approve from the zero add"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12916:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12916:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12916:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "12995:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "13003:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "12991:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "12991:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "13008:6:16",
												"type": "",
												"value": "ress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "12984:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "12984:31:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "12984:31:16"
								}
							]
						},
						"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "12897:6:16",
								"type": ""
							}
						],
						"src": "12799:223:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "13134:118:16",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "13156:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "13164:1:16",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "13152:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "13152:14:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "13168:34:16",
												"type": "",
												"value": "ERC20: decreased allowance below"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "13145:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "13145:58:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "13145:58:16"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "13224:6:16"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "13232:2:16",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "13220:3:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "13220:15:16"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "13237:7:16",
												"type": "",
												"value": " zero"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "13213:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "13213:32:16"
									},
									"nodeType": "YulExpressionStatement",
									"src": "13213:32:16"
								}
							]
						},
						"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "13126:6:16",
								"type": ""
							}
						],
						"src": "13028:224:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "13301:79:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "13358:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13367:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13370:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "13360:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "13360:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "13360:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "13324:5:16"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13349:5:16"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "13331:17:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "13331:24:16"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "13321:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "13321:35:16"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "13314:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "13314:43:16"
									},
									"nodeType": "YulIf",
									"src": "13311:2:16"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "13294:5:16",
								"type": ""
							}
						],
						"src": "13258:122:16"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "13429:79:16",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "13486:16:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13495:1:16",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13498:1:16",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "13488:6:16"
													},
													"nodeType": "YulFunctionCall",
													"src": "13488:12:16"
												},
												"nodeType": "YulExpressionStatement",
												"src": "13488:12:16"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "13452:5:16"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13477:5:16"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "13459:17:16"
														},
														"nodeType": "YulFunctionCall",
														"src": "13459:24:16"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "13449:2:16"
												},
												"nodeType": "YulFunctionCall",
												"src": "13449:35:16"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "13442:6:16"
										},
										"nodeType": "YulFunctionCall",
										"src": "13442:43:16"
									},
									"nodeType": "YulIf",
									"src": "13439:2:16"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "13422:5:16",
								"type": ""
							}
						],
						"src": "13386:122:16"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 16,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "1279:8414:13:-:0;;;1794:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1862:5;1854;:13;;;;;;;;;;;;:::i;:::-;;1881:7;1871;:17;;;;;;;;;;;;:::i;:::-;;1794:98;;1279:8414;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:16:-;;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;;;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;1279:8414:13:-;;;;;;;",
	"deployedSourceMap": "1279:8414:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3802:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2910:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2789:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5124:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3053:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2123:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5763:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3345:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3548:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1945:80;1990:13;2016:5;2009:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:80;:::o;3802:151::-;3885:4;3895:39;3904:12;:10;:12::i;:::-;3918:7;3927:6;3895:8;:39::i;:::-;3945:4;3938:11;;3802:151;;;;:::o;2910:97::-;2971:7;2991:12;;2984:19;;2910:97;:::o;4378:390::-;4493:4;4503:36;4513:6;4521:9;4532:6;4503:9;:36::i;:::-;4544:24;4571:11;:19;4583:6;4571:19;;;;;;;;;;;;;;;:33;4591:12;:10;:12::i;:::-;4571:33;;;;;;;;;;;;;;;;4544:60;;4636:6;4616:16;:26;;4608:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4691:57;4700:6;4708:12;:10;:12::i;:::-;4741:6;4722:16;:25;;;;:::i;:::-;4691:8;:57::i;:::-;4760:4;4753:11;;;4378:390;;;;;:::o;2789:73::-;2838:5;2856:2;2849:9;;2789:73;:::o;5124:197::-;5212:4;5222:80;5231:12;:10;:12::i;:::-;5245:7;5291:10;5254:11;:25;5266:12;:10;:12::i;:::-;5254:25;;;;;;;;;;;;;;;:34;5280:7;5254:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5222:8;:80::i;:::-;5313:4;5306:11;;5124:197;;;;:::o;3053:116::-;3127:7;3147:9;:18;3157:7;3147:18;;;;;;;;;;;;;;;;3140:25;;3053:116;;;:::o;2123:84::-;2170:13;2196:7;2189:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:84;:::o;5763:344::-;5856:4;5866:24;5893:11;:25;5905:12;:10;:12::i;:::-;5893:25;;;;;;;;;;;;;;;:34;5919:7;5893:34;;;;;;;;;;;;;;;;5866:61;;5959:15;5939:16;:35;;5931:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6020:67;6029:12;:10;:12::i;:::-;6043:7;6071:15;6052:16;:34;;;;:::i;:::-;6020:8;:67::i;:::-;6099:4;6092:11;;;5763:344;;;;:::o;3345:157::-;3431:4;3441:42;3451:12;:10;:12::i;:::-;3465:9;3476:6;3441:9;:42::i;:::-;3494:4;3487:11;;3345:157;;;;:::o;3548:140::-;3637:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3548:140;;;;:::o;586:96:15:-;639:7;665:10;658:17;;586:96;:::o;8727:322:13:-;8848:1;8831:19;;:5;:19;;;;8823:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8922:1;8903:21;;:7;:21;;;;8895:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8998:6;8968:11;:18;8980:5;8968:18;;;;;;;;;;;;;;;:27;8987:7;8968:27;;;;;;;;;;;;;;;:36;;;;9029:7;9013:32;;9022:5;9013:32;;;9038:6;9013:32;;;;;;:::i;:::-;;;;;;;;8727:322;;;:::o;6536:550::-;6662:1;6644:20;;:6;:20;;;;6636:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6739:1;6718:23;;:9;:23;;;;6710:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6786:47;6807:6;6815:9;6826:6;6786:20;:47::i;:::-;6838:21;6862:9;:17;6872:6;6862:17;;;;;;;;;;;;;;;;6838:41;;6908:6;6891:13;:23;;6883:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;6997:6;6981:13;:22;;;;:::i;:::-;6961:9;:17;6971:6;6961:17;;;;;;;;;;;;;;;:42;;;;7031:6;7007:9;:20;7017:9;7007:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7064:9;7047:35;;7056:6;7047:35;;;7075:6;7047:35;;;;;;:::i;:::-;;;;;;;;6536:550;;;;:::o;9591:100::-;;;;:::o;7:139:16:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:366::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2673:93;2762:3;2673:93;:::i;:::-;2791:2;2786:3;2782:12;2775:19;;2580:220;;;:::o;2806:366::-;;2969:67;3033:2;3028:3;2969:67;:::i;:::-;2962:74;;3045:93;3134:3;3045:93;:::i;:::-;3163:2;3158:3;3154:12;3147:19;;2952:220;;;:::o;3178:366::-;;3341:67;3405:2;3400:3;3341:67;:::i;:::-;3334:74;;3417:93;3506:3;3417:93;:::i;:::-;3535:2;3530:3;3526:12;3519:19;;3324:220;;;:::o;3550:366::-;;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3696:220;;;:::o;3922:366::-;;4085:67;4149:2;4144:3;4085:67;:::i;:::-;4078:74;;4161:93;4250:3;4161:93;:::i;:::-;4279:2;4274:3;4270:12;4263:19;;4068:220;;;:::o;4294:366::-;;4457:67;4521:2;4516:3;4457:67;:::i;:::-;4450:74;;4533:93;4622:3;4533:93;:::i;:::-;4651:2;4646:3;4642:12;4635:19;;4440:220;;;:::o;4666:366::-;;4829:67;4893:2;4888:3;4829:67;:::i;:::-;4822:74;;4905:93;4994:3;4905:93;:::i;:::-;5023:2;5018:3;5014:12;5007:19;;4812:220;;;:::o;5038:118::-;5125:24;5143:5;5125:24;:::i;:::-;5120:3;5113:37;5103:53;;:::o;5162:112::-;5245:22;5261:5;5245:22;:::i;:::-;5240:3;5233:35;5223:51;;:::o;5280:210::-;;5405:2;5394:9;5390:18;5382:26;;5418:65;5480:1;5469:9;5465:17;5456:6;5418:65;:::i;:::-;5372:118;;;;:::o;5496:313::-;;5647:2;5636:9;5632:18;5624:26;;5696:9;5690:4;5686:20;5682:1;5671:9;5667:17;5660:47;5724:78;5797:4;5788:6;5724:78;:::i;:::-;5716:86;;5614:195;;;;:::o;5815:419::-;;6019:2;6008:9;6004:18;5996:26;;6068:9;6062:4;6058:20;6054:1;6043:9;6039:17;6032:47;6096:131;6222:4;6096:131;:::i;:::-;6088:139;;5986:248;;;:::o;6240:419::-;;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6411:248;;;:::o;6665:419::-;;6869:2;6858:9;6854:18;6846:26;;6918:9;6912:4;6908:20;6904:1;6893:9;6889:17;6882:47;6946:131;7072:4;6946:131;:::i;:::-;6938:139;;6836:248;;;:::o;7090:419::-;;7294:2;7283:9;7279:18;7271:26;;7343:9;7337:4;7333:20;7329:1;7318:9;7314:17;7307:47;7371:131;7497:4;7371:131;:::i;:::-;7363:139;;7261:248;;;:::o;7515:419::-;;7719:2;7708:9;7704:18;7696:26;;7768:9;7762:4;7758:20;7754:1;7743:9;7739:17;7732:47;7796:131;7922:4;7796:131;:::i;:::-;7788:139;;7686:248;;;:::o;7940:419::-;;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;8111:248;;;:::o;8365:419::-;;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8536:248;;;:::o;8790:222::-;;8921:2;8910:9;8906:18;8898:26;;8934:71;9002:1;8991:9;8987:17;8978:6;8934:71;:::i;:::-;8888:124;;;;:::o;9018:214::-;;9145:2;9134:9;9130:18;9122:26;;9158:67;9222:1;9211:9;9207:17;9198:6;9158:67;:::i;:::-;9112:120;;;;:::o;9238:99::-;;9324:5;9318:12;9308:22;;9297:40;;;:::o;9343:169::-;;9461:6;9456:3;9449:19;9501:4;9496:3;9492:14;9477:29;;9439:73;;;;:::o;9518:305::-;;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9611:20;9629:1;9611:20;:::i;:::-;9606:25;;9765:1;9697:66;9693:74;9690:1;9687:81;9684:2;;;9771:18;;:::i;:::-;9684:2;9815:1;9812;9808:9;9801:16;;9562:261;;;;:::o;9829:191::-;;9889:20;9907:1;9889:20;:::i;:::-;9884:25;;9923:20;9941:1;9923:20;:::i;:::-;9918:25;;9962:1;9959;9956:8;9953:2;;;9967:18;;:::i;:::-;9953:2;10012:1;10009;10005:9;9997:17;;9874:146;;;;:::o;10026:96::-;;10092:24;10110:5;10092:24;:::i;:::-;10081:35;;10071:51;;;:::o;10128:90::-;;10205:5;10198:13;10191:21;10180:32;;10170:48;;;:::o;10224:126::-;;10301:42;10294:5;10290:54;10279:65;;10269:81;;;:::o;10356:77::-;;10422:5;10411:16;;10401:32;;;:::o;10439:86::-;;10514:4;10507:5;10503:16;10492:27;;10482:43;;;:::o;10531:307::-;10599:1;10609:113;10623:6;10620:1;10617:13;10609:113;;;10708:1;10703:3;10699:11;10693:18;10689:1;10684:3;10680:11;10673:39;10645:2;10642:1;10638:10;10633:15;;10609:113;;;10740:6;10737:1;10734:13;10731:2;;;10820:1;10811:6;10806:3;10802:16;10795:27;10731:2;10580:258;;;;:::o;10844:320::-;;10925:1;10919:4;10915:12;10905:22;;10972:1;10966:4;10962:12;10993:18;10983:2;;11049:4;11041:6;11037:17;11027:27;;10983:2;11111;11103:6;11100:14;11080:18;11077:38;11074:2;;;11130:18;;:::i;:::-;11074:2;10895:269;;;;:::o;11170:180::-;11218:77;11215:1;11208:88;11315:4;11312:1;11305:15;11339:4;11336:1;11329:15;11356:180;11404:77;11401:1;11394:88;11501:4;11498:1;11491:15;11525:4;11522:1;11515:15;11542:102;;11634:2;11630:7;11625:2;11618:5;11614:14;11610:28;11600:38;;11590:54;;;:::o;11650:222::-;11790:34;11786:1;11778:6;11774:14;11767:58;11859:5;11854:2;11846:6;11842:15;11835:30;11756:116;:::o;11878:221::-;12018:34;12014:1;12006:6;12002:14;11995:58;12087:4;12082:2;12074:6;12070:15;12063:29;11984:115;:::o;12105:225::-;12245:34;12241:1;12233:6;12229:14;12222:58;12314:8;12309:2;12301:6;12297:15;12290:33;12211:119;:::o;12336:227::-;12476:34;12472:1;12464:6;12460:14;12453:58;12545:10;12540:2;12532:6;12528:15;12521:35;12442:121;:::o;12569:224::-;12709:34;12705:1;12697:6;12693:14;12686:58;12778:7;12773:2;12765:6;12761:15;12754:32;12675:118;:::o;12799:223::-;12939:34;12935:1;12927:6;12923:14;12916:58;13008:6;13003:2;12995:6;12991:15;12984:31;12905:117;:::o;13028:224::-;13168:34;13164:1;13156:6;13152:14;13145:58;13237:7;13232:2;13224:6;13220:15;13213:32;13134:118;:::o;13258:122::-;13331:24;13349:5;13331:24;:::i;:::-;13324:5;13321:35;13311:2;;13370:1;13367;13360:12;13311:2;13301:79;:::o;13386:122::-;13459:24;13477:5;13459:24;:::i;:::-;13452:5;13449:35;13439:2;;13498:1;13495;13488:12;13439:2;13429:79;:::o",
	"source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC20.sol';\nimport '../../utils/Context.sol';\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n\tmapping(address => uint256) private _balances;\n\n\tmapping(address => mapping(address => uint256)) private _allowances;\n\n\tuint256 private _totalSupply;\n\n\tstring private _name;\n\tstring private _symbol;\n\n\t/**\n\t * @dev Sets the values for {name} and {symbol}.\n\t *\n\t * The defaut value of {decimals} is 18. To select a different value for\n\t * {decimals} you should overload it.\n\t *\n\t * All three of these values are immutable: they can only be set once during\n\t * construction.\n\t */\n\tconstructor(string memory name_, string memory symbol_) {\n\t\t_name = name_;\n\t\t_symbol = symbol_;\n\t}\n\n\t/**\n\t * @dev Returns the name of the token.\n\t */\n\tfunction name() public view virtual returns (string memory) {\n\t\treturn _name;\n\t}\n\n\t/**\n\t * @dev Returns the symbol of the token, usually a shorter version of the\n\t * name.\n\t */\n\tfunction symbol() public view virtual returns (string memory) {\n\t\treturn _symbol;\n\t}\n\n\t/**\n\t * @dev Returns the number of decimals used to get its user representation.\n\t * For example, if `decimals` equals `2`, a balance of `505` tokens should\n\t * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n\t *\n\t * Tokens usually opt for a value of 18, imitating the relationship between\n\t * Ether and Wei. This is the value {ERC20} uses, unless this function is\n\t * overloaded;\n\t *\n\t * NOTE: This information is only used for _display_ purposes: it in\n\t * no way affects any of the arithmetic of the contract, including\n\t * {IERC20-balanceOf} and {IERC20-transfer}.\n\t */\n\tfunction decimals() public view virtual returns (uint8) {\n\t\treturn 18;\n\t}\n\n\t/**\n\t * @dev See {IERC20-totalSupply}.\n\t */\n\tfunction totalSupply() public view virtual override returns (uint256) {\n\t\treturn _totalSupply;\n\t}\n\n\t/**\n\t * @dev See {IERC20-balanceOf}.\n\t */\n\tfunction balanceOf(address account) public view virtual override returns (uint256) {\n\t\treturn _balances[account];\n\t}\n\n\t/**\n\t * @dev See {IERC20-transfer}.\n\t *\n\t * Requirements:\n\t *\n\t * - `recipient` cannot be the zero address.\n\t * - the caller must have a balance of at least `amount`.\n\t */\n\tfunction transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n\t\t_transfer(_msgSender(), recipient, amount);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev See {IERC20-allowance}.\n\t */\n\tfunction allowance(address owner, address spender) public view virtual override returns (uint256) {\n\t\treturn _allowances[owner][spender];\n\t}\n\n\t/**\n\t * @dev See {IERC20-approve}.\n\t *\n\t * Requirements:\n\t *\n\t * - `spender` cannot be the zero address.\n\t */\n\tfunction approve(address spender, uint256 amount) public virtual override returns (bool) {\n\t\t_approve(_msgSender(), spender, amount);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev See {IERC20-transferFrom}.\n\t *\n\t * Emits an {Approval} event indicating the updated allowance. This is not\n\t * required by the EIP. See the note at the beginning of {ERC20}.\n\t *\n\t * Requirements:\n\t *\n\t * - `sender` and `recipient` cannot be the zero address.\n\t * - `sender` must have a balance of at least `amount`.\n\t * - the caller must have allowance for ``sender``'s tokens of at least\n\t * `amount`.\n\t */\n\tfunction transferFrom(\n\t\taddress sender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) public virtual override returns (bool) {\n\t\t_transfer(sender, recipient, amount);\n\n\t\tuint256 currentAllowance = _allowances[sender][_msgSender()];\n\t\trequire(currentAllowance >= amount, 'ERC20: transfer amount exceeds allowance');\n\t\t_approve(sender, _msgSender(), currentAllowance - amount);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Atomically increases the allowance granted to `spender` by the caller.\n\t *\n\t * This is an alternative to {approve} that can be used as a mitigation for\n\t * problems described in {IERC20-approve}.\n\t *\n\t * Emits an {Approval} event indicating the updated allowance.\n\t *\n\t * Requirements:\n\t *\n\t * - `spender` cannot be the zero address.\n\t */\n\tfunction increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n\t\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Atomically decreases the allowance granted to `spender` by the caller.\n\t *\n\t * This is an alternative to {approve} that can be used as a mitigation for\n\t * problems described in {IERC20-approve}.\n\t *\n\t * Emits an {Approval} event indicating the updated allowance.\n\t *\n\t * Requirements:\n\t *\n\t * - `spender` cannot be the zero address.\n\t * - `spender` must have allowance for the caller of at least\n\t * `subtractedValue`.\n\t */\n\tfunction decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n\t\tuint256 currentAllowance = _allowances[_msgSender()][spender];\n\t\trequire(currentAllowance >= subtractedValue, 'ERC20: decreased allowance below zero');\n\t\t_approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Moves tokens `amount` from `sender` to `recipient`.\n\t *\n\t * This is internal function is equivalent to {transfer}, and can be used to\n\t * e.g. implement automatic token fees, slashing mechanisms, etc.\n\t *\n\t * Emits a {Transfer} event.\n\t *\n\t * Requirements:\n\t *\n\t * - `sender` cannot be the zero address.\n\t * - `recipient` cannot be the zero address.\n\t * - `sender` must have a balance of at least `amount`.\n\t */\n\tfunction _transfer(\n\t\taddress sender,\n\t\taddress recipient,\n\t\tuint256 amount\n\t) internal virtual {\n\t\trequire(sender != address(0), 'ERC20: transfer from the zero address');\n\t\trequire(recipient != address(0), 'ERC20: transfer to the zero address');\n\n\t\t_beforeTokenTransfer(sender, recipient, amount);\n\n\t\tuint256 senderBalance = _balances[sender];\n\t\trequire(senderBalance >= amount, 'ERC20: transfer amount exceeds balance');\n\t\t_balances[sender] = senderBalance - amount;\n\t\t_balances[recipient] += amount;\n\n\t\temit Transfer(sender, recipient, amount);\n\t}\n\n\t/** @dev Creates `amount` tokens and assigns them to `account`, increasing\n\t * the total supply.\n\t *\n\t * Emits a {Transfer} event with `from` set to the zero address.\n\t *\n\t * Requirements:\n\t *\n\t * - `to` cannot be the zero address.\n\t */\n\tfunction _mint(address account, uint256 amount) internal virtual {\n\t\trequire(account != address(0), 'ERC20: mint to the zero address');\n\n\t\t_beforeTokenTransfer(address(0), account, amount);\n\n\t\t_totalSupply += amount;\n\t\t_balances[account] += amount;\n\t\temit Transfer(address(0), account, amount);\n\t}\n\n\t/**\n\t * @dev Destroys `amount` tokens from `account`, reducing the\n\t * total supply.\n\t *\n\t * Emits a {Transfer} event with `to` set to the zero address.\n\t *\n\t * Requirements:\n\t *\n\t * - `account` cannot be the zero address.\n\t * - `account` must have at least `amount` tokens.\n\t */\n\tfunction _burn(address account, uint256 amount) internal virtual {\n\t\trequire(account != address(0), 'ERC20: burn from the zero address');\n\n\t\t_beforeTokenTransfer(account, address(0), amount);\n\n\t\tuint256 accountBalance = _balances[account];\n\t\trequire(accountBalance >= amount, 'ERC20: burn amount exceeds balance');\n\t\t_balances[account] = accountBalance - amount;\n\t\t_totalSupply -= amount;\n\n\t\temit Transfer(account, address(0), amount);\n\t}\n\n\t/**\n\t * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n\t *\n\t * This internal function is equivalent to `approve`, and can be used to\n\t * e.g. set automatic allowances for certain subsystems, etc.\n\t *\n\t * Emits an {Approval} event.\n\t *\n\t * Requirements:\n\t *\n\t * - `owner` cannot be the zero address.\n\t * - `spender` cannot be the zero address.\n\t */\n\tfunction _approve(\n\t\taddress owner,\n\t\taddress spender,\n\t\tuint256 amount\n\t) internal virtual {\n\t\trequire(owner != address(0), 'ERC20: approve from the zero address');\n\t\trequire(spender != address(0), 'ERC20: approve to the zero address');\n\n\t\t_allowances[owner][spender] = amount;\n\t\temit Approval(owner, spender, amount);\n\t}\n\n\t/**\n\t * @dev Hook that is called before any transfer of tokens. This includes\n\t * minting and burning.\n\t *\n\t * Calling conditions:\n\t *\n\t * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n\t * will be to transferred to `to`.\n\t * - when `from` is zero, `amount` tokens will be minted for `to`.\n\t * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n\t * - `from` and `to` are never both zero.\n\t *\n\t * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n\t */\n\tfunction _beforeTokenTransfer(\n\t\taddress from,\n\t\taddress to,\n\t\tuint256 amount\n\t) internal virtual {}\n}\n",
	"sourcePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
	"ast": {
		"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
		"exportedSymbols": {
			"Context": [3087],
			"ERC20": [2986],
			"IERC20": [3064]
		},
		"id": 2987,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 2487,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "33:23:13"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
				"file": "./IERC20.sol",
				"id": 2488,
				"nodeType": "ImportDirective",
				"scope": 2987,
				"sourceUnit": 3065,
				"src": "58:22:13",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
				"file": "../../utils/Context.sol",
				"id": 2489,
				"nodeType": "ImportDirective",
				"scope": 2987,
				"sourceUnit": 3088,
				"src": "81:33:13",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 2491,
							"name": "Context",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 3087,
							"src": "1297:7:13"
						},
						"id": 2492,
						"nodeType": "InheritanceSpecifier",
						"src": "1297:7:13"
					},
					{
						"baseName": {
							"id": 2493,
							"name": "IERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 3064,
							"src": "1306:6:13"
						},
						"id": 2494,
						"nodeType": "InheritanceSpecifier",
						"src": "1306:6:13"
					}
				],
				"contractDependencies": [3064, 3087],
				"contractKind": "contract",
				"documentation": {
					"id": 2490,
					"nodeType": "StructuredDocumentation",
					"src": "116:1162:13",
					"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
				},
				"fullyImplemented": true,
				"id": 2986,
				"linearizedBaseContracts": [2986, 3064, 3087],
				"name": "ERC20",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 2498,
						"mutability": "mutable",
						"name": "_balances",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1316:45:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
							"typeString": "mapping(address => uint256)"
						},
						"typeName": {
							"id": 2497,
							"keyType": {
								"id": 2495,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1324:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "1316:27:13",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
								"typeString": "mapping(address => uint256)"
							},
							"valueType": {
								"id": 2496,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1335:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2504,
						"mutability": "mutable",
						"name": "_allowances",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1365:67:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
							"typeString": "mapping(address => mapping(address => uint256))"
						},
						"typeName": {
							"id": 2503,
							"keyType": {
								"id": 2499,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1373:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "1365:47:13",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
								"typeString": "mapping(address => mapping(address => uint256))"
							},
							"valueType": {
								"id": 2502,
								"keyType": {
									"id": 2500,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "1392:7:13",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"nodeType": "Mapping",
								"src": "1384:27:13",
								"typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
									"typeString": "mapping(address => uint256)"
								},
								"valueType": {
									"id": 2501,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "1403:7:13",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2506,
						"mutability": "mutable",
						"name": "_totalSupply",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1436:28:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 2505,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1436:7:13",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2508,
						"mutability": "mutable",
						"name": "_name",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1468:20:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 2507,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "1468:6:13",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2510,
						"mutability": "mutable",
						"name": "_symbol",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1491:22:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 2509,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "1491:6:13",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"body": {
							"id": 2526,
							"nodeType": "Block",
							"src": "1850:42:13",
							"statements": [
								{
									"expression": {
										"id": 2520,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2518,
											"name": "_name",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2508,
											"src": "1854:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 2519,
											"name": "name_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2513,
											"src": "1862:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "1854:13:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 2521,
									"nodeType": "ExpressionStatement",
									"src": "1854:13:13"
								},
								{
									"expression": {
										"id": 2524,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2522,
											"name": "_symbol",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2510,
											"src": "1871:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 2523,
											"name": "symbol_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2515,
											"src": "1881:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "1871:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 2525,
									"nodeType": "ExpressionStatement",
									"src": "1871:17:13"
								}
							]
						},
						"documentation": {
							"id": 2511,
							"nodeType": "StructuredDocumentation",
							"src": "1517:275:13",
							"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
						},
						"id": 2527,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2516,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2513,
									"mutability": "mutable",
									"name": "name_",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1806:19:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2512,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1806:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2515,
									"mutability": "mutable",
									"name": "symbol_",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1827:21:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2514,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1827:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1805:44:13"
						},
						"returnParameters": {
							"id": 2517,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1850:0:13"
						},
						"scope": 2986,
						"src": "1794:98:13",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2535,
							"nodeType": "Block",
							"src": "2005:20:13",
							"statements": [
								{
									"expression": {
										"id": 2533,
										"name": "_name",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2508,
										"src": "2016:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 2532,
									"id": 2534,
									"nodeType": "Return",
									"src": "2009:12:13"
								}
							]
						},
						"documentation": {
							"id": 2528,
							"nodeType": "StructuredDocumentation",
							"src": "1895:48:13",
							"text": " @dev Returns the name of the token."
						},
						"functionSelector": "06fdde03",
						"id": 2536,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "name",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2529,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1958:2:13"
						},
						"returnParameters": {
							"id": 2532,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2531,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2536,
									"src": "1990:13:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2530,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1990:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1989:15:13"
						},
						"scope": 2986,
						"src": "1945:80:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2544,
							"nodeType": "Block",
							"src": "2185:22:13",
							"statements": [
								{
									"expression": {
										"id": 2542,
										"name": "_symbol",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2510,
										"src": "2196:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 2541,
									"id": 2543,
									"nodeType": "Return",
									"src": "2189:14:13"
								}
							]
						},
						"documentation": {
							"id": 2537,
							"nodeType": "StructuredDocumentation",
							"src": "2028:93:13",
							"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
						},
						"functionSelector": "95d89b41",
						"id": 2545,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "symbol",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2538,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2138:2:13"
						},
						"returnParameters": {
							"id": 2541,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2540,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2545,
									"src": "2170:13:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2539,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2170:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2169:15:13"
						},
						"scope": 2986,
						"src": "2123:84:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2553,
							"nodeType": "Block",
							"src": "2845:17:13",
							"statements": [
								{
									"expression": {
										"hexValue": "3138",
										"id": 2551,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2856:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"functionReturnParameters": 2550,
									"id": 2552,
									"nodeType": "Return",
									"src": "2849:9:13"
								}
							]
						},
						"documentation": {
							"id": 2546,
							"nodeType": "StructuredDocumentation",
							"src": "2210:577:13",
							"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
						},
						"functionSelector": "313ce567",
						"id": 2554,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decimals",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2547,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2806:2:13"
						},
						"returnParameters": {
							"id": 2550,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2549,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2554,
									"src": "2838:5:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2548,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2838:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2837:7:13"
						},
						"scope": 2986,
						"src": "2789:73:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [2995],
						"body": {
							"id": 2563,
							"nodeType": "Block",
							"src": "2980:27:13",
							"statements": [
								{
									"expression": {
										"id": 2561,
										"name": "_totalSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2506,
										"src": "2991:12:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 2560,
									"id": 2562,
									"nodeType": "Return",
									"src": "2984:19:13"
								}
							]
						},
						"documentation": {
							"id": 2555,
							"nodeType": "StructuredDocumentation",
							"src": "2865:43:13",
							"text": " @dev See {IERC20-totalSupply}."
						},
						"functionSelector": "18160ddd",
						"id": 2564,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "totalSupply",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2557,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "2953:8:13"
						},
						"parameters": {
							"id": 2556,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2930:2:13"
						},
						"returnParameters": {
							"id": 2560,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2559,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2564,
									"src": "2971:7:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2558,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2971:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2970:9:13"
						},
						"scope": 2986,
						"src": "2910:97:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3003],
						"body": {
							"id": 2577,
							"nodeType": "Block",
							"src": "3136:33:13",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"id": 2573,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2498,
											"src": "3147:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2575,
										"indexExpression": {
											"id": 2574,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2567,
											"src": "3157:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3147:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 2572,
									"id": 2576,
									"nodeType": "Return",
									"src": "3140:25:13"
								}
							]
						},
						"documentation": {
							"id": 2565,
							"nodeType": "StructuredDocumentation",
							"src": "3010:41:13",
							"text": " @dev See {IERC20-balanceOf}."
						},
						"functionSelector": "70a08231",
						"id": 2578,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "balanceOf",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2569,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3109:8:13"
						},
						"parameters": {
							"id": 2568,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2567,
									"mutability": "mutable",
									"name": "account",
									"nodeType": "VariableDeclaration",
									"scope": 2578,
									"src": "3072:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2566,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3072:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3071:17:13"
						},
						"returnParameters": {
							"id": 2572,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2571,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2578,
									"src": "3127:7:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3127:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3126:9:13"
						},
						"scope": 2986,
						"src": "3053:116:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3013],
						"body": {
							"id": 2598,
							"nodeType": "Block",
							"src": "3437:65:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2590,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "3451:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2591,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3451:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2592,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2581,
												"src": "3465:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2593,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2583,
												"src": "3476:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2589,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2820,
											"src": "3441:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2594,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3441:42:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2595,
									"nodeType": "ExpressionStatement",
									"src": "3441:42:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3494:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2588,
									"id": 2597,
									"nodeType": "Return",
									"src": "3487:11:13"
								}
							]
						},
						"documentation": {
							"id": 2579,
							"nodeType": "StructuredDocumentation",
							"src": "3172:171:13",
							"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
						},
						"functionSelector": "a9059cbb",
						"id": 2599,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transfer",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2585,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3413:8:13"
						},
						"parameters": {
							"id": 2584,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2581,
									"mutability": "mutable",
									"name": "recipient",
									"nodeType": "VariableDeclaration",
									"scope": 2599,
									"src": "3363:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3363:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2583,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2599,
									"src": "3382:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2582,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3382:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3362:35:13"
						},
						"returnParameters": {
							"id": 2588,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2587,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2599,
									"src": "3431:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2586,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3431:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3430:6:13"
						},
						"scope": 2986,
						"src": "3345:157:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3023],
						"body": {
							"id": 2616,
							"nodeType": "Block",
							"src": "3646:42:13",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"baseExpression": {
												"id": 2610,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2504,
												"src": "3657:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 2612,
											"indexExpression": {
												"id": 2611,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2602,
												"src": "3669:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "3657:18:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2614,
										"indexExpression": {
											"id": 2613,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2604,
											"src": "3676:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3657:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 2609,
									"id": 2615,
									"nodeType": "Return",
									"src": "3650:34:13"
								}
							]
						},
						"documentation": {
							"id": 2600,
							"nodeType": "StructuredDocumentation",
							"src": "3505:41:13",
							"text": " @dev See {IERC20-allowance}."
						},
						"functionSelector": "dd62ed3e",
						"id": 2617,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "allowance",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2606,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3619:8:13"
						},
						"parameters": {
							"id": 2605,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2602,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 2617,
									"src": "3567:13:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2601,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3567:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2604,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2617,
									"src": "3582:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2603,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3582:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3566:32:13"
						},
						"returnParameters": {
							"id": 2609,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2608,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2617,
									"src": "3637:7:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2607,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3637:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3636:9:13"
						},
						"scope": 2986,
						"src": "3548:140:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3033],
						"body": {
							"id": 2637,
							"nodeType": "Block",
							"src": "3891:62:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2629,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "3904:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2630,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3904:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2631,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2620,
												"src": "3918:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2632,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2622,
												"src": "3927:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2628,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "3895:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2633,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3895:39:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2634,
									"nodeType": "ExpressionStatement",
									"src": "3895:39:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3945:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2627,
									"id": 2636,
									"nodeType": "Return",
									"src": "3938:11:13"
								}
							]
						},
						"documentation": {
							"id": 2618,
							"nodeType": "StructuredDocumentation",
							"src": "3691:109:13",
							"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "095ea7b3",
						"id": 2638,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "approve",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2624,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3867:8:13"
						},
						"parameters": {
							"id": 2623,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2620,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2638,
									"src": "3819:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2619,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3819:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2622,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2638,
									"src": "3836:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3836:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3818:33:13"
						},
						"returnParameters": {
							"id": 2627,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2626,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2638,
									"src": "3885:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2625,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3885:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3884:6:13"
						},
						"scope": 2986,
						"src": "3802:151:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3045],
						"body": {
							"id": 2684,
							"nodeType": "Block",
							"src": "4499:269:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 2652,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2641,
												"src": "4513:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2653,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2643,
												"src": "4521:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2654,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2645,
												"src": "4532:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2651,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2820,
											"src": "4503:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2655,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4503:36:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2656,
									"nodeType": "ExpressionStatement",
									"src": "4503:36:13"
								},
								{
									"assignments": [2658],
									"declarations": [
										{
											"constant": false,
											"id": 2658,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nodeType": "VariableDeclaration",
											"scope": 2684,
											"src": "4544:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2657,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4544:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2665,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 2659,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2504,
												"src": "4571:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 2661,
											"indexExpression": {
												"id": 2660,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2641,
												"src": "4583:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "4571:19:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2664,
										"indexExpression": {
											"arguments": [],
											"expression": {
												"argumentTypes": [],
												"id": 2662,
												"name": "_msgSender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3075,
												"src": "4591:10:13",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
													"typeString": "function () view returns (address)"
												}
											},
											"id": 2663,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4591:12:13",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "4571:33:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "4544:60:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2669,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2667,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2658,
													"src": "4616:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2668,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2645,
													"src": "4636:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "4616:26:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
												"id": 2670,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4644:42:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												},
												"value": "ERC20: transfer amount exceeds allowance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												}
											],
											"id": 2666,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "4608:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2671,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4608:79:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2672,
									"nodeType": "ExpressionStatement",
									"src": "4608:79:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 2674,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2641,
												"src": "4700:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2675,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "4708:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2676,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "4708:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2679,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2677,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2658,
													"src": "4722:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 2678,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2645,
													"src": "4741:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "4722:25:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2673,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "4691:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2680,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4691:57:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2681,
									"nodeType": "ExpressionStatement",
									"src": "4691:57:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4760:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2650,
									"id": 2683,
									"nodeType": "Return",
									"src": "4753:11:13"
								}
							]
						},
						"documentation": {
							"id": 2639,
							"nodeType": "StructuredDocumentation",
							"src": "3956:420:13",
							"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
						},
						"functionSelector": "23b872dd",
						"id": 2685,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transferFrom",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2647,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "4475:8:13"
						},
						"parameters": {
							"id": 2646,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2641,
									"mutability": "mutable",
									"name": "sender",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4403:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2640,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4403:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2643,
									"mutability": "mutable",
									"name": "recipient",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4421:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2642,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4421:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2645,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4442:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4442:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4399:60:13"
						},
						"returnParameters": {
							"id": 2650,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2649,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4493:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2648,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4493:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4492:6:13"
						},
						"scope": 2986,
						"src": "4378:390:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2711,
							"nodeType": "Block",
							"src": "5218:103:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2696,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "5231:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2697,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "5231:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2698,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2688,
												"src": "5245:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2706,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2699,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "5254:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2702,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2700,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3075,
																"src": "5266:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5266:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5254:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2704,
													"indexExpression": {
														"id": 2703,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "5280:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5254:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "+",
												"rightExpression": {
													"id": 2705,
													"name": "addedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2690,
													"src": "5291:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "5254:47:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2695,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "5222:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2707,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5222:80:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2708,
									"nodeType": "ExpressionStatement",
									"src": "5222:80:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2709,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5313:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2694,
									"id": 2710,
									"nodeType": "Return",
									"src": "5306:11:13"
								}
							]
						},
						"documentation": {
							"id": 2686,
							"nodeType": "StructuredDocumentation",
							"src": "4771:351:13",
							"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "39509351",
						"id": 2712,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "increaseAllowance",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2691,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2688,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2712,
									"src": "5151:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2687,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5151:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2690,
									"mutability": "mutable",
									"name": "addedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2712,
									"src": "5168:18:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2689,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5168:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5150:37:13"
						},
						"returnParameters": {
							"id": 2694,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2693,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2712,
									"src": "5212:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2692,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5212:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5211:6:13"
						},
						"scope": 2986,
						"src": "5124:197:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2749,
							"nodeType": "Block",
							"src": "5862:245:13",
							"statements": [
								{
									"assignments": [2723],
									"declarations": [
										{
											"constant": false,
											"id": 2723,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nodeType": "VariableDeclaration",
											"scope": 2749,
											"src": "5866:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2722,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5866:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2730,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 2724,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2504,
												"src": "5893:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 2727,
											"indexExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2725,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "5905:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2726,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "5905:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "5893:25:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2729,
										"indexExpression": {
											"id": 2728,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2715,
											"src": "5919:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "5893:34:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "5866:61:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2734,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2732,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2723,
													"src": "5939:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2733,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2717,
													"src": "5959:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "5939:35:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
												"id": 2735,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5976:39:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												},
												"value": "ERC20: decreased allowance below zero"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												}
											],
											"id": 2731,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "5931:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2736,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5931:85:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2737,
									"nodeType": "ExpressionStatement",
									"src": "5931:85:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2739,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "6029:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2740,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "6029:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2741,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2715,
												"src": "6043:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2744,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2742,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2723,
													"src": "6052:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 2743,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2717,
													"src": "6071:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "6052:34:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2738,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "6020:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2745,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6020:67:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2746,
									"nodeType": "ExpressionStatement",
									"src": "6020:67:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2747,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6099:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2721,
									"id": 2748,
									"nodeType": "Return",
									"src": "6092:11:13"
								}
							]
						},
						"documentation": {
							"id": 2713,
							"nodeType": "StructuredDocumentation",
							"src": "5324:437:13",
							"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
						},
						"functionSelector": "a457c2d7",
						"id": 2750,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decreaseAllowance",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2718,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2715,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2750,
									"src": "5790:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2714,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5790:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2717,
									"mutability": "mutable",
									"name": "subtractedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2750,
									"src": "5807:23:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5807:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5789:42:13"
						},
						"returnParameters": {
							"id": 2721,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2720,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2750,
									"src": "5856:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2719,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5856:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5855:6:13"
						},
						"scope": 2986,
						"src": "5763:344:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2819,
							"nodeType": "Block",
							"src": "6632:454:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2766,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2761,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2753,
													"src": "6644:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6662:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6654:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2762,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6654:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "6644:20:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
												"id": 2767,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6666:39:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												},
												"value": "ERC20: transfer from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												}
											],
											"id": 2760,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6636:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2768,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6636:70:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2769,
									"nodeType": "ExpressionStatement",
									"src": "6636:70:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2776,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2771,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2755,
													"src": "6718:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6739:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6731:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6731:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6731:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "6718:23:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
												"id": 2777,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6743:37:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												},
												"value": "ERC20: transfer to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												}
											],
											"id": 2770,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6710:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2778,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6710:71:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2779,
									"nodeType": "ExpressionStatement",
									"src": "6710:71:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 2781,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2753,
												"src": "6807:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2782,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2755,
												"src": "6815:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2783,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2757,
												"src": "6826:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2780,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2985,
											"src": "6786:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2784,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6786:47:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2785,
									"nodeType": "ExpressionStatement",
									"src": "6786:47:13"
								},
								{
									"assignments": [2787],
									"declarations": [
										{
											"constant": false,
											"id": 2787,
											"mutability": "mutable",
											"name": "senderBalance",
											"nodeType": "VariableDeclaration",
											"scope": 2819,
											"src": "6838:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6838:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2791,
									"initialValue": {
										"baseExpression": {
											"id": 2788,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2498,
											"src": "6862:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2790,
										"indexExpression": {
											"id": 2789,
											"name": "sender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2753,
											"src": "6872:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "6862:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "6838:41:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2795,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2793,
													"name": "senderBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2787,
													"src": "6891:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2794,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2757,
													"src": "6908:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "6891:23:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
												"id": 2796,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6916:40:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												},
												"value": "ERC20: transfer amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												}
											],
											"id": 2792,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6883:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2797,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6883:74:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2798,
									"nodeType": "ExpressionStatement",
									"src": "6883:74:13"
								},
								{
									"expression": {
										"id": 2805,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2799,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "6961:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2801,
											"indexExpression": {
												"id": 2800,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2753,
												"src": "6971:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "6961:17:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2804,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2802,
												"name": "senderBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2787,
												"src": "6981:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 2803,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2757,
												"src": "6997:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "6981:22:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6961:42:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2806,
									"nodeType": "ExpressionStatement",
									"src": "6961:42:13"
								},
								{
									"expression": {
										"id": 2811,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2807,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "7007:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2809,
											"indexExpression": {
												"id": 2808,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2755,
												"src": "7017:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "7007:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 2810,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2757,
											"src": "7031:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7007:30:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2812,
									"nodeType": "ExpressionStatement",
									"src": "7007:30:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 2814,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2753,
												"src": "7056:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2815,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2755,
												"src": "7064:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2816,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2757,
												"src": "7075:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2813,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3054,
											"src": "7047:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2817,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7047:35:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2818,
									"nodeType": "EmitStatement",
									"src": "7042:40:13"
								}
							]
						},
						"documentation": {
							"id": 2751,
							"nodeType": "StructuredDocumentation",
							"src": "6110:424:13",
							"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
						},
						"id": 2820,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_transfer",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2758,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2753,
									"mutability": "mutable",
									"name": "sender",
									"nodeType": "VariableDeclaration",
									"scope": 2820,
									"src": "6558:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2752,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6558:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2755,
									"mutability": "mutable",
									"name": "recipient",
									"nodeType": "VariableDeclaration",
									"scope": 2820,
									"src": "6576:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2754,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6576:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2757,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2820,
									"src": "6597:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2756,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6597:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "6554:60:13"
						},
						"returnParameters": {
							"id": 2759,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6632:0:13"
						},
						"scope": 2986,
						"src": "6536:550:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2866,
							"nodeType": "Block",
							"src": "7392:232:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2834,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2829,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2823,
													"src": "7404:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7423:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7415:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2830,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7415:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7415:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "7404:21:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
												"id": 2835,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7427:33:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												},
												"value": "ERC20: mint to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												}
											],
											"id": 2828,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "7396:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2836,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7396:65:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2837,
									"nodeType": "ExpressionStatement",
									"src": "7396:65:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7495:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "7487:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2839,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7487:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2842,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "7487:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2843,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2823,
												"src": "7499:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2844,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2825,
												"src": "7508:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2838,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2985,
											"src": "7466:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2845,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7466:49:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2846,
									"nodeType": "ExpressionStatement",
									"src": "7466:49:13"
								},
								{
									"expression": {
										"id": 2849,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2847,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2506,
											"src": "7520:12:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 2848,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2825,
											"src": "7536:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7520:22:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2850,
									"nodeType": "ExpressionStatement",
									"src": "7520:22:13"
								},
								{
									"expression": {
										"id": 2855,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2851,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "7546:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2853,
											"indexExpression": {
												"id": 2852,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2823,
												"src": "7556:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "7546:18:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 2854,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2825,
											"src": "7568:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7546:28:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2856,
									"nodeType": "ExpressionStatement",
									"src": "7546:28:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7600:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "7592:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2858,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7592:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2861,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "7592:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2862,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2823,
												"src": "7604:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2863,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2825,
												"src": "7613:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2857,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3054,
											"src": "7583:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2864,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7583:37:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2865,
									"nodeType": "EmitStatement",
									"src": "7578:42:13"
								}
							]
						},
						"documentation": {
							"id": 2821,
							"nodeType": "StructuredDocumentation",
							"src": "7089:236:13",
							"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
						},
						"id": 2867,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_mint",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2826,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2823,
									"mutability": "mutable",
									"name": "account",
									"nodeType": "VariableDeclaration",
									"scope": 2867,
									"src": "7342:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2822,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7342:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2825,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2867,
									"src": "7359:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7359:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7341:33:13"
						},
						"returnParameters": {
							"id": 2827,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7392:0:13"
						},
						"scope": 2986,
						"src": "7327:297:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2928,
							"nodeType": "Block",
							"src": "7973:373:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2881,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2876,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2870,
													"src": "7985:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8004:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7996:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2877,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7996:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7996:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "7985:21:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
												"id": 2882,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8008:35:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												},
												"value": "ERC20: burn from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												}
											],
											"id": 2875,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "7977:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2883,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7977:67:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2884,
									"nodeType": "ExpressionStatement",
									"src": "7977:67:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 2886,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2870,
												"src": "8070:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8087:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2888,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "8079:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2887,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8079:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2890,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "8079:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2891,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2872,
												"src": "8091:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2885,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2985,
											"src": "8049:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2892,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8049:49:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2893,
									"nodeType": "ExpressionStatement",
									"src": "8049:49:13"
								},
								{
									"assignments": [2895],
									"declarations": [
										{
											"constant": false,
											"id": 2895,
											"mutability": "mutable",
											"name": "accountBalance",
											"nodeType": "VariableDeclaration",
											"scope": 2928,
											"src": "8103:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2894,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8103:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2899,
									"initialValue": {
										"baseExpression": {
											"id": 2896,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2498,
											"src": "8128:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2898,
										"indexExpression": {
											"id": 2897,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2870,
											"src": "8138:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "8128:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "8103:43:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2903,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2901,
													"name": "accountBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2895,
													"src": "8158:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2902,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2872,
													"src": "8176:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "8158:24:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
												"id": 2904,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8184:36:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												},
												"value": "ERC20: burn amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												}
											],
											"id": 2900,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8150:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2905,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8150:71:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2906,
									"nodeType": "ExpressionStatement",
									"src": "8150:71:13"
								},
								{
									"expression": {
										"id": 2913,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2907,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "8225:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2909,
											"indexExpression": {
												"id": 2908,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2870,
												"src": "8235:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "8225:18:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2912,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2910,
												"name": "accountBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2895,
												"src": "8246:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 2911,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2872,
												"src": "8263:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "8246:23:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8225:44:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2914,
									"nodeType": "ExpressionStatement",
									"src": "8225:44:13"
								},
								{
									"expression": {
										"id": 2917,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2915,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2506,
											"src": "8273:12:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "-=",
										"rightHandSide": {
											"id": 2916,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2872,
											"src": "8289:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8273:22:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2918,
									"nodeType": "ExpressionStatement",
									"src": "8273:22:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 2920,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2870,
												"src": "8314:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8331:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "8323:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2921,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8323:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2924,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "8323:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2925,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2872,
												"src": "8335:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2919,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3054,
											"src": "8305:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2926,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8305:37:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2927,
									"nodeType": "EmitStatement",
									"src": "8300:42:13"
								}
							]
						},
						"documentation": {
							"id": 2868,
							"nodeType": "StructuredDocumentation",
							"src": "7627:279:13",
							"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
						},
						"id": 2929,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_burn",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2873,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2870,
									"mutability": "mutable",
									"name": "account",
									"nodeType": "VariableDeclaration",
									"scope": 2929,
									"src": "7923:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2869,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7923:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2872,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2929,
									"src": "7940:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7940:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7922:33:13"
						},
						"returnParameters": {
							"id": 2874,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7973:0:13"
						},
						"scope": 2986,
						"src": "7908:438:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2973,
							"nodeType": "Block",
							"src": "8819:230:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2945,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2940,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2932,
													"src": "8831:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8848:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8840:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8840:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8840:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "8831:19:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
												"id": 2946,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8852:38:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												},
												"value": "ERC20: approve from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												}
											],
											"id": 2939,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8823:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2947,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8823:68:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2948,
									"nodeType": "ExpressionStatement",
									"src": "8823:68:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2955,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2950,
													"name": "spender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2934,
													"src": "8903:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8922:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8914:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8914:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8914:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "8903:21:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
												"id": 2956,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8926:36:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												},
												"value": "ERC20: approve to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												}
											],
											"id": 2949,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8895:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2957,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8895:68:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2958,
									"nodeType": "ExpressionStatement",
									"src": "8895:68:13"
								},
								{
									"expression": {
										"id": 2965,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"baseExpression": {
													"id": 2959,
													"name": "_allowances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2504,
													"src": "8968:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
														"typeString": "mapping(address => mapping(address => uint256))"
													}
												},
												"id": 2962,
												"indexExpression": {
													"id": 2960,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2932,
													"src": "8980:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8968:18:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2963,
											"indexExpression": {
												"id": 2961,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2934,
												"src": "8987:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "8968:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 2964,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2936,
											"src": "8998:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8968:36:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2966,
									"nodeType": "ExpressionStatement",
									"src": "8968:36:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 2968,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2932,
												"src": "9022:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2969,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2934,
												"src": "9029:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2970,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2936,
												"src": "9038:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2967,
											"name": "Approval",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3063,
											"src": "9013:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2971,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9013:32:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2972,
									"nodeType": "EmitStatement",
									"src": "9008:37:13"
								}
							]
						},
						"documentation": {
							"id": 2930,
							"nodeType": "StructuredDocumentation",
							"src": "8349:376:13",
							"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
						},
						"id": 2974,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_approve",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2937,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2932,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "8748:13:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2931,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8748:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2934,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "8765:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2933,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8765:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2936,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "8784:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2935,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8784:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8744:57:13"
						},
						"returnParameters": {
							"id": 2938,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8819:0:13"
						},
						"scope": 2986,
						"src": "8727:322:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2984,
							"nodeType": "Block",
							"src": "9689:2:13",
							"statements": []
						},
						"documentation": {
							"id": 2975,
							"nodeType": "StructuredDocumentation",
							"src": "9052:537:13",
							"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
						},
						"id": 2985,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_beforeTokenTransfer",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2982,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2977,
									"mutability": "mutable",
									"name": "from",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "9624:12:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2976,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9624:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2979,
									"mutability": "mutable",
									"name": "to",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "9640:10:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2978,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9640:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2981,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "9654:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2980,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9654:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9620:51:13"
						},
						"returnParameters": {
							"id": 2983,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "9689:0:13"
						},
						"scope": 2986,
						"src": "9591:100:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 2987,
				"src": "1279:8414:13"
			}
		],
		"src": "33:9661:13"
	},
	"legacyAST": {
		"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
		"exportedSymbols": {
			"Context": [3087],
			"ERC20": [2986],
			"IERC20": [3064]
		},
		"id": 2987,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 2487,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "33:23:13"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
				"file": "./IERC20.sol",
				"id": 2488,
				"nodeType": "ImportDirective",
				"scope": 2987,
				"sourceUnit": 3065,
				"src": "58:22:13",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
				"file": "../../utils/Context.sol",
				"id": 2489,
				"nodeType": "ImportDirective",
				"scope": 2987,
				"sourceUnit": 3088,
				"src": "81:33:13",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 2491,
							"name": "Context",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 3087,
							"src": "1297:7:13"
						},
						"id": 2492,
						"nodeType": "InheritanceSpecifier",
						"src": "1297:7:13"
					},
					{
						"baseName": {
							"id": 2493,
							"name": "IERC20",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 3064,
							"src": "1306:6:13"
						},
						"id": 2494,
						"nodeType": "InheritanceSpecifier",
						"src": "1306:6:13"
					}
				],
				"contractDependencies": [3064, 3087],
				"contractKind": "contract",
				"documentation": {
					"id": 2490,
					"nodeType": "StructuredDocumentation",
					"src": "116:1162:13",
					"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
				},
				"fullyImplemented": true,
				"id": 2986,
				"linearizedBaseContracts": [2986, 3064, 3087],
				"name": "ERC20",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 2498,
						"mutability": "mutable",
						"name": "_balances",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1316:45:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
							"typeString": "mapping(address => uint256)"
						},
						"typeName": {
							"id": 2497,
							"keyType": {
								"id": 2495,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1324:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "1316:27:13",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
								"typeString": "mapping(address => uint256)"
							},
							"valueType": {
								"id": 2496,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1335:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2504,
						"mutability": "mutable",
						"name": "_allowances",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1365:67:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
							"typeString": "mapping(address => mapping(address => uint256))"
						},
						"typeName": {
							"id": 2503,
							"keyType": {
								"id": 2499,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1373:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "1365:47:13",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
								"typeString": "mapping(address => mapping(address => uint256))"
							},
							"valueType": {
								"id": 2502,
								"keyType": {
									"id": 2500,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "1392:7:13",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"nodeType": "Mapping",
								"src": "1384:27:13",
								"typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
									"typeString": "mapping(address => uint256)"
								},
								"valueType": {
									"id": 2501,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "1403:7:13",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								}
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2506,
						"mutability": "mutable",
						"name": "_totalSupply",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1436:28:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 2505,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1436:7:13",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2508,
						"mutability": "mutable",
						"name": "_name",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1468:20:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 2507,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "1468:6:13",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"constant": false,
						"id": 2510,
						"mutability": "mutable",
						"name": "_symbol",
						"nodeType": "VariableDeclaration",
						"scope": 2986,
						"src": "1491:22:13",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_string_storage",
							"typeString": "string"
						},
						"typeName": {
							"id": 2509,
							"name": "string",
							"nodeType": "ElementaryTypeName",
							"src": "1491:6:13",
							"typeDescriptions": {
								"typeIdentifier": "t_string_storage_ptr",
								"typeString": "string"
							}
						},
						"visibility": "private"
					},
					{
						"body": {
							"id": 2526,
							"nodeType": "Block",
							"src": "1850:42:13",
							"statements": [
								{
									"expression": {
										"id": 2520,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2518,
											"name": "_name",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2508,
											"src": "1854:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 2519,
											"name": "name_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2513,
											"src": "1862:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "1854:13:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 2521,
									"nodeType": "ExpressionStatement",
									"src": "1854:13:13"
								},
								{
									"expression": {
										"id": 2524,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2522,
											"name": "_symbol",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2510,
											"src": "1871:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage",
												"typeString": "string storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 2523,
											"name": "symbol_",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2515,
											"src": "1881:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_memory_ptr",
												"typeString": "string memory"
											}
										},
										"src": "1871:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"id": 2525,
									"nodeType": "ExpressionStatement",
									"src": "1871:17:13"
								}
							]
						},
						"documentation": {
							"id": 2511,
							"nodeType": "StructuredDocumentation",
							"src": "1517:275:13",
							"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
						},
						"id": 2527,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2516,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2513,
									"mutability": "mutable",
									"name": "name_",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1806:19:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2512,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1806:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2515,
									"mutability": "mutable",
									"name": "symbol_",
									"nodeType": "VariableDeclaration",
									"scope": 2527,
									"src": "1827:21:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2514,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1827:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1805:44:13"
						},
						"returnParameters": {
							"id": 2517,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1850:0:13"
						},
						"scope": 2986,
						"src": "1794:98:13",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2535,
							"nodeType": "Block",
							"src": "2005:20:13",
							"statements": [
								{
									"expression": {
										"id": 2533,
										"name": "_name",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2508,
										"src": "2016:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 2532,
									"id": 2534,
									"nodeType": "Return",
									"src": "2009:12:13"
								}
							]
						},
						"documentation": {
							"id": 2528,
							"nodeType": "StructuredDocumentation",
							"src": "1895:48:13",
							"text": " @dev Returns the name of the token."
						},
						"functionSelector": "06fdde03",
						"id": 2536,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "name",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2529,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1958:2:13"
						},
						"returnParameters": {
							"id": 2532,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2531,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2536,
									"src": "1990:13:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2530,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1990:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1989:15:13"
						},
						"scope": 2986,
						"src": "1945:80:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2544,
							"nodeType": "Block",
							"src": "2185:22:13",
							"statements": [
								{
									"expression": {
										"id": 2542,
										"name": "_symbol",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2510,
										"src": "2196:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage",
											"typeString": "string storage ref"
										}
									},
									"functionReturnParameters": 2541,
									"id": 2543,
									"nodeType": "Return",
									"src": "2189:14:13"
								}
							]
						},
						"documentation": {
							"id": 2537,
							"nodeType": "StructuredDocumentation",
							"src": "2028:93:13",
							"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
						},
						"functionSelector": "95d89b41",
						"id": 2545,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "symbol",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2538,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2138:2:13"
						},
						"returnParameters": {
							"id": 2541,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2540,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2545,
									"src": "2170:13:13",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2539,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2170:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2169:15:13"
						},
						"scope": 2986,
						"src": "2123:84:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2553,
							"nodeType": "Block",
							"src": "2845:17:13",
							"statements": [
								{
									"expression": {
										"hexValue": "3138",
										"id": 2551,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2856:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"functionReturnParameters": 2550,
									"id": 2552,
									"nodeType": "Return",
									"src": "2849:9:13"
								}
							]
						},
						"documentation": {
							"id": 2546,
							"nodeType": "StructuredDocumentation",
							"src": "2210:577:13",
							"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
						},
						"functionSelector": "313ce567",
						"id": 2554,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decimals",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2547,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2806:2:13"
						},
						"returnParameters": {
							"id": 2550,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2549,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2554,
									"src": "2838:5:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2548,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2838:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2837:7:13"
						},
						"scope": 2986,
						"src": "2789:73:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [2995],
						"body": {
							"id": 2563,
							"nodeType": "Block",
							"src": "2980:27:13",
							"statements": [
								{
									"expression": {
										"id": 2561,
										"name": "_totalSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2506,
										"src": "2991:12:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 2560,
									"id": 2562,
									"nodeType": "Return",
									"src": "2984:19:13"
								}
							]
						},
						"documentation": {
							"id": 2555,
							"nodeType": "StructuredDocumentation",
							"src": "2865:43:13",
							"text": " @dev See {IERC20-totalSupply}."
						},
						"functionSelector": "18160ddd",
						"id": 2564,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "totalSupply",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2557,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "2953:8:13"
						},
						"parameters": {
							"id": 2556,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2930:2:13"
						},
						"returnParameters": {
							"id": 2560,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2559,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2564,
									"src": "2971:7:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2558,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2971:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2970:9:13"
						},
						"scope": 2986,
						"src": "2910:97:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3003],
						"body": {
							"id": 2577,
							"nodeType": "Block",
							"src": "3136:33:13",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"id": 2573,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2498,
											"src": "3147:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2575,
										"indexExpression": {
											"id": 2574,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2567,
											"src": "3157:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3147:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 2572,
									"id": 2576,
									"nodeType": "Return",
									"src": "3140:25:13"
								}
							]
						},
						"documentation": {
							"id": 2565,
							"nodeType": "StructuredDocumentation",
							"src": "3010:41:13",
							"text": " @dev See {IERC20-balanceOf}."
						},
						"functionSelector": "70a08231",
						"id": 2578,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "balanceOf",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2569,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3109:8:13"
						},
						"parameters": {
							"id": 2568,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2567,
									"mutability": "mutable",
									"name": "account",
									"nodeType": "VariableDeclaration",
									"scope": 2578,
									"src": "3072:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2566,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3072:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3071:17:13"
						},
						"returnParameters": {
							"id": 2572,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2571,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2578,
									"src": "3127:7:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3127:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3126:9:13"
						},
						"scope": 2986,
						"src": "3053:116:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3013],
						"body": {
							"id": 2598,
							"nodeType": "Block",
							"src": "3437:65:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2590,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "3451:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2591,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3451:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2592,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2581,
												"src": "3465:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2593,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2583,
												"src": "3476:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2589,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2820,
											"src": "3441:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2594,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3441:42:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2595,
									"nodeType": "ExpressionStatement",
									"src": "3441:42:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3494:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2588,
									"id": 2597,
									"nodeType": "Return",
									"src": "3487:11:13"
								}
							]
						},
						"documentation": {
							"id": 2579,
							"nodeType": "StructuredDocumentation",
							"src": "3172:171:13",
							"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
						},
						"functionSelector": "a9059cbb",
						"id": 2599,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transfer",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2585,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3413:8:13"
						},
						"parameters": {
							"id": 2584,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2581,
									"mutability": "mutable",
									"name": "recipient",
									"nodeType": "VariableDeclaration",
									"scope": 2599,
									"src": "3363:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3363:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2583,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2599,
									"src": "3382:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2582,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3382:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3362:35:13"
						},
						"returnParameters": {
							"id": 2588,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2587,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2599,
									"src": "3431:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2586,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3431:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3430:6:13"
						},
						"scope": 2986,
						"src": "3345:157:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3023],
						"body": {
							"id": 2616,
							"nodeType": "Block",
							"src": "3646:42:13",
							"statements": [
								{
									"expression": {
										"baseExpression": {
											"baseExpression": {
												"id": 2610,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2504,
												"src": "3657:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 2612,
											"indexExpression": {
												"id": 2611,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2602,
												"src": "3669:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "3657:18:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2614,
										"indexExpression": {
											"id": 2613,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2604,
											"src": "3676:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "3657:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"functionReturnParameters": 2609,
									"id": 2615,
									"nodeType": "Return",
									"src": "3650:34:13"
								}
							]
						},
						"documentation": {
							"id": 2600,
							"nodeType": "StructuredDocumentation",
							"src": "3505:41:13",
							"text": " @dev See {IERC20-allowance}."
						},
						"functionSelector": "dd62ed3e",
						"id": 2617,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "allowance",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2606,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3619:8:13"
						},
						"parameters": {
							"id": 2605,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2602,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 2617,
									"src": "3567:13:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2601,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3567:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2604,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2617,
									"src": "3582:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2603,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3582:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3566:32:13"
						},
						"returnParameters": {
							"id": 2609,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2608,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2617,
									"src": "3637:7:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2607,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3637:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3636:9:13"
						},
						"scope": 2986,
						"src": "3548:140:13",
						"stateMutability": "view",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3033],
						"body": {
							"id": 2637,
							"nodeType": "Block",
							"src": "3891:62:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2629,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "3904:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2630,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3904:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2631,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2620,
												"src": "3918:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2632,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2622,
												"src": "3927:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2628,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "3895:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2633,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3895:39:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2634,
									"nodeType": "ExpressionStatement",
									"src": "3895:39:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3945:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2627,
									"id": 2636,
									"nodeType": "Return",
									"src": "3938:11:13"
								}
							]
						},
						"documentation": {
							"id": 2618,
							"nodeType": "StructuredDocumentation",
							"src": "3691:109:13",
							"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "095ea7b3",
						"id": 2638,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "approve",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2624,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "3867:8:13"
						},
						"parameters": {
							"id": 2623,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2620,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2638,
									"src": "3819:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2619,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3819:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2622,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2638,
									"src": "3836:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3836:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3818:33:13"
						},
						"returnParameters": {
							"id": 2627,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2626,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2638,
									"src": "3885:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2625,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3885:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3884:6:13"
						},
						"scope": 2986,
						"src": "3802:151:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"baseFunctions": [3045],
						"body": {
							"id": 2684,
							"nodeType": "Block",
							"src": "4499:269:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"id": 2652,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2641,
												"src": "4513:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2653,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2643,
												"src": "4521:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2654,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2645,
												"src": "4532:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2651,
											"name": "_transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2820,
											"src": "4503:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2655,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4503:36:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2656,
									"nodeType": "ExpressionStatement",
									"src": "4503:36:13"
								},
								{
									"assignments": [2658],
									"declarations": [
										{
											"constant": false,
											"id": 2658,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nodeType": "VariableDeclaration",
											"scope": 2684,
											"src": "4544:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2657,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4544:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2665,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 2659,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2504,
												"src": "4571:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 2661,
											"indexExpression": {
												"id": 2660,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2641,
												"src": "4583:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "4571:19:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2664,
										"indexExpression": {
											"arguments": [],
											"expression": {
												"argumentTypes": [],
												"id": 2662,
												"name": "_msgSender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 3075,
												"src": "4591:10:13",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
													"typeString": "function () view returns (address)"
												}
											},
											"id": 2663,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "4591:12:13",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "4571:33:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "4544:60:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2669,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2667,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2658,
													"src": "4616:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2668,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2645,
													"src": "4636:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "4616:26:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
												"id": 2670,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4644:42:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												},
												"value": "ERC20: transfer amount exceeds allowance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
													"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
												}
											],
											"id": 2666,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "4608:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2671,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4608:79:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2672,
									"nodeType": "ExpressionStatement",
									"src": "4608:79:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 2674,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2641,
												"src": "4700:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2675,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "4708:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2676,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "4708:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2679,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2677,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2658,
													"src": "4722:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 2678,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2645,
													"src": "4741:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "4722:25:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2673,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "4691:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2680,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4691:57:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2681,
									"nodeType": "ExpressionStatement",
									"src": "4691:57:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4760:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2650,
									"id": 2683,
									"nodeType": "Return",
									"src": "4753:11:13"
								}
							]
						},
						"documentation": {
							"id": 2639,
							"nodeType": "StructuredDocumentation",
							"src": "3956:420:13",
							"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
						},
						"functionSelector": "23b872dd",
						"id": 2685,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "transferFrom",
						"nodeType": "FunctionDefinition",
						"overrides": {
							"id": 2647,
							"nodeType": "OverrideSpecifier",
							"overrides": [],
							"src": "4475:8:13"
						},
						"parameters": {
							"id": 2646,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2641,
									"mutability": "mutable",
									"name": "sender",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4403:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2640,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4403:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2643,
									"mutability": "mutable",
									"name": "recipient",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4421:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2642,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4421:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2645,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4442:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2644,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4442:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4399:60:13"
						},
						"returnParameters": {
							"id": 2650,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2649,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2685,
									"src": "4493:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2648,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4493:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "4492:6:13"
						},
						"scope": 2986,
						"src": "4378:390:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2711,
							"nodeType": "Block",
							"src": "5218:103:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2696,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "5231:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2697,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "5231:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2698,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2688,
												"src": "5245:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2706,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2699,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "5254:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2702,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2700,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3075,
																"src": "5266:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5266:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5254:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2704,
													"indexExpression": {
														"id": 2703,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "5280:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5254:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "+",
												"rightExpression": {
													"id": 2705,
													"name": "addedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2690,
													"src": "5291:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "5254:47:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2695,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "5222:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2707,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5222:80:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2708,
									"nodeType": "ExpressionStatement",
									"src": "5222:80:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2709,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5313:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2694,
									"id": 2710,
									"nodeType": "Return",
									"src": "5306:11:13"
								}
							]
						},
						"documentation": {
							"id": 2686,
							"nodeType": "StructuredDocumentation",
							"src": "4771:351:13",
							"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
						},
						"functionSelector": "39509351",
						"id": 2712,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "increaseAllowance",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2691,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2688,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2712,
									"src": "5151:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2687,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5151:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2690,
									"mutability": "mutable",
									"name": "addedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2712,
									"src": "5168:18:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2689,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5168:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5150:37:13"
						},
						"returnParameters": {
							"id": 2694,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2693,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2712,
									"src": "5212:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2692,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5212:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5211:6:13"
						},
						"scope": 2986,
						"src": "5124:197:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2749,
							"nodeType": "Block",
							"src": "5862:245:13",
							"statements": [
								{
									"assignments": [2723],
									"declarations": [
										{
											"constant": false,
											"id": 2723,
											"mutability": "mutable",
											"name": "currentAllowance",
											"nodeType": "VariableDeclaration",
											"scope": 2749,
											"src": "5866:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2722,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5866:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2730,
									"initialValue": {
										"baseExpression": {
											"baseExpression": {
												"id": 2724,
												"name": "_allowances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2504,
												"src": "5893:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												}
											},
											"id": 2727,
											"indexExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2725,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "5905:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2726,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "5905:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "IndexAccess",
											"src": "5893:25:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2729,
										"indexExpression": {
											"id": 2728,
											"name": "spender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2715,
											"src": "5919:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "5893:34:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "5866:61:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2734,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2732,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2723,
													"src": "5939:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2733,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2717,
													"src": "5959:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "5939:35:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
												"id": 2735,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5976:39:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												},
												"value": "ERC20: decreased allowance below zero"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
													"typeString": "literal_string \"ERC20: decreased allowance below zero\""
												}
											],
											"id": 2731,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "5931:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2736,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5931:85:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2737,
									"nodeType": "ExpressionStatement",
									"src": "5931:85:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 2739,
													"name": "_msgSender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3075,
													"src": "6029:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 2740,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "6029:12:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2741,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2715,
												"src": "6043:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2744,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2742,
													"name": "currentAllowance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2723,
													"src": "6052:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"id": 2743,
													"name": "subtractedValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2717,
													"src": "6071:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "6052:34:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2738,
											"name": "_approve",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2974,
											"src": "6020:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2745,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6020:67:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2746,
									"nodeType": "ExpressionStatement",
									"src": "6020:67:13"
								},
								{
									"expression": {
										"hexValue": "74727565",
										"id": 2747,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6099:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"functionReturnParameters": 2721,
									"id": 2748,
									"nodeType": "Return",
									"src": "6092:11:13"
								}
							]
						},
						"documentation": {
							"id": 2713,
							"nodeType": "StructuredDocumentation",
							"src": "5324:437:13",
							"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
						},
						"functionSelector": "a457c2d7",
						"id": 2750,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "decreaseAllowance",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2718,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2715,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2750,
									"src": "5790:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2714,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5790:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2717,
									"mutability": "mutable",
									"name": "subtractedValue",
									"nodeType": "VariableDeclaration",
									"scope": 2750,
									"src": "5807:23:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5807:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5789:42:13"
						},
						"returnParameters": {
							"id": 2721,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2720,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 2750,
									"src": "5856:4:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2719,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5856:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5855:6:13"
						},
						"scope": 2986,
						"src": "5763:344:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					},
					{
						"body": {
							"id": 2819,
							"nodeType": "Block",
							"src": "6632:454:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2766,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2761,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2753,
													"src": "6644:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6662:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6654:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2762,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6654:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "6644:20:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
												"id": 2767,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6666:39:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												},
												"value": "ERC20: transfer from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
													"typeString": "literal_string \"ERC20: transfer from the zero address\""
												}
											],
											"id": 2760,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6636:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2768,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6636:70:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2769,
									"nodeType": "ExpressionStatement",
									"src": "6636:70:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2776,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2771,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2755,
													"src": "6718:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6739:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6731:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6731:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6731:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "6718:23:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
												"id": 2777,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6743:37:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												},
												"value": "ERC20: transfer to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
													"typeString": "literal_string \"ERC20: transfer to the zero address\""
												}
											],
											"id": 2770,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6710:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2778,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6710:71:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2779,
									"nodeType": "ExpressionStatement",
									"src": "6710:71:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 2781,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2753,
												"src": "6807:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2782,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2755,
												"src": "6815:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2783,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2757,
												"src": "6826:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2780,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2985,
											"src": "6786:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2784,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6786:47:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2785,
									"nodeType": "ExpressionStatement",
									"src": "6786:47:13"
								},
								{
									"assignments": [2787],
									"declarations": [
										{
											"constant": false,
											"id": 2787,
											"mutability": "mutable",
											"name": "senderBalance",
											"nodeType": "VariableDeclaration",
											"scope": 2819,
											"src": "6838:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6838:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2791,
									"initialValue": {
										"baseExpression": {
											"id": 2788,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2498,
											"src": "6862:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2790,
										"indexExpression": {
											"id": 2789,
											"name": "sender",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2753,
											"src": "6872:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "6862:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "6838:41:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2795,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2793,
													"name": "senderBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2787,
													"src": "6891:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2794,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2757,
													"src": "6908:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "6891:23:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
												"id": 2796,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6916:40:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												},
												"value": "ERC20: transfer amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
													"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
												}
											],
											"id": 2792,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6883:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2797,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6883:74:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2798,
									"nodeType": "ExpressionStatement",
									"src": "6883:74:13"
								},
								{
									"expression": {
										"id": 2805,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2799,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "6961:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2801,
											"indexExpression": {
												"id": 2800,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2753,
												"src": "6971:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "6961:17:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2804,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2802,
												"name": "senderBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2787,
												"src": "6981:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 2803,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2757,
												"src": "6997:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "6981:22:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6961:42:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2806,
									"nodeType": "ExpressionStatement",
									"src": "6961:42:13"
								},
								{
									"expression": {
										"id": 2811,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2807,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "7007:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2809,
											"indexExpression": {
												"id": 2808,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2755,
												"src": "7017:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "7007:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 2810,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2757,
											"src": "7031:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7007:30:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2812,
									"nodeType": "ExpressionStatement",
									"src": "7007:30:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 2814,
												"name": "sender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2753,
												"src": "7056:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2815,
												"name": "recipient",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2755,
												"src": "7064:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2816,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2757,
												"src": "7075:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2813,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3054,
											"src": "7047:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2817,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7047:35:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2818,
									"nodeType": "EmitStatement",
									"src": "7042:40:13"
								}
							]
						},
						"documentation": {
							"id": 2751,
							"nodeType": "StructuredDocumentation",
							"src": "6110:424:13",
							"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
						},
						"id": 2820,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_transfer",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2758,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2753,
									"mutability": "mutable",
									"name": "sender",
									"nodeType": "VariableDeclaration",
									"scope": 2820,
									"src": "6558:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2752,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6558:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2755,
									"mutability": "mutable",
									"name": "recipient",
									"nodeType": "VariableDeclaration",
									"scope": 2820,
									"src": "6576:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2754,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6576:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2757,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2820,
									"src": "6597:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2756,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6597:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "6554:60:13"
						},
						"returnParameters": {
							"id": 2759,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6632:0:13"
						},
						"scope": 2986,
						"src": "6536:550:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2866,
							"nodeType": "Block",
							"src": "7392:232:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2834,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2829,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2823,
													"src": "7404:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7423:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7415:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2830,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7415:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7415:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "7404:21:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
												"id": 2835,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7427:33:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												},
												"value": "ERC20: mint to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
													"typeString": "literal_string \"ERC20: mint to the zero address\""
												}
											],
											"id": 2828,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "7396:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2836,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7396:65:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2837,
									"nodeType": "ExpressionStatement",
									"src": "7396:65:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7495:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "7487:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2839,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7487:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2842,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "7487:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2843,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2823,
												"src": "7499:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2844,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2825,
												"src": "7508:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2838,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2985,
											"src": "7466:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2845,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7466:49:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2846,
									"nodeType": "ExpressionStatement",
									"src": "7466:49:13"
								},
								{
									"expression": {
										"id": 2849,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2847,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2506,
											"src": "7520:12:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 2848,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2825,
											"src": "7536:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7520:22:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2850,
									"nodeType": "ExpressionStatement",
									"src": "7520:22:13"
								},
								{
									"expression": {
										"id": 2855,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2851,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "7546:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2853,
											"indexExpression": {
												"id": 2852,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2823,
												"src": "7556:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "7546:18:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 2854,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2825,
											"src": "7568:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7546:28:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2856,
									"nodeType": "ExpressionStatement",
									"src": "7546:28:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7600:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "7592:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2858,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7592:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2861,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "7592:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2862,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2823,
												"src": "7604:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2863,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2825,
												"src": "7613:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2857,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3054,
											"src": "7583:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2864,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7583:37:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2865,
									"nodeType": "EmitStatement",
									"src": "7578:42:13"
								}
							]
						},
						"documentation": {
							"id": 2821,
							"nodeType": "StructuredDocumentation",
							"src": "7089:236:13",
							"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
						},
						"id": 2867,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_mint",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2826,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2823,
									"mutability": "mutable",
									"name": "account",
									"nodeType": "VariableDeclaration",
									"scope": 2867,
									"src": "7342:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2822,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7342:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2825,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2867,
									"src": "7359:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7359:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7341:33:13"
						},
						"returnParameters": {
							"id": 2827,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7392:0:13"
						},
						"scope": 2986,
						"src": "7327:297:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2928,
							"nodeType": "Block",
							"src": "7973:373:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2881,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2876,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2870,
													"src": "7985:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8004:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7996:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2877,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7996:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7996:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "7985:21:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
												"id": 2882,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8008:35:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												},
												"value": "ERC20: burn from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
													"typeString": "literal_string \"ERC20: burn from the zero address\""
												}
											],
											"id": 2875,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "7977:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2883,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7977:67:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2884,
									"nodeType": "ExpressionStatement",
									"src": "7977:67:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 2886,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2870,
												"src": "8070:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8087:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2888,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "8079:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2887,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8079:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2890,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "8079:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2891,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2872,
												"src": "8091:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2885,
											"name": "_beforeTokenTransfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2985,
											"src": "8049:20:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2892,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8049:49:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2893,
									"nodeType": "ExpressionStatement",
									"src": "8049:49:13"
								},
								{
									"assignments": [2895],
									"declarations": [
										{
											"constant": false,
											"id": 2895,
											"mutability": "mutable",
											"name": "accountBalance",
											"nodeType": "VariableDeclaration",
											"scope": 2928,
											"src": "8103:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2894,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8103:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 2899,
									"initialValue": {
										"baseExpression": {
											"id": 2896,
											"name": "_balances",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2498,
											"src": "8128:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											}
										},
										"id": 2898,
										"indexExpression": {
											"id": 2897,
											"name": "account",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2870,
											"src": "8138:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "8128:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "8103:43:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2903,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2901,
													"name": "accountBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2895,
													"src": "8158:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">=",
												"rightExpression": {
													"id": 2902,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2872,
													"src": "8176:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "8158:24:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
												"id": 2904,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8184:36:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												},
												"value": "ERC20: burn amount exceeds balance"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
													"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
												}
											],
											"id": 2900,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8150:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2905,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8150:71:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2906,
									"nodeType": "ExpressionStatement",
									"src": "8150:71:13"
								},
								{
									"expression": {
										"id": 2913,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 2907,
												"name": "_balances",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2498,
												"src": "8225:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2909,
											"indexExpression": {
												"id": 2908,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2870,
												"src": "8235:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "8225:18:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2912,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2910,
												"name": "accountBalance",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2895,
												"src": "8246:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 2911,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2872,
												"src": "8263:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "8246:23:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8225:44:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2914,
									"nodeType": "ExpressionStatement",
									"src": "8225:44:13"
								},
								{
									"expression": {
										"id": 2917,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 2915,
											"name": "_totalSupply",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2506,
											"src": "8273:12:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "-=",
										"rightHandSide": {
											"id": 2916,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2872,
											"src": "8289:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8273:22:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2918,
									"nodeType": "ExpressionStatement",
									"src": "8273:22:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 2920,
												"name": "account",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2870,
												"src": "8314:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"arguments": [
													{
														"hexValue": "30",
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8331:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "8323:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2921,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8323:7:13",
														"typeDescriptions": {}
													}
												},
												"id": 2924,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "8323:10:13",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2925,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2872,
												"src": "8335:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2919,
											"name": "Transfer",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3054,
											"src": "8305:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2926,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8305:37:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2927,
									"nodeType": "EmitStatement",
									"src": "8300:42:13"
								}
							]
						},
						"documentation": {
							"id": 2868,
							"nodeType": "StructuredDocumentation",
							"src": "7627:279:13",
							"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
						},
						"id": 2929,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_burn",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2873,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2870,
									"mutability": "mutable",
									"name": "account",
									"nodeType": "VariableDeclaration",
									"scope": 2929,
									"src": "7923:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2869,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7923:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2872,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2929,
									"src": "7940:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2871,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7940:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7922:33:13"
						},
						"returnParameters": {
							"id": 2874,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7973:0:13"
						},
						"scope": 2986,
						"src": "7908:438:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2973,
							"nodeType": "Block",
							"src": "8819:230:13",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2945,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2940,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2932,
													"src": "8831:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8848:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8840:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8840:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8840:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "8831:19:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
												"id": 2946,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8852:38:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												},
												"value": "ERC20: approve from the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
													"typeString": "literal_string \"ERC20: approve from the zero address\""
												}
											],
											"id": 2939,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8823:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2947,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8823:68:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2948,
									"nodeType": "ExpressionStatement",
									"src": "8823:68:13"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 2955,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 2950,
													"name": "spender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2934,
													"src": "8903:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8922:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8914:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8914:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8914:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "8903:21:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
												"id": 2956,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8926:36:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												},
												"value": "ERC20: approve to the zero address"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
													"typeString": "literal_string \"ERC20: approve to the zero address\""
												}
											],
											"id": 2949,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8895:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 2957,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8895:68:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2958,
									"nodeType": "ExpressionStatement",
									"src": "8895:68:13"
								},
								{
									"expression": {
										"id": 2965,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"baseExpression": {
													"id": 2959,
													"name": "_allowances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2504,
													"src": "8968:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
														"typeString": "mapping(address => mapping(address => uint256))"
													}
												},
												"id": 2962,
												"indexExpression": {
													"id": 2960,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2932,
													"src": "8980:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8968:18:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												}
											},
											"id": 2963,
											"indexExpression": {
												"id": 2961,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2934,
												"src": "8987:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "8968:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 2964,
											"name": "amount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2936,
											"src": "8998:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8968:36:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 2966,
									"nodeType": "ExpressionStatement",
									"src": "8968:36:13"
								},
								{
									"eventCall": {
										"arguments": [
											{
												"id": 2968,
												"name": "owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2932,
												"src": "9022:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2969,
												"name": "spender",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2934,
												"src": "9029:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 2970,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2936,
												"src": "9038:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 2967,
											"name": "Approval",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3063,
											"src": "9013:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
												"typeString": "function (address,address,uint256)"
											}
										},
										"id": 2971,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "9013:32:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 2972,
									"nodeType": "EmitStatement",
									"src": "9008:37:13"
								}
							]
						},
						"documentation": {
							"id": 2930,
							"nodeType": "StructuredDocumentation",
							"src": "8349:376:13",
							"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
						},
						"id": 2974,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_approve",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2937,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2932,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "8748:13:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2931,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8748:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2934,
									"mutability": "mutable",
									"name": "spender",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "8765:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2933,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8765:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2936,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "8784:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2935,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8784:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8744:57:13"
						},
						"returnParameters": {
							"id": 2938,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8819:0:13"
						},
						"scope": 2986,
						"src": "8727:322:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 2984,
							"nodeType": "Block",
							"src": "9689:2:13",
							"statements": []
						},
						"documentation": {
							"id": 2975,
							"nodeType": "StructuredDocumentation",
							"src": "9052:537:13",
							"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
						},
						"id": 2985,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_beforeTokenTransfer",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 2982,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 2977,
									"mutability": "mutable",
									"name": "from",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "9624:12:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2976,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9624:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2979,
									"mutability": "mutable",
									"name": "to",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "9640:10:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2978,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9640:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2981,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "9654:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2980,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9654:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "9620:51:13"
						},
						"returnParameters": {
							"id": 2983,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "9689:0:13"
						},
						"scope": 2986,
						"src": "9591:100:13",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "internal"
					}
				],
				"scope": 2987,
				"src": "1279:8414:13"
			}
		],
		"src": "33:9661:13"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.1+commit.df193b15.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-04-14T16:42:39.736Z",
	"networkType": "ethereum",
	"devdoc": {
		"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"constructor": {
				"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"decreaseAllowance(address,uint256)": {
				"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
			},
			"increaseAllowance(address,uint256)": {
				"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
