{
	"contractName": "StakingFactoryLP",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_rewardsToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_startTime",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "level",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "levels",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "allowedForXCoins",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "rewardPercentTimes100",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "lockedDuration",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "allowedReward",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "alloted",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "stakingContractAddress",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "stakingRewardsInfoByStakingToken",
			"outputs": [
				{
					"internalType": "address",
					"name": "stakingRewards",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "rewardAmount",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "stakingTokens",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [],
			"name": "startTime",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function",
			"constant": true
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "stakingToken",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "rewardAmount",
					"type": "uint256"
				}
			],
			"name": "deploy",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenValue",
					"type": "uint256"
				}
			],
			"name": "updateTokens",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "updateLevelCheck",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowedForXCoins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPercentTimes100\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alloted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewardsInfoByStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingRewards\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateLevelCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"}],\"name\":\"updateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/LpStakingContract.sol\":\"StakingFactoryLP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/LpStakingContract.sol\":{\"keccak256\":\"0x90c86cd259faa3aabbc7b0881dfdc8376f22a09821fa2e029b43e2bb5089c4d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a571850c5ea59409250f3413624b958cd05a470a9de03a21b9b01606ed87fc27\",\"dweb:/ipfs/QmcuZdSwUvfDfasacQSvPNRNimnNc5ReFL58fENhZfxfJd\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
	"bytecode": "0x60806040523480156200001157600080fd5b50604051620034ea380380620034ea833981810160405281019062000037919062000217565b6000620000496200014f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055506001600381905550620001476200015760201b60201c565b5050620002ca565b600033905090565b6040518060a0016040528069152d02c7e14af680000081526020016127108152602001601e815260200169152d02c7e14af680000081526020016000815250600760006001815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506001600381905550565b600081519050620001fa8162000296565b92915050565b6000815190506200021181620002b0565b92915050565b600080604083850312156200022b57600080fd5b60006200023b85828601620001e9565b92505060206200024e8582860162000200565b9150509250929050565b600062000265826200026c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002a18162000258565b8114620002ad57600080fd5b50565b620002bb816200028c565b8114620002c757600080fd5b50565b61321080620002da6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c45760003560e01c806378e97925116200007b57806378e9792514620001a65780637bdecea114620001c85780638da5cb5b14620001e8578063b2596a67146200020a578063f12ca6981462000244578063f2fde38b146200025057620000c4565b8063344e5e3414620000c95780633535f48b14620000ff5780634956eaf014620001215780636cf8caf814620001415780636fd5ae151462000178578063715018a6146200019a575b600080fd5b620000e76004803603810190620000e1919062000c71565b62000270565b604051620000f6919062000d5b565b60405180910390f35b62000109620002b0565b60405162000118919062000d5b565b60405180910390f35b6200013f600480360381019062000139919062000c04565b620002d6565b005b6200015f600480360381019062000159919062000bd8565b62000685565b6040516200016f92919062000df2565b60405180910390f35b62000182620006c9565b60405162000191919062000ea7565b60405180910390f35b620001a4620006cf565b005b620001b062000810565b604051620001bf919062000ea7565b60405180910390f35b620001e66004803603810190620001e0919062000c71565b62000816565b005b620001f262000945565b60405162000201919062000d5b565b60405180910390f35b62000228600480360381019062000222919062000c71565b6200096e565b6040516200023b95949392919062000ec4565b60405180910390f35b6200024e620009a4565b005b6200026e600480360381019062000268919062000bd8565b620009ca565b005b600481815481106200028157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620002e062000b7d565b73ffffffffffffffffffffffffffffffffffffffff166200030062000945565b73ffffffffffffffffffffffffffffffffffffffff161462000359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003509062000e85565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000432576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004299062000e63565b60405180910390fd5b30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051620004659062000b85565b620004739392919062000d78565b604051809103906000f08015801562000490573d6000803e3d6000fd5b508160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401620005bd9392919062000db5565b602060405180830381600087803b158015620005d857600080fd5b505af1158015620005ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000613919062000c45565b508181600101819055506004839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60035481565b620006d962000b7d565b73ffffffffffffffffffffffffffffffffffffffff16620006f962000945565b73ffffffffffffffffffffffffffffffffffffffff161462000752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007499062000e85565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60025481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620008a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008a09062000e41565b60405180910390fd5b806007600060035481526020019081526020016000206004016000828254620008d3919062000f32565b9250508190555060026003541415620008ec5762000942565b600760006003548152602001908152602001600020600001546007600060035481526020019081526020016000206004015410620009415760016003600082825462000939919062000f32565b925050819055505b5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60076020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b62015180600254620009b7919062000f32565b421115620009c85760026003819055505b565b620009d462000b7d565b73ffffffffffffffffffffffffffffffffffffffff16620009f462000945565b73ffffffffffffffffffffffffffffffffffffffff161462000a4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a449062000e85565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000ac0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ab79062000e1f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b61206e806200116d83390190565b60008135905062000ba4816200111e565b92915050565b60008151905062000bbb8162001138565b92915050565b60008135905062000bd28162001152565b92915050565b60006020828403121562000beb57600080fd5b600062000bfb8482850162000b93565b91505092915050565b6000806040838503121562000c1857600080fd5b600062000c288582860162000b93565b925050602062000c3b8582860162000bc1565b9150509250929050565b60006020828403121562000c5857600080fd5b600062000c688482850162000baa565b91505092915050565b60006020828403121562000c8457600080fd5b600062000c948482850162000bc1565b91505092915050565b62000ca88162000f8f565b82525050565b600062000cbd60268362000f21565b915062000cca8262001008565b604082019050919050565b600062000ce460248362000f21565b915062000cf18262001057565b604082019050919050565b600062000d0b602f8362000f21565b915062000d1882620010a6565b604082019050919050565b600062000d3260208362000f21565b915062000d3f82620010f5565b602082019050919050565b62000d558162000fcf565b82525050565b600060208201905062000d72600083018462000c9d565b92915050565b600060608201905062000d8f600083018662000c9d565b62000d9e602083018562000c9d565b62000dad604083018462000c9d565b949350505050565b600060608201905062000dcc600083018662000c9d565b62000ddb602083018562000c9d565b62000dea604083018462000d4a565b949350505050565b600060408201905062000e09600083018562000c9d565b62000e18602083018462000d4a565b9392505050565b6000602082019050818103600083015262000e3a8162000cae565b9050919050565b6000602082019050818103600083015262000e5c8162000cd5565b9050919050565b6000602082019050818103600083015262000e7e8162000cfc565b9050919050565b6000602082019050818103600083015262000ea08162000d23565b9050919050565b600060208201905062000ebe600083018462000d4a565b92915050565b600060a08201905062000edb600083018862000d4a565b62000eea602083018762000d4a565b62000ef9604083018662000d4a565b62000f08606083018562000d4a565b62000f17608083018462000d4a565b9695505050505050565b600082825260208201905092915050565b600062000f3f8262000fcf565b915062000f4c8362000fcf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000f845762000f8362000fd9565b5b828201905092915050565b600062000f9c8262000faf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53656e6465722068617320746f2062652061207374616b696e6720636f6e747260008201527f6163742e00000000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e6752657761726473466163746f72793a3a6465706c6f793a206160008201527f6c7265616479206465706c6f7965640000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b620011298162000f8f565b81146200113557600080fd5b50565b620011438162000fa3565b81146200114f57600080fd5b50565b6200115d8162000fcf565b81146200116957600080fd5b5056fe6080604052620151806001553480156200001857600080fd5b506040516200206e3803806200206e83398181016040528101906200003e9190620001d9565b600062000050620001ba60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200027d565b600033905090565b600081519050620001d38162000263565b92915050565b600080600060608486031215620001ef57600080fd5b6000620001ff86828701620001c2565b93505060206200021286828701620001c2565b92505060406200022586828701620001c2565b9150509250925092565b60006200023c8262000243565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200026e816200022f565b81146200027a57600080fd5b50565b611de1806200028d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063725cedd31161005b578063725cedd3146100c45780638da5cb5b146100e2578063b6b55f2514610100578063f2fde38b1461011c5761007d565b80632e1a7d4d146100825780635521e9bf1461009e578063715018a6146100ba575b600080fd5b61009c600480360381019061009791906116c9565b610138565b005b6100b860048036038101906100b391906116c9565b610551565b005b6100c2610a91565b005b6100cc610bcb565b6040516100d99190611a61565b60405180910390f35b6100ea610e83565b6040516100f79190611974565b60405180910390f35b61011a600480360381019061011591906116c9565b610eac565b005b61013660048036038101906101319190611677565b6112f8565b005b60018114801561018b57506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414155b1561050c576000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a6760016040518263ffffffff1660e01b81526004016101f491906119c6565b60a06040518083038186803b15801561020c57600080fd5b505afa158015610220573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610244919061171b565b945094509450945094506001548361025c9190611b30565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c457600080fd5b505afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc91906116f2565b6103069190611aa9565b421115610506576000612710600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154866103609190611b30565b61036a9190611aff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546103b79190611aa9565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016104189392919061198f565b602060405180830381600087803b15801561043257600080fd5b505af1158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a91906116a0565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018190555050505050505061054e565b50505050505b600061054d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610544906119e1565b60405180910390fd5b5b50565b600081141561055f57600080fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146108c3576000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a6760016040518263ffffffff1660e01b815260040161060d91906119c6565b60a06040518083038186803b15801561062557600080fd5b505afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061171b565b94509450945094509450600154836106759190611b30565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071591906116f2565b61071f9190611aa9565b4211156108bd576000612710600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154866107799190611b30565b6107839190611aff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546107d09190611aa9565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090160008282546108249190611aa9565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550505b50505050505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154811115610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f90611a21565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016109a79392919061198f565b602060405180830381600087803b1580156109c157600080fd5b505af11580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f991906116a0565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154610a489190611b8a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009018190555050565b610a996114a1565b73ffffffffffffffffffffffffffffffffffffffff16610ab7610e83565b73ffffffffffffffffffffffffffffffffffffffff1614610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490611a41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610bd36115b7565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101a00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152505090506000816040015114610e7c576000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a6760016040518263ffffffff1660e01b8152600401610d3691906119c6565b60a06040518083038186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d86919061171b565b9450945094509450945060015483610d9e9190611b30565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0657600080fd5b505afa158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e91906116f2565b610e489190611aa9565b421115610e7657612710866040015185610e629190611b30565b610e6c9190611aff565b8660c00181815250505b50505050505b8091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f12ca6986040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f1657600080fd5b505af1158015610f2a573d6000803e3d6000fd5b50505050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9957600080fd5b505afa158015610fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd191906116f2565b905060018114156112ac57610fe683826114a9565b8093508194505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161104d9392919061198f565b602060405180830381600087803b15801561106757600080fd5b505af115801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f91906116a0565b506103e8836110ae9190611b30565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546110ff9190611aa9565b925050819055506103e8836111149190611b30565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160008282546111659190611aa9565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bdecea16103e8856111b89190611b30565b6040518263ffffffff1660e01b81526004016111d49190611a7d565b600060405180830381600087803b1580156111ee57600080fd5b505af1158015611202573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906116f2565b90508192505b42600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0181905550505050565b6113006114a1565b73ffffffffffffffffffffffffffffffffffffffff1661131e610e83565b73ffffffffffffffffffffffffffffffffffffffff1614611374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136b90611a41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90611a01565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080600080600080600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a678a6040518263ffffffff1660e01b81526004016115109190611a7d565b60a06040518083038186803b15801561152857600080fd5b505afa15801561153c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611560919061171b565b94509450945094509450848a826115779190611aa9565b106115a45780856115889190611b8a565b8a6115939190611b8a565b955080856115a19190611b8a565b99505b8986975097505050505050509250929050565b604051806101a0016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008135905061163281611d66565b92915050565b60008151905061164781611d7d565b92915050565b60008135905061165c81611d94565b92915050565b60008151905061167181611d94565b92915050565b60006020828403121561168957600080fd5b600061169784828501611623565b91505092915050565b6000602082840312156116b257600080fd5b60006116c084828501611638565b91505092915050565b6000602082840312156116db57600080fd5b60006116e98482850161164d565b91505092915050565b60006020828403121561170457600080fd5b600061171284828501611662565b91505092915050565b600080600080600060a0868803121561173357600080fd5b600061174188828901611662565b955050602061175288828901611662565b945050604061176388828901611662565b935050606061177488828901611662565b925050608061178588828901611662565b9150509295509295909350565b61179b81611bbe565b82525050565b6117aa81611bd0565b82525050565b6117b981611c06565b82525050565b60006117cc600f83611a98565b91506117d782611c76565b602082019050919050565b60006117ef602683611a98565b91506117fa82611c9f565b604082019050919050565b6000611812602283611a98565b915061181d82611cee565b604082019050919050565b6000611835602083611a98565b915061184082611d3d565b602082019050919050565b6101a08201600082015161186260008501826117a1565b50602082015161187560208501826117a1565b5060408201516118886040850182611956565b50606082015161189b6060850182611956565b5060808201516118ae6080850182611956565b5060a08201516118c160a0850182611956565b5060c08201516118d460c0850182611956565b5060e08201516118e760e0850182611956565b506101008201516118fc610100850182611956565b50610120820151611911610120850182611956565b50610140820151611926610140850182611956565b5061016082015161193b610160850182611956565b50610180820151611950610180850182611956565b50505050565b61195f81611bfc565b82525050565b61196e81611bfc565b82525050565b60006020820190506119896000830184611792565b92915050565b60006060820190506119a46000830186611792565b6119b16020830185611792565b6119be6040830184611965565b949350505050565b60006020820190506119db60008301846117b0565b92915050565b600060208201905081810360008301526119fa816117bf565b9050919050565b60006020820190508181036000830152611a1a816117e2565b9050919050565b60006020820190508181036000830152611a3a81611805565b9050919050565b60006020820190508181036000830152611a5a81611828565b9050919050565b60006101a082019050611a77600083018461184b565b92915050565b6000602082019050611a926000830184611965565b92915050565b600082825260208201905092915050565b6000611ab482611bfc565b9150611abf83611bfc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af457611af3611c18565b5b828201905092915050565b6000611b0a82611bfc565b9150611b1583611bfc565b925082611b2557611b24611c47565b5b828204905092915050565b6000611b3b82611bfc565b9150611b4683611bfc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b7f57611b7e611c18565b5b828202905092915050565b6000611b9582611bfc565b9150611ba083611bfc565b925082821015611bb357611bb2611c18565b5b828203905092915050565b6000611bc982611bdc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611c1182611bfc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f43616e6e6f742077697468647261770000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f52657175657374656420616d6f756e74206d6f7265207468616e20726577617260008201527f642e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611d6f81611bbe565b8114611d7a57600080fd5b50565b611d8681611bd0565b8114611d9157600080fd5b50565b611d9d81611bfc565b8114611da857600080fd5b5056fea2646970667358221220c60a0aba4f582b44a8bbc6e20b3f80465a690d38ed082cc23e38ea9cb6f0959864736f6c63430008010033a26469706673582212204a9ee2cdca84e687794e76d37452201ab0802099bbfdcc4c017c97314bd4ccc064736f6c63430008010033",
	"deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000c45760003560e01c806378e97925116200007b57806378e9792514620001a65780637bdecea114620001c85780638da5cb5b14620001e8578063b2596a67146200020a578063f12ca6981462000244578063f2fde38b146200025057620000c4565b8063344e5e3414620000c95780633535f48b14620000ff5780634956eaf014620001215780636cf8caf814620001415780636fd5ae151462000178578063715018a6146200019a575b600080fd5b620000e76004803603810190620000e1919062000c71565b62000270565b604051620000f6919062000d5b565b60405180910390f35b62000109620002b0565b60405162000118919062000d5b565b60405180910390f35b6200013f600480360381019062000139919062000c04565b620002d6565b005b6200015f600480360381019062000159919062000bd8565b62000685565b6040516200016f92919062000df2565b60405180910390f35b62000182620006c9565b60405162000191919062000ea7565b60405180910390f35b620001a4620006cf565b005b620001b062000810565b604051620001bf919062000ea7565b60405180910390f35b620001e66004803603810190620001e0919062000c71565b62000816565b005b620001f262000945565b60405162000201919062000d5b565b60405180910390f35b62000228600480360381019062000222919062000c71565b6200096e565b6040516200023b95949392919062000ec4565b60405180910390f35b6200024e620009a4565b005b6200026e600480360381019062000268919062000bd8565b620009ca565b005b600481815481106200028157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620002e062000b7d565b73ffffffffffffffffffffffffffffffffffffffff166200030062000945565b73ffffffffffffffffffffffffffffffffffffffff161462000359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003509062000e85565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000432576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004299062000e63565b60405180910390fd5b30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051620004659062000b85565b620004739392919062000d78565b604051809103906000f08015801562000490573d6000803e3d6000fd5b508160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401620005bd9392919062000db5565b602060405180830381600087803b158015620005d857600080fd5b505af1158015620005ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000613919062000c45565b508181600101819055506004839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60035481565b620006d962000b7d565b73ffffffffffffffffffffffffffffffffffffffff16620006f962000945565b73ffffffffffffffffffffffffffffffffffffffff161462000752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007499062000e85565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60025481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620008a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008a09062000e41565b60405180910390fd5b806007600060035481526020019081526020016000206004016000828254620008d3919062000f32565b9250508190555060026003541415620008ec5762000942565b600760006003548152602001908152602001600020600001546007600060035481526020019081526020016000206004015410620009415760016003600082825462000939919062000f32565b925050819055505b5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60076020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b62015180600254620009b7919062000f32565b421115620009c85760026003819055505b565b620009d462000b7d565b73ffffffffffffffffffffffffffffffffffffffff16620009f462000945565b73ffffffffffffffffffffffffffffffffffffffff161462000a4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a449062000e85565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000ac0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ab79062000e1f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b61206e806200116d83390190565b60008135905062000ba4816200111e565b92915050565b60008151905062000bbb8162001138565b92915050565b60008135905062000bd28162001152565b92915050565b60006020828403121562000beb57600080fd5b600062000bfb8482850162000b93565b91505092915050565b6000806040838503121562000c1857600080fd5b600062000c288582860162000b93565b925050602062000c3b8582860162000bc1565b9150509250929050565b60006020828403121562000c5857600080fd5b600062000c688482850162000baa565b91505092915050565b60006020828403121562000c8457600080fd5b600062000c948482850162000bc1565b91505092915050565b62000ca88162000f8f565b82525050565b600062000cbd60268362000f21565b915062000cca8262001008565b604082019050919050565b600062000ce460248362000f21565b915062000cf18262001057565b604082019050919050565b600062000d0b602f8362000f21565b915062000d1882620010a6565b604082019050919050565b600062000d3260208362000f21565b915062000d3f82620010f5565b602082019050919050565b62000d558162000fcf565b82525050565b600060208201905062000d72600083018462000c9d565b92915050565b600060608201905062000d8f600083018662000c9d565b62000d9e602083018562000c9d565b62000dad604083018462000c9d565b949350505050565b600060608201905062000dcc600083018662000c9d565b62000ddb602083018562000c9d565b62000dea604083018462000d4a565b949350505050565b600060408201905062000e09600083018562000c9d565b62000e18602083018462000d4a565b9392505050565b6000602082019050818103600083015262000e3a8162000cae565b9050919050565b6000602082019050818103600083015262000e5c8162000cd5565b9050919050565b6000602082019050818103600083015262000e7e8162000cfc565b9050919050565b6000602082019050818103600083015262000ea08162000d23565b9050919050565b600060208201905062000ebe600083018462000d4a565b92915050565b600060a08201905062000edb600083018862000d4a565b62000eea602083018762000d4a565b62000ef9604083018662000d4a565b62000f08606083018562000d4a565b62000f17608083018462000d4a565b9695505050505050565b600082825260208201905092915050565b600062000f3f8262000fcf565b915062000f4c8362000fcf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000f845762000f8362000fd9565b5b828201905092915050565b600062000f9c8262000faf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53656e6465722068617320746f2062652061207374616b696e6720636f6e747260008201527f6163742e00000000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e6752657761726473466163746f72793a3a6465706c6f793a206160008201527f6c7265616479206465706c6f7965640000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b620011298162000f8f565b81146200113557600080fd5b50565b620011438162000fa3565b81146200114f57600080fd5b50565b6200115d8162000fcf565b81146200116957600080fd5b5056fe6080604052620151806001553480156200001857600080fd5b506040516200206e3803806200206e83398181016040528101906200003e9190620001d9565b600062000050620001ba60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200027d565b600033905090565b600081519050620001d38162000263565b92915050565b600080600060608486031215620001ef57600080fd5b6000620001ff86828701620001c2565b93505060206200021286828701620001c2565b92505060406200022586828701620001c2565b9150509250925092565b60006200023c8262000243565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200026e816200022f565b81146200027a57600080fd5b50565b611de1806200028d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063725cedd31161005b578063725cedd3146100c45780638da5cb5b146100e2578063b6b55f2514610100578063f2fde38b1461011c5761007d565b80632e1a7d4d146100825780635521e9bf1461009e578063715018a6146100ba575b600080fd5b61009c600480360381019061009791906116c9565b610138565b005b6100b860048036038101906100b391906116c9565b610551565b005b6100c2610a91565b005b6100cc610bcb565b6040516100d99190611a61565b60405180910390f35b6100ea610e83565b6040516100f79190611974565b60405180910390f35b61011a600480360381019061011591906116c9565b610eac565b005b61013660048036038101906101319190611677565b6112f8565b005b60018114801561018b57506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414155b1561050c576000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a6760016040518263ffffffff1660e01b81526004016101f491906119c6565b60a06040518083038186803b15801561020c57600080fd5b505afa158015610220573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610244919061171b565b945094509450945094506001548361025c9190611b30565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c457600080fd5b505afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc91906116f2565b6103069190611aa9565b421115610506576000612710600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154866103609190611b30565b61036a9190611aff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546103b79190611aa9565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016104189392919061198f565b602060405180830381600087803b15801561043257600080fd5b505af1158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a91906116a0565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018190555050505050505061054e565b50505050505b600061054d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610544906119e1565b60405180910390fd5b5b50565b600081141561055f57600080fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146108c3576000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a6760016040518263ffffffff1660e01b815260040161060d91906119c6565b60a06040518083038186803b15801561062557600080fd5b505afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061171b565b94509450945094509450600154836106759190611b30565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071591906116f2565b61071f9190611aa9565b4211156108bd576000612710600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154866107799190611b30565b6107839190611aff565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546107d09190611aa9565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090160008282546108249190611aa9565b925050819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550505b50505050505b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154811115610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f90611a21565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016109a79392919061198f565b602060405180830381600087803b1580156109c157600080fd5b505af11580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f991906116a0565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090154610a489190611b8a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009018190555050565b610a996114a1565b73ffffffffffffffffffffffffffffffffffffffff16610ab7610e83565b73ffffffffffffffffffffffffffffffffffffffff1614610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490611a41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610bd36115b7565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101a00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152505090506000816040015114610e7c576000806000806000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a6760016040518263ffffffff1660e01b8152600401610d3691906119c6565b60a06040518083038186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d86919061171b565b9450945094509450945060015483610d9e9190611b30565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378e979256040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0657600080fd5b505afa158015610e1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3e91906116f2565b610e489190611aa9565b421115610e7657612710866040015185610e629190611b30565b610e6c9190611aff565b8660c00181815250505b50505050505b8091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f12ca6986040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f1657600080fd5b505af1158015610f2a573d6000803e3d6000fd5b50505050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9957600080fd5b505afa158015610fad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd191906116f2565b905060018114156112ac57610fe683826114a9565b8093508194505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161104d9392919061198f565b602060405180830381600087803b15801561106757600080fd5b505af115801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f91906116a0565b506103e8836110ae9190611b30565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546110ff9190611aa9565b925050819055506103e8836111149190611b30565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160008282546111659190611aa9565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bdecea16103e8856111b89190611b30565b6040518263ffffffff1660e01b81526004016111d49190611a7d565b600060405180830381600087803b1580156111ee57600080fd5b505af1158015611202573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fd5ae156040518163ffffffff1660e01b815260040160206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906116f2565b90508192505b42600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b0181905550505050565b6113006114a1565b73ffffffffffffffffffffffffffffffffffffffff1661131e610e83565b73ffffffffffffffffffffffffffffffffffffffff1614611374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136b90611a41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90611a01565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080600080600080600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2596a678a6040518263ffffffff1660e01b81526004016115109190611a7d565b60a06040518083038186803b15801561152857600080fd5b505afa15801561153c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611560919061171b565b94509450945094509450848a826115779190611aa9565b106115a45780856115889190611b8a565b8a6115939190611b8a565b955080856115a19190611b8a565b99505b8986975097505050505050509250929050565b604051806101a0016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008135905061163281611d66565b92915050565b60008151905061164781611d7d565b92915050565b60008135905061165c81611d94565b92915050565b60008151905061167181611d94565b92915050565b60006020828403121561168957600080fd5b600061169784828501611623565b91505092915050565b6000602082840312156116b257600080fd5b60006116c084828501611638565b91505092915050565b6000602082840312156116db57600080fd5b60006116e98482850161164d565b91505092915050565b60006020828403121561170457600080fd5b600061171284828501611662565b91505092915050565b600080600080600060a0868803121561173357600080fd5b600061174188828901611662565b955050602061175288828901611662565b945050604061176388828901611662565b935050606061177488828901611662565b925050608061178588828901611662565b9150509295509295909350565b61179b81611bbe565b82525050565b6117aa81611bd0565b82525050565b6117b981611c06565b82525050565b60006117cc600f83611a98565b91506117d782611c76565b602082019050919050565b60006117ef602683611a98565b91506117fa82611c9f565b604082019050919050565b6000611812602283611a98565b915061181d82611cee565b604082019050919050565b6000611835602083611a98565b915061184082611d3d565b602082019050919050565b6101a08201600082015161186260008501826117a1565b50602082015161187560208501826117a1565b5060408201516118886040850182611956565b50606082015161189b6060850182611956565b5060808201516118ae6080850182611956565b5060a08201516118c160a0850182611956565b5060c08201516118d460c0850182611956565b5060e08201516118e760e0850182611956565b506101008201516118fc610100850182611956565b50610120820151611911610120850182611956565b50610140820151611926610140850182611956565b5061016082015161193b610160850182611956565b50610180820151611950610180850182611956565b50505050565b61195f81611bfc565b82525050565b61196e81611bfc565b82525050565b60006020820190506119896000830184611792565b92915050565b60006060820190506119a46000830186611792565b6119b16020830185611792565b6119be6040830184611965565b949350505050565b60006020820190506119db60008301846117b0565b92915050565b600060208201905081810360008301526119fa816117bf565b9050919050565b60006020820190508181036000830152611a1a816117e2565b9050919050565b60006020820190508181036000830152611a3a81611805565b9050919050565b60006020820190508181036000830152611a5a81611828565b9050919050565b60006101a082019050611a77600083018461184b565b92915050565b6000602082019050611a926000830184611965565b92915050565b600082825260208201905092915050565b6000611ab482611bfc565b9150611abf83611bfc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611af457611af3611c18565b5b828201905092915050565b6000611b0a82611bfc565b9150611b1583611bfc565b925082611b2557611b24611c47565b5b828204905092915050565b6000611b3b82611bfc565b9150611b4683611bfc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b7f57611b7e611c18565b5b828202905092915050565b6000611b9582611bfc565b9150611ba083611bfc565b925082821015611bb357611bb2611c18565b5b828203905092915050565b6000611bc982611bdc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611c1182611bfc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f43616e6e6f742077697468647261770000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f52657175657374656420616d6f756e74206d6f7265207468616e20726577617260008201527f642e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611d6f81611bbe565b8114611d7a57600080fd5b50565b611d8681611bd0565b8114611d9157600080fd5b50565b611d9d81611bfc565b8114611da857600080fd5b5056fea2646970667358221220c60a0aba4f582b44a8bbc6e20b3f80465a690d38ed082cc23e38ea9cb6f0959864736f6c63430008010033a26469706673582212204a9ee2cdca84e687794e76d37452201ab0802099bbfdcc4c017c97314bd4ccc064736f6c63430008010033",
	"immutableReferences": {},
	"generatedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:1321:15",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "70:80:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "80:22:15",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "95:6:15"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "89:5:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "89:13:15"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "80:5:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "138:5:15"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "111:26:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "111:33:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "111:33:15"
								}
							]
						},
						"name": "abi_decode_t_address_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "48:6:15",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "56:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "64:5:15",
								"type": ""
							}
						],
						"src": "7:143:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "219:80:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "229:22:15",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "244:6:15"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "238:5:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "238:13:15"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "229:5:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "287:5:15"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "260:26:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "260:33:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "260:33:15"
								}
							]
						},
						"name": "abi_decode_t_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "197:6:15",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "205:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "213:5:15",
								"type": ""
							}
						],
						"src": "156:143:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "399:346:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "445:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "454:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "457:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "447:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "447:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "447:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "420:7:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "429:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "416:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "416:23:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "441:2:15",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "412:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "412:32:15"
									},
									"nodeType": "YulIf",
									"src": "409:2:15"
								},
								{
									"nodeType": "YulBlock",
									"src": "471:128:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "486:15:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "500:1:15",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "490:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "515:74:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "561:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "572:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "557:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "557:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "581:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "525:31:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "525:64:15"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "515:6:15"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "609:129:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "624:16:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "638:2:15",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "628:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "654:74:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "700:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "711:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "696:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "696:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "720:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "664:31:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "664:64:15"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "654:6:15"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "361:9:15",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "372:7:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "384:6:15",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "392:6:15",
								"type": ""
							}
						],
						"src": "305:440:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "796:51:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "806:35:15",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "835:5:15"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "817:17:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "817:24:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "806:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "778:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "788:7:15",
								"type": ""
							}
						],
						"src": "751:96:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "898:81:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "908:65:15",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "923:5:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "930:42:15",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "919:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "919:54:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "908:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "880:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "890:7:15",
								"type": ""
							}
						],
						"src": "853:126:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1030:32:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1040:16:15",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "1051:5:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "1040:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1012:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "1022:7:15",
								"type": ""
							}
						],
						"src": "985:77:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1111:79:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1168:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1177:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1180:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1170:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "1170:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1170:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1134:5:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1159:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "1141:17:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1141:24:15"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "1131:2:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1131:35:15"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "1124:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "1124:43:15"
									},
									"nodeType": "YulIf",
									"src": "1121:2:15"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1104:5:15",
								"type": ""
							}
						],
						"src": "1068:122:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1239:79:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1296:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1305:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1308:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1298:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "1298:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1298:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1262:5:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1287:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1269:17:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1269:24:15"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "1259:2:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1259:35:15"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "1252:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "1252:43:15"
									},
									"nodeType": "YulIf",
									"src": "1249:2:15"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1232:5:15",
								"type": ""
							}
						],
						"src": "1196:122:15"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 15,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"deployedGeneratedSources": [
		{
			"ast": {
				"nodeType": "YulBlock",
				"src": "0:9817:15",
				"statements": [
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "59:87:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "69:29:15",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "91:6:15"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "78:12:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "78:20:15"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "69:5:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "134:5:15"
											}
										],
										"functionName": {
											"name": "validator_revert_t_address",
											"nodeType": "YulIdentifier",
											"src": "107:26:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "107:33:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "107:33:15"
								}
							]
						},
						"name": "abi_decode_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "37:6:15",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "45:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "53:5:15",
								"type": ""
							}
						],
						"src": "7:139:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "212:77:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "222:22:15",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "237:6:15"
											}
										],
										"functionName": {
											"name": "mload",
											"nodeType": "YulIdentifier",
											"src": "231:5:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "231:13:15"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "222:5:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "277:5:15"
											}
										],
										"functionName": {
											"name": "validator_revert_t_bool",
											"nodeType": "YulIdentifier",
											"src": "253:23:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "253:30:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "253:30:15"
								}
							]
						},
						"name": "abi_decode_t_bool_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "190:6:15",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "198:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "206:5:15",
								"type": ""
							}
						],
						"src": "152:137:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "347:87:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "357:29:15",
									"value": {
										"arguments": [
											{
												"name": "offset",
												"nodeType": "YulIdentifier",
												"src": "379:6:15"
											}
										],
										"functionName": {
											"name": "calldataload",
											"nodeType": "YulIdentifier",
											"src": "366:12:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "366:20:15"
									},
									"variableNames": [
										{
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "357:5:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "422:5:15"
											}
										],
										"functionName": {
											"name": "validator_revert_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "395:26:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "395:33:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "395:33:15"
								}
							]
						},
						"name": "abi_decode_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "offset",
								"nodeType": "YulTypedName",
								"src": "325:6:15",
								"type": ""
							},
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "333:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "341:5:15",
								"type": ""
							}
						],
						"src": "295:139:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "506:196:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "552:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "561:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "564:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "554:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "554:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "554:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "527:7:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "536:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "523:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "523:23:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "548:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "519:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "519:32:15"
									},
									"nodeType": "YulIf",
									"src": "516:2:15"
								},
								{
									"nodeType": "YulBlock",
									"src": "578:117:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "593:15:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "607:1:15",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "597:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "622:63:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "657:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "668:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "653:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "653:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "677:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "632:20:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "632:53:15"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "622:6:15"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "476:9:15",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "487:7:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "499:6:15",
								"type": ""
							}
						],
						"src": "440:262:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "791:324:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "837:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "846:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "849:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "839:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "839:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "839:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "812:7:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "821:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "808:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "808:23:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "833:2:15",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "804:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "804:32:15"
									},
									"nodeType": "YulIf",
									"src": "801:2:15"
								},
								{
									"nodeType": "YulBlock",
									"src": "863:117:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "878:15:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "892:1:15",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "882:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "907:63:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "942:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "953:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "938:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "938:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "962:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address",
													"nodeType": "YulIdentifier",
													"src": "917:20:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "917:53:15"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "907:6:15"
												}
											]
										}
									]
								},
								{
									"nodeType": "YulBlock",
									"src": "990:118:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1005:16:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1019:2:15",
												"type": "",
												"value": "32"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1009:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1035:63:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1070:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1081:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1066:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1066:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1090:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1045:20:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1045:53:15"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "1035:6:15"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_addresst_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "753:9:15",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "764:7:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "776:6:15",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "784:6:15",
								"type": ""
							}
						],
						"src": "708:407:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1195:204:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1241:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1250:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1253:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1243:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "1243:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1243:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1216:7:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1225:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1212:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1212:23:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1237:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1208:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "1208:32:15"
									},
									"nodeType": "YulIf",
									"src": "1205:2:15"
								},
								{
									"nodeType": "YulBlock",
									"src": "1267:125:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1282:15:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1296:1:15",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1286:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1311:71:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1354:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1365:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1350:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1350:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1374:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_bool_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1321:28:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1321:61:15"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1311:6:15"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_bool_fromMemory",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1165:9:15",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1176:7:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1188:6:15",
								"type": ""
							}
						],
						"src": "1121:278:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1471:196:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "1517:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1526:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1529:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "1519:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "1519:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "1519:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1492:7:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1501:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "1488:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1488:23:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1513:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "slt",
											"nodeType": "YulIdentifier",
											"src": "1484:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "1484:32:15"
									},
									"nodeType": "YulIf",
									"src": "1481:2:15"
								},
								{
									"nodeType": "YulBlock",
									"src": "1543:117:15",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1558:15:15",
											"value": {
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "1572:1:15",
												"type": "",
												"value": "0"
											},
											"variables": [
												{
													"name": "offset",
													"nodeType": "YulTypedName",
													"src": "1562:6:15",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1587:63:15",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1622:9:15"
															},
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1633:6:15"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1618:3:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "1618:22:15"
													},
													{
														"name": "dataEnd",
														"nodeType": "YulIdentifier",
														"src": "1642:7:15"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1597:20:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1597:53:15"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1587:6:15"
												}
											]
										}
									]
								}
							]
						},
						"name": "abi_decode_tuple_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "1441:9:15",
								"type": ""
							},
							{
								"name": "dataEnd",
								"nodeType": "YulTypedName",
								"src": "1452:7:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "1464:6:15",
								"type": ""
							}
						],
						"src": "1405:262:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1738:53:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "1755:3:15"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1778:5:15"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "1760:17:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "1760:24:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "1748:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "1748:37:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "1748:37:15"
								}
							]
						},
						"name": "abi_encode_t_address_to_t_address_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "1726:5:15",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1733:3:15",
								"type": ""
							}
						],
						"src": "1673:118:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "1943:220:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "1953:74:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2019:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2024:2:15",
												"type": "",
												"value": "38"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "1960:58:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "1960:67:15"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "1953:3:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2125:3:15"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
											"nodeType": "YulIdentifier",
											"src": "2036:88:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2036:93:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2036:93:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2138:19:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2149:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2154:2:15",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2145:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2145:12:15"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2138:3:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "1931:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "1939:3:15",
								"type": ""
							}
						],
						"src": "1797:366:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2315:220:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2325:74:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2391:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2396:2:15",
												"type": "",
												"value": "36"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2332:58:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2332:67:15"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2325:3:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2497:3:15"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2",
											"nodeType": "YulIdentifier",
											"src": "2408:88:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2408:93:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2408:93:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2510:19:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2521:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2526:2:15",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2517:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2517:12:15"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2510:3:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2303:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2311:3:15",
								"type": ""
							}
						],
						"src": "2169:366:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "2687:220:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "2697:74:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2763:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2768:2:15",
												"type": "",
												"value": "47"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "2704:58:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2704:67:15"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "2697:3:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2869:3:15"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
											"nodeType": "YulIdentifier",
											"src": "2780:88:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2780:93:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "2780:93:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "2882:19:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "2893:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "2898:2:15",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "2889:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "2889:12:15"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "2882:3:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "2675:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "2683:3:15",
								"type": ""
							}
						],
						"src": "2541:366:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3059:220:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3069:74:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3135:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3140:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3076:58:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3076:67:15"
									},
									"variableNames": [
										{
											"name": "pos",
											"nodeType": "YulIdentifier",
											"src": "3069:3:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3241:3:15"
											}
										],
										"functionName": {
											"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
											"nodeType": "YulIdentifier",
											"src": "3152:88:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3152:93:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3152:93:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "3254:19:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3265:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3270:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3261:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3261:12:15"
									},
									"variableNames": [
										{
											"name": "end",
											"nodeType": "YulIdentifier",
											"src": "3254:3:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3047:3:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "end",
								"nodeType": "YulTypedName",
								"src": "3055:3:15",
								"type": ""
							}
						],
						"src": "2913:366:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3350:53:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "3367:3:15"
											},
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3390:5:15"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3372:17:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "3372:24:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "3360:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3360:37:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3360:37:15"
								}
							]
						},
						"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "3338:5:15",
								"type": ""
							},
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "3345:3:15",
								"type": ""
							}
						],
						"src": "3285:118:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3507:124:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3517:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3529:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3540:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3525:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3525:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3517:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3597:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3610:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3621:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3606:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "3606:17:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3553:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3553:71:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3553:71:15"
								}
							]
						},
						"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3479:9:15",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3491:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3502:4:15",
								"type": ""
							}
						],
						"src": "3409:222:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "3791:288:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "3801:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "3813:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "3824:2:15",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "3809:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3809:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "3801:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3881:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3894:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3905:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3890:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "3890:17:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3837:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3837:71:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3837:71:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "3962:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3975:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3986:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3971:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "3971:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "3918:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "3918:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "3918:72:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "4044:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4057:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4068:2:15",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4053:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "4053:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4000:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4000:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4000:72:15"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "3747:9:15",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "3759:6:15",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "3767:6:15",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "3775:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "3786:4:15",
								"type": ""
							}
						],
						"src": "3637:442:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4239:288:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4249:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4261:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4272:2:15",
												"type": "",
												"value": "96"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4257:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4257:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4249:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4329:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4342:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4353:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4338:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "4338:17:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4285:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4285:71:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4285:71:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "4410:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4423:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4434:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4419:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "4419:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4366:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4366:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4366:72:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "4492:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4505:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4516:2:15",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4501:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "4501:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4448:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4448:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4448:72:15"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4195:9:15",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "4207:6:15",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "4215:6:15",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "4223:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4234:4:15",
								"type": ""
							}
						],
						"src": "4085:442:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "4659:206:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "4669:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "4681:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "4692:2:15",
												"type": "",
												"value": "64"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "4677:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4677:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "4669:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4749:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4762:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4773:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4758:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "4758:17:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_address_to_t_address_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4705:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4705:71:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4705:71:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "4830:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4843:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4854:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4839:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "4839:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "4786:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "4786:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "4786:72:15"
								}
							]
						},
						"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "4623:9:15",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "4635:6:15",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "4643:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "4654:4:15",
								"type": ""
							}
						],
						"src": "4533:332:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5042:248:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5052:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5064:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5075:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5060:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5060:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5052:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5099:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5110:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5095:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "5095:17:15"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "5118:4:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5124:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5114:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "5114:20:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5088:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5088:47:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5088:47:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5144:139:15",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5278:4:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5152:124:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5152:131:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5144:4:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5022:9:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5037:4:15",
								"type": ""
							}
						],
						"src": "4871:419:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5467:248:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5477:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5489:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5500:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5485:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5485:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5477:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5524:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5535:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5520:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "5520:17:15"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "5543:4:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5549:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5539:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "5539:20:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5513:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5513:47:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5513:47:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5569:139:15",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5703:4:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "5577:124:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5577:131:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5569:4:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5447:9:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5462:4:15",
								"type": ""
							}
						],
						"src": "5296:419:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "5892:248:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "5902:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "5914:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "5925:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "5910:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5910:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5902:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5949:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5960:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "5945:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "5945:17:15"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "5968:4:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "5974:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "5964:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "5964:20:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "5938:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "5938:47:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "5938:47:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "5994:139:15",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6128:4:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6002:124:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "6002:131:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "5994:4:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "5872:9:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "5887:4:15",
								"type": ""
							}
						],
						"src": "5721:419:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6317:248:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6327:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "6339:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6350:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6335:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "6335:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6327:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6374:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6385:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6370:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "6370:17:15"
											},
											{
												"arguments": [
													{
														"name": "tail",
														"nodeType": "YulIdentifier",
														"src": "6393:4:15"
													},
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6399:9:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "6389:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "6389:20:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "6363:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "6363:47:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6363:47:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "6419:139:15",
									"value": {
										"arguments": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6553:4:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6427:124:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "6427:131:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6419:4:15"
										}
									]
								}
							]
						},
						"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "6297:9:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "6312:4:15",
								"type": ""
							}
						],
						"src": "6146:419:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "6669:124:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "6679:26:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "6691:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "6702:2:15",
												"type": "",
												"value": "32"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "6687:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "6687:18:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "6679:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "6759:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "6772:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6783:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "6768:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "6768:17:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "6715:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "6715:71:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "6715:71:15"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "6641:9:15",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "6653:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "6664:4:15",
								"type": ""
							}
						],
						"src": "6571:222:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7009:454:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "7019:27:15",
									"value": {
										"arguments": [
											{
												"name": "headStart",
												"nodeType": "YulIdentifier",
												"src": "7031:9:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "7042:3:15",
												"type": "",
												"value": "160"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "7027:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7027:19:15"
									},
									"variableNames": [
										{
											"name": "tail",
											"nodeType": "YulIdentifier",
											"src": "7019:4:15"
										}
									]
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "7100:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7113:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7124:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7109:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "7109:17:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7056:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7056:71:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7056:71:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "7181:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7194:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7205:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7190:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "7190:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7137:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7137:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7137:72:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "7263:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7276:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7287:2:15",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7272:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "7272:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7219:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7219:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7219:72:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value3",
												"nodeType": "YulIdentifier",
												"src": "7345:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7358:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7369:2:15",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7354:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "7354:18:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7301:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7301:72:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7301:72:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"name": "value4",
												"nodeType": "YulIdentifier",
												"src": "7427:6:15"
											},
											{
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "7440:9:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7451:3:15",
														"type": "",
														"value": "128"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "7436:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "7436:19:15"
											}
										],
										"functionName": {
											"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
											"nodeType": "YulIdentifier",
											"src": "7383:43:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7383:73:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7383:73:15"
								}
							]
						},
						"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "headStart",
								"nodeType": "YulTypedName",
								"src": "6949:9:15",
								"type": ""
							},
							{
								"name": "value4",
								"nodeType": "YulTypedName",
								"src": "6961:6:15",
								"type": ""
							},
							{
								"name": "value3",
								"nodeType": "YulTypedName",
								"src": "6969:6:15",
								"type": ""
							},
							{
								"name": "value2",
								"nodeType": "YulTypedName",
								"src": "6977:6:15",
								"type": ""
							},
							{
								"name": "value1",
								"nodeType": "YulTypedName",
								"src": "6985:6:15",
								"type": ""
							},
							{
								"name": "value0",
								"nodeType": "YulTypedName",
								"src": "6993:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "tail",
								"nodeType": "YulTypedName",
								"src": "7004:4:15",
								"type": ""
							}
						],
						"src": "6799:664:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7565:73:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "7582:3:15"
											},
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "7587:6:15"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "7575:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7575:19:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "7575:19:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "7603:29:15",
									"value": {
										"arguments": [
											{
												"name": "pos",
												"nodeType": "YulIdentifier",
												"src": "7622:3:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "7627:4:15",
												"type": "",
												"value": "0x20"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "7618:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7618:14:15"
									},
									"variableNames": [
										{
											"name": "updated_pos",
											"nodeType": "YulIdentifier",
											"src": "7603:11:15"
										}
									]
								}
							]
						},
						"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "pos",
								"nodeType": "YulTypedName",
								"src": "7537:3:15",
								"type": ""
							},
							{
								"name": "length",
								"nodeType": "YulTypedName",
								"src": "7542:6:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "updated_pos",
								"nodeType": "YulTypedName",
								"src": "7553:11:15",
								"type": ""
							}
						],
						"src": "7469:169:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "7688:261:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "7698:25:15",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "7721:1:15"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "7703:17:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7703:20:15"
									},
									"variableNames": [
										{
											"name": "x",
											"nodeType": "YulIdentifier",
											"src": "7698:1:15"
										}
									]
								},
								{
									"nodeType": "YulAssignment",
									"src": "7732:25:15",
									"value": {
										"arguments": [
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "7755:1:15"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint256",
											"nodeType": "YulIdentifier",
											"src": "7737:17:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7737:20:15"
									},
									"variableNames": [
										{
											"name": "y",
											"nodeType": "YulIdentifier",
											"src": "7732:1:15"
										}
									]
								},
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "7895:22:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"functionName": {
														"name": "panic_error_0x11",
														"nodeType": "YulIdentifier",
														"src": "7897:16:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "7897:18:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "7897:18:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "7816:1:15"
											},
											{
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7823:66:15",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "7891:1:15"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "7819:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "7819:74:15"
											}
										],
										"functionName": {
											"name": "gt",
											"nodeType": "YulIdentifier",
											"src": "7813:2:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7813:81:15"
									},
									"nodeType": "YulIf",
									"src": "7810:2:15"
								},
								{
									"nodeType": "YulAssignment",
									"src": "7927:16:15",
									"value": {
										"arguments": [
											{
												"name": "x",
												"nodeType": "YulIdentifier",
												"src": "7938:1:15"
											},
											{
												"name": "y",
												"nodeType": "YulIdentifier",
												"src": "7941:1:15"
											}
										],
										"functionName": {
											"name": "add",
											"nodeType": "YulIdentifier",
											"src": "7934:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "7934:9:15"
									},
									"variableNames": [
										{
											"name": "sum",
											"nodeType": "YulIdentifier",
											"src": "7927:3:15"
										}
									]
								}
							]
						},
						"name": "checked_add_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "x",
								"nodeType": "YulTypedName",
								"src": "7675:1:15",
								"type": ""
							},
							{
								"name": "y",
								"nodeType": "YulTypedName",
								"src": "7678:1:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "sum",
								"nodeType": "YulTypedName",
								"src": "7684:3:15",
								"type": ""
							}
						],
						"src": "7644:305:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8000:51:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8010:35:15",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "8039:5:15"
											}
										],
										"functionName": {
											"name": "cleanup_t_uint160",
											"nodeType": "YulIdentifier",
											"src": "8021:17:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8021:24:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "8010:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "7982:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "7992:7:15",
								"type": ""
							}
						],
						"src": "7955:96:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8099:48:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8109:32:15",
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "8134:5:15"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "8127:6:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "8127:13:15"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "8120:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8120:21:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "8109:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "8081:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "8091:7:15",
								"type": ""
							}
						],
						"src": "8057:90:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8198:81:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8208:65:15",
									"value": {
										"arguments": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "8223:5:15"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8230:42:15",
												"type": "",
												"value": "0xffffffffffffffffffffffffffffffffffffffff"
											}
										],
										"functionName": {
											"name": "and",
											"nodeType": "YulIdentifier",
											"src": "8219:3:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8219:54:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "8208:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint160",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "8180:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "8190:7:15",
								"type": ""
							}
						],
						"src": "8153:126:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8330:32:15",
							"statements": [
								{
									"nodeType": "YulAssignment",
									"src": "8340:16:15",
									"value": {
										"name": "value",
										"nodeType": "YulIdentifier",
										"src": "8351:5:15"
									},
									"variableNames": [
										{
											"name": "cleaned",
											"nodeType": "YulIdentifier",
											"src": "8340:7:15"
										}
									]
								}
							]
						},
						"name": "cleanup_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "8312:5:15",
								"type": ""
							}
						],
						"returnVariables": [
							{
								"name": "cleaned",
								"nodeType": "YulTypedName",
								"src": "8322:7:15",
								"type": ""
							}
						],
						"src": "8285:77:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8396:152:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8413:1:15",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8416:77:15",
												"type": "",
												"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8406:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8406:88:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8406:88:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8510:1:15",
												"type": "",
												"value": "4"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8513:4:15",
												"type": "",
												"value": "0x11"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8503:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8503:15:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8503:15:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8534:1:15",
												"type": "",
												"value": "0"
											},
											{
												"kind": "number",
												"nodeType": "YulLiteral",
												"src": "8537:4:15",
												"type": "",
												"value": "0x24"
											}
										],
										"functionName": {
											"name": "revert",
											"nodeType": "YulIdentifier",
											"src": "8527:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8527:15:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8527:15:15"
								}
							]
						},
						"name": "panic_error_0x11",
						"nodeType": "YulFunctionDefinition",
						"src": "8368:180:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8660:119:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "8682:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8690:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8678:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "8678:14:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "8694:34:15",
												"type": "",
												"value": "Ownable: new owner is the zero a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8671:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8671:58:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8671:58:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "8750:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8758:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8746:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "8746:15:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "8763:8:15",
												"type": "",
												"value": "ddress"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8739:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8739:33:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8739:33:15"
								}
							]
						},
						"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "8652:6:15",
								"type": ""
							}
						],
						"src": "8554:225:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "8891:117:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "8913:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8921:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8909:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "8909:14:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "8925:34:15",
												"type": "",
												"value": "Sender has to be a staking contr"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8902:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8902:58:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8902:58:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "8981:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8989:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8977:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "8977:15:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "8994:6:15",
												"type": "",
												"value": "act."
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "8970:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "8970:31:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "8970:31:15"
								}
							]
						},
						"name": "store_literal_in_memory_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "8883:6:15",
								"type": ""
							}
						],
						"src": "8785:223:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9120:128:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "9142:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9150:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "9138:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "9138:14:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "9154:34:15",
												"type": "",
												"value": "StakingRewardsFactory::deploy: a"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "9131:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "9131:58:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "9131:58:15"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "9210:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9218:2:15",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "9206:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "9206:15:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "9223:17:15",
												"type": "",
												"value": "lready deployed"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "9199:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "9199:42:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "9199:42:15"
								}
							]
						},
						"name": "store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "9112:6:15",
								"type": ""
							}
						],
						"src": "9014:234:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9360:76:15",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "9382:6:15"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "9390:1:15",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "9378:3:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "9378:14:15"
											},
											{
												"kind": "string",
												"nodeType": "YulLiteral",
												"src": "9394:34:15",
												"type": "",
												"value": "Ownable: caller is not the owner"
											}
										],
										"functionName": {
											"name": "mstore",
											"nodeType": "YulIdentifier",
											"src": "9371:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "9371:58:15"
									},
									"nodeType": "YulExpressionStatement",
									"src": "9371:58:15"
								}
							]
						},
						"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "memPtr",
								"nodeType": "YulTypedName",
								"src": "9352:6:15",
								"type": ""
							}
						],
						"src": "9254:182:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9485:79:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "9542:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9551:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9554:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "9544:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "9544:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "9544:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "9508:5:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9533:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "9515:17:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "9515:24:15"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "9505:2:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "9505:35:15"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "9498:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "9498:43:15"
									},
									"nodeType": "YulIf",
									"src": "9495:2:15"
								}
							]
						},
						"name": "validator_revert_t_address",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "9478:5:15",
								"type": ""
							}
						],
						"src": "9442:122:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9610:76:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "9664:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9673:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9676:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "9666:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "9666:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "9666:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "9633:5:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9655:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "9640:14:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "9640:21:15"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "9630:2:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "9630:32:15"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "9623:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "9623:40:15"
									},
									"nodeType": "YulIf",
									"src": "9620:2:15"
								}
							]
						},
						"name": "validator_revert_t_bool",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "9603:5:15",
								"type": ""
							}
						],
						"src": "9570:116:15"
					},
					{
						"body": {
							"nodeType": "YulBlock",
							"src": "9735:79:15",
							"statements": [
								{
									"body": {
										"nodeType": "YulBlock",
										"src": "9792:16:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9801:1:15",
															"type": "",
															"value": "0"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9804:1:15",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "revert",
														"nodeType": "YulIdentifier",
														"src": "9794:6:15"
													},
													"nodeType": "YulFunctionCall",
													"src": "9794:12:15"
												},
												"nodeType": "YulExpressionStatement",
												"src": "9794:12:15"
											}
										]
									},
									"condition": {
										"arguments": [
											{
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "9758:5:15"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9783:5:15"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "9765:17:15"
														},
														"nodeType": "YulFunctionCall",
														"src": "9765:24:15"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "9755:2:15"
												},
												"nodeType": "YulFunctionCall",
												"src": "9755:35:15"
											}
										],
										"functionName": {
											"name": "iszero",
											"nodeType": "YulIdentifier",
											"src": "9748:6:15"
										},
										"nodeType": "YulFunctionCall",
										"src": "9748:43:15"
									},
									"nodeType": "YulIf",
									"src": "9745:2:15"
								}
							]
						},
						"name": "validator_revert_t_uint256",
						"nodeType": "YulFunctionDefinition",
						"parameters": [
							{
								"name": "value",
								"nodeType": "YulTypedName",
								"src": "9728:5:15",
								"type": ""
							}
						],
						"src": "9692:122:15"
					}
				]
			},
			"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender has to be a staking contr\")\n\n        mstore(add(memPtr, 32), \"act.\")\n\n    }\n\n    function store_literal_in_memory_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"StakingRewardsFactory::deploy: a\")\n\n        mstore(add(memPtr, 32), \"lready deployed\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
			"id": 15,
			"language": "Yul",
			"name": "#utility.yul"
		}
	],
	"sourceMap": "6762:2340:0:-:0;;;7363:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:11;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;7444:13:0;7422:12;;:36;;;;;;;;;;;;;;;;;;7474:10;7462:9;:22;;;;7496:1;7488:5;:9;;;;7501:14;:12;;;:14;;:::i;:::-;7363:156;;6762:2340;;586:96:14;639:7;665:10;658:17;;586:96;:::o;8295:247:0:-;8417:51;;;;;;;;8427:12;8417:51;;;;8441:5;8417:51;;;;8448:2;8417:51;;;;8452:12;8417:51;;;;8466:1;8417:51;;;8405:6;:9;8412:1;8405:9;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8537:1;8529:5;:9;;;;8295:247::o;7:143:15:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:440::-;;;441:2;429:9;420:7;416:23;412:32;409:2;;;457:1;454;447:12;409:2;500:1;525:64;581:7;572:6;561:9;557:22;525:64;:::i;:::-;515:74;;471:128;638:2;664:64;720:7;711:6;700:9;696:22;664:64;:::i;:::-;654:74;;609:129;399:346;;;;;:::o;751:96::-;;817:24;835:5;817:24;:::i;:::-;806:35;;796:51;;;:::o;853:126::-;;930:42;923:5;919:54;908:65;;898:81;;;:::o;985:77::-;;1051:5;1040:16;;1030:32;;;:::o;1068:122::-;1141:24;1159:5;1141:24;:::i;:::-;1134:5;1131:35;1121:2;;1180:1;1177;1170:12;1121:2;1111:79;:::o;1196:122::-;1269:24;1287:5;1269:24;:::i;:::-;1262:5;1259:35;1249:2;;1308:1;1305;1298:12;1249:2;1239:79;:::o;6762:2340:0:-;;;;;;;",
	"deployedSourceMap": "6762:2340:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6874:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7160:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7568:643;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7234:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6851:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:11;;;:::i;:::-;;6824:24:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8668:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1068:85:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7316:43:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;8895:205;;;:::i;:::-;;1994:240:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6874:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7160:37::-;;;;;;;;;;;;;:::o;7568:643::-;1291:12:11;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7649:31:0::1;7683:32;:46;7716:12;7683:46;;;;;;;;;;;;;;;7649:80;;7772:1;7741:33;;:4;:19;;;;;;;;;;;;:33;;;7733:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;7883:4;7898:12;;;;;;;;;;;7913;7861:65;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7831:4;:19;;;:96;;;;;;;;;;;;;;;;;;7957:4;:19;;;;;;;;;;;;7932:22;;:44;;;;;;;;;;;;;;;;;;8063:12;;;;;;;;;;;:25;;;8089:10;8101:4;:19;;;;;;;;;;;;8122:12;8063:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8159:12;8139:4;:17;;:32;;;;8175:13;8194:12;8175:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:1:11;7568:643:0::0;;:::o;7234:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6851:20::-;;;;:::o;1700:145:11:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;6824:24:0:-;;;;:::o;8668:224::-;8593:22;;;;;;;;;;;8579:36;;:10;:36;;;8571:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;8759:10:::1;8734:6;:13;8741:5;;8734:13;;;;;;;;;;;:21;;;:35;;;;;;;:::i;:::-;;;;;;;;8786:1;8777:5;;:10;8773:32;;;8794:7;;8773:32;8837:6;:13;8844:5;;8837:13;;;;;;;;;;;:30;;;8812:6;:13;8819:5;;8812:13;;;;;;;;;;;:21;;;:55;8808:81;;8883:1;8874:5;;:10;;;;;;;:::i;:::-;;;;;;;;8808:81;8660:1;8668:224:::0;:::o;1068:85:11:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;7316:43:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8895:205::-;9064:12;9052:9;;:24;;;;:::i;:::-;9034:15;:42;9030:67;;;9091:1;9083:5;:9;;;;9030:67;8895:205::o;1994:240:11:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:14:-;639:7;665:10;658:17;;586:96;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:15:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;;;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:278::-;;1237:2;1225:9;1216:7;1212:23;1208:32;1205:2;;;1253:1;1250;1243:12;1205:2;1296:1;1321:61;1374:7;1365:6;1354:9;1350:22;1321:61;:::i;:::-;1311:71;;1267:125;1195:204;;;;:::o;1405:262::-;;1513:2;1501:9;1492:7;1488:23;1484:32;1481:2;;;1529:1;1526;1519:12;1481:2;1572:1;1597:53;1642:7;1633:6;1622:9;1618:22;1597:53;:::i;:::-;1587:63;;1543:117;1471:196;;;;:::o;1673:118::-;1760:24;1778:5;1760:24;:::i;:::-;1755:3;1748:37;1738:53;;:::o;1797:366::-;;1960:67;2024:2;2019:3;1960:67;:::i;:::-;1953:74;;2036:93;2125:3;2036:93;:::i;:::-;2154:2;2149:3;2145:12;2138:19;;1943:220;;;:::o;2169:366::-;;2332:67;2396:2;2391:3;2332:67;:::i;:::-;2325:74;;2408:93;2497:3;2408:93;:::i;:::-;2526:2;2521:3;2517:12;2510:19;;2315:220;;;:::o;2541:366::-;;2704:67;2768:2;2763:3;2704:67;:::i;:::-;2697:74;;2780:93;2869:3;2780:93;:::i;:::-;2898:2;2893:3;2889:12;2882:19;;2687:220;;;:::o;2913:366::-;;3076:67;3140:2;3135:3;3076:67;:::i;:::-;3069:74;;3152:93;3241:3;3152:93;:::i;:::-;3270:2;3265:3;3261:12;3254:19;;3059:220;;;:::o;3285:118::-;3372:24;3390:5;3372:24;:::i;:::-;3367:3;3360:37;3350:53;;:::o;3409:222::-;;3540:2;3529:9;3525:18;3517:26;;3553:71;3621:1;3610:9;3606:17;3597:6;3553:71;:::i;:::-;3507:124;;;;:::o;3637:442::-;;3824:2;3813:9;3809:18;3801:26;;3837:71;3905:1;3894:9;3890:17;3881:6;3837:71;:::i;:::-;3918:72;3986:2;3975:9;3971:18;3962:6;3918:72;:::i;:::-;4000;4068:2;4057:9;4053:18;4044:6;4000:72;:::i;:::-;3791:288;;;;;;:::o;4085:442::-;;4272:2;4261:9;4257:18;4249:26;;4285:71;4353:1;4342:9;4338:17;4329:6;4285:71;:::i;:::-;4366:72;4434:2;4423:9;4419:18;4410:6;4366:72;:::i;:::-;4448;4516:2;4505:9;4501:18;4492:6;4448:72;:::i;:::-;4239:288;;;;;;:::o;4533:332::-;;4692:2;4681:9;4677:18;4669:26;;4705:71;4773:1;4762:9;4758:17;4749:6;4705:71;:::i;:::-;4786:72;4854:2;4843:9;4839:18;4830:6;4786:72;:::i;:::-;4659:206;;;;;:::o;4871:419::-;;5075:2;5064:9;5060:18;5052:26;;5124:9;5118:4;5114:20;5110:1;5099:9;5095:17;5088:47;5152:131;5278:4;5152:131;:::i;:::-;5144:139;;5042:248;;;:::o;5296:419::-;;5500:2;5489:9;5485:18;5477:26;;5549:9;5543:4;5539:20;5535:1;5524:9;5520:17;5513:47;5577:131;5703:4;5577:131;:::i;:::-;5569:139;;5467:248;;;:::o;5721:419::-;;5925:2;5914:9;5910:18;5902:26;;5974:9;5968:4;5964:20;5960:1;5949:9;5945:17;5938:47;6002:131;6128:4;6002:131;:::i;:::-;5994:139;;5892:248;;;:::o;6146:419::-;;6350:2;6339:9;6335:18;6327:26;;6399:9;6393:4;6389:20;6385:1;6374:9;6370:17;6363:47;6427:131;6553:4;6427:131;:::i;:::-;6419:139;;6317:248;;;:::o;6571:222::-;;6702:2;6691:9;6687:18;6679:26;;6715:71;6783:1;6772:9;6768:17;6759:6;6715:71;:::i;:::-;6669:124;;;;:::o;6799:664::-;;7042:3;7031:9;7027:19;7019:27;;7056:71;7124:1;7113:9;7109:17;7100:6;7056:71;:::i;:::-;7137:72;7205:2;7194:9;7190:18;7181:6;7137:72;:::i;:::-;7219;7287:2;7276:9;7272:18;7263:6;7219:72;:::i;:::-;7301;7369:2;7358:9;7354:18;7345:6;7301:72;:::i;:::-;7383:73;7451:3;7440:9;7436:19;7427:6;7383:73;:::i;:::-;7009:454;;;;;;;;:::o;7469:169::-;;7587:6;7582:3;7575:19;7627:4;7622:3;7618:14;7603:29;;7565:73;;;;:::o;7644:305::-;;7703:20;7721:1;7703:20;:::i;:::-;7698:25;;7737:20;7755:1;7737:20;:::i;:::-;7732:25;;7891:1;7823:66;7819:74;7816:1;7813:81;7810:2;;;7897:18;;:::i;:::-;7810:2;7941:1;7938;7934:9;7927:16;;7688:261;;;;:::o;7955:96::-;;8021:24;8039:5;8021:24;:::i;:::-;8010:35;;8000:51;;;:::o;8057:90::-;;8134:5;8127:13;8120:21;8109:32;;8099:48;;;:::o;8153:126::-;;8230:42;8223:5;8219:54;8208:65;;8198:81;;;:::o;8285:77::-;;8351:5;8340:16;;8330:32;;;:::o;8368:180::-;8416:77;8413:1;8406:88;8513:4;8510:1;8503:15;8537:4;8534:1;8527:15;8554:225;8694:34;8690:1;8682:6;8678:14;8671:58;8763:8;8758:2;8750:6;8746:15;8739:33;8660:119;:::o;8785:223::-;8925:34;8921:1;8913:6;8909:14;8902:58;8994:6;8989:2;8981:6;8977:15;8970:31;8891:117;:::o;9014:234::-;9154:34;9150:1;9142:6;9138:14;9131:58;9223:17;9218:2;9210:6;9206:15;9199:42;9120:128;:::o;9254:182::-;9394:34;9390:1;9382:6;9378:14;9371:58;9360:76;:::o;9442:122::-;9515:24;9533:5;9515:24;:::i;:::-;9508:5;9505:35;9495:2;;9554:1;9551;9544:12;9495:2;9485:79;:::o;9570:116::-;9640:21;9655:5;9640:21;:::i;:::-;9633:5;9630:32;9620:2;;9676:1;9673;9666:12;9620:2;9610:76;:::o;9692:122::-;9765:24;9783:5;9765:24;:::i;:::-;9758:5;9755:35;9745:2;;9804:1;9801;9794:12;9745:2;9735:79;:::o",
	"source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\n/**\nThis is a Staking contract created for every token.\n */\ncontract StakingLP is Ownable {\n\tuint256 oneDay = 24 * 60 * 60;\n\n\tStakingFactoryLP factory; // Contract which is creating this one.\n\n\tIERC20 rewardsToken; // Reward Token\n\n\tIERC20 stakingToken; // Staking Token\n\n\t/**\n\tUser Data\n\t */\n\tstruct UserData {\n\t\tbool allowed;\n\t\tbool created;\n\t\t//\n\t\tuint256 level1Tokens;\n\t\tuint256 level2Tokens;\n\t\tuint256 level3Tokens;\n\t\tuint256 level4Tokens;\n\t\t//\n\t\tuint256 level1Reward;\n\t\tuint256 level2Reward;\n\t\tuint256 level3Reward;\n\t\tuint256 level4Reward;\n\t\t//\n\t\tuint256 withdrawable;\n\t\t//\n\t\tuint256 tokens;\n\t\tuint256 lastUpdateDate;\n\t}\n\n\t/**Level Data. TODO: move to library */\n\tstruct LevelData {\n\t\tuint256 allowedForXCoins;\n\t\tuint256 rewardPercentTimes100;\n\t\tuint256 lockedDuration;\n\t\tuint256 allowedReward;\n\t\tuint256 alloted;\n\t}\n\n\tmapping(address => UserData) users;\n\n\tconstructor(\n\t\taddress _factory,\n\t\taddress _rewardsToken,\n\t\taddress _stakingToken\n\t) {\n\t\tfactory = StakingFactoryLP(_factory);\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstakingToken = IERC20(_stakingToken);\n\t}\n\n\tfunction checkUpdateLevel(uint256 amount, uint256 level) internal view returns (uint256, uint256) {\n\t\tuint256 remaining;\n\t\t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t\tfactory.levels(level);\n\n\t\tif (alloted + amount >= allowedForXCoins) {\n\t\t\tremaining = amount - (allowedForXCoins - alloted);\n\t\t\tamount = allowedForXCoins - alloted;\n\t\t}\n\t\treturn (amount, remaining);\n\t}\n\n\t/**deposit function */\n\tfunction deposit(uint256 amount) external {\n\t\t// Check if level has been updated due to time elapsed.\n\n\t\tfactory.updateLevelCheck();\n\t\t// Fetch the level.\n\t\tuint256 remaining;\n\t\tuint256 level = factory.level();\n\t\t// Check if the amount updates the level and only deposit the amount which just updates\n\t\t// and update the level. Return rest of the staking token to the user.\n\t\tif (level == 1) {\n\t\t\t(amount, remaining) = checkUpdateLevel(amount, level);\n\t\t\tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t\tusers[msg.sender].level1Tokens += amount * 1000;\n\t\t\tusers[msg.sender].tokens += amount * 1000;\n\t\t\t// 1LP will give 2K BYN\n\t\t\t// Or equivalent to 100% interest on 1K BYN\n\t\t\tfactory.updateTokens(amount * 1000);\n\n\t\t\tlevel = factory.level();\n\t\t\tamount = remaining;\n\t\t}\n\t\t// if (level == 2) {\n\t\t// \t(amount, remaining) = checkUpdateLevel(amount, level);\n\t\t// \tusers[msg.sender].level2Tokens += amount;\n\t\t// \tstakingToken.transferFrom(msg.sender, address(this), amount);\n\t\t// \tfactory.updateTokens(amount);\n\n\t\t// \tlevel = factory.level();\n\t\t// \tamount = remaining;\n\t\t// }\n\t\tusers[msg.sender].lastUpdateDate = block.timestamp;\n\t}\n\n\tfunction calculateReward() public view returns (UserData memory user) {\n\t\tUserData memory userDetails = users[msg.sender];\n\t\t//\n\t\tif (userDetails.level1Tokens != 0) {\n\t\t\t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t\t\tfactory.levels(1);\n\t\t\tif (block.timestamp > factory.startTime() + _lockedDuration * oneDay) {\n\t\t\t\tuserDetails.level1Reward = ((_rewardPercentTimes100 * userDetails.level1Tokens)) / 10000;\n\t\t\t}\n\t\t}\n\t\t// if (userDetails.level2Tokens != 0) {\n\t\t// \t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t// \t\tfactory.levels(2);\n\t\t// \tif (block.timestamp > factory.startTime() + _lockedDuration * oneDay) {\n\t\t// \t\tuserDetails.level2Reward = ((_rewardPercentTimes100 * userDetails.level2Tokens)) / 10000;\n\t\t// \t}\n\t\t// }\n\t\treturn userDetails;\n\t}\n\n\t// Withdraw.\n\tfunction withdraw(uint256 level) external {\n\t\tif (level == 1 && users[msg.sender].level1Tokens != 0) {\n\t\t\t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t\t\tfactory.levels(1);\n\n\t\t\tif (block.timestamp > factory.startTime() + _lockedDuration * oneDay) {\n\t\t\t\tuint256 rewardValue = users[msg.sender].level1Tokens + (((_rewardPercentTimes100 * users[msg.sender].level1Tokens)) / 10000);\n\t\t\t\t// rewardsToken.approveInternal(address(this), msg.sender, rewardValue);\n\t\t\t\trewardsToken.transferFrom(address(this), msg.sender, rewardValue);\n\t\t\t\tusers[msg.sender].level1Tokens = 0;\n\t\t\t\tusers[msg.sender].level1Reward = 0;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//  else if (level == 2 && users[msg.sender].level2Tokens != 0) {\n\t\t// \t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t// \t\tfactory.levels(2);\n\t\t// \tif (block.timestamp > factory.startTime() + _lockedDuration * oneDay) {\n\t\t// \t\tuint256 rewardValue = users[msg.sender].level2Tokens + (((_rewardPercentTimes100 * users[msg.sender].level2Tokens)) / 10000);\n\t\t// \t\trewardsToken.approveInternal(address(this), msg.sender, rewardValue);\n\t\t// \t\trewardsToken.transferInternal(address(this), msg.sender, rewardValue);\n\t\t// \t\tusers[msg.sender].level2Tokens = 0;\n\t\t// \t\tusers[msg.sender].level2Reward = 0;\n\t\t// \t\treturn;\n\t\t// \t}\n\t\t// }\n\t\trequire(false, 'Cannot withdraw');\n\t}\n\n\tfunction withdrawByAmount(uint256 amount) external {\n\t\trequire(amount != 0);\n\n\t\tif (users[msg.sender].level1Tokens != 0) {\n\t\t\t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t\t\tfactory.levels(1);\n\n\t\t\tif (block.timestamp > factory.startTime() + _lockedDuration * oneDay) {\n\t\t\t\tuint256 rewardValue = users[msg.sender].level1Tokens + (((_rewardPercentTimes100 * users[msg.sender].level1Tokens)) / 10000);\n\t\t\t\tusers[msg.sender].withdrawable += rewardValue;\n\t\t\t\tusers[msg.sender].level1Tokens = 0;\n\t\t\t\tusers[msg.sender].level1Reward = 0;\n\t\t\t}\n\t\t}\n\t\t// if (users[msg.sender].level2Tokens != 0) {\n\t\t// \t(uint256 allowedForXCoins, uint256 _rewardPercentTimes100, uint256 _lockedDuration, uint256 _allowedReward, uint256 alloted) =\n\t\t// \t\tfactory.levels(2);\n\t\t// \tif (block.timestamp > factory.startTime() + _lockedDuration * oneDay) {\n\t\t// \t\tuint256 rewardValue = users[msg.sender].level2Tokens + (((_rewardPercentTimes100 * users[msg.sender].level2Tokens)) / 10000);\n\t\t// \t\tusers[msg.sender].withdrawable += rewardValue;\n\t\t// \t\tusers[msg.sender].level2Tokens = 0;\n\t\t// \t\tusers[msg.sender].level2Reward = 0;\n\t\t// \t}\n\t\t// }\n\n\t\trequire(amount <= users[msg.sender].withdrawable, 'Requested amount more than reward.');\n\t\t// rewardsToken.approveInternal(address(this), msg.sender, amount);\n\t\trewardsToken.transferFrom(address(this), msg.sender, amount);\n\t\tusers[msg.sender].withdrawable = users[msg.sender].withdrawable - amount;\n\t}\n}\n\ncontract StakingFactoryLP is Ownable {\n\tIERC20 rewardsToken;\n\tuint256 public startTime;\n\tuint256 public level;\n\taddress[] public stakingTokens;\n\n\tstruct StakingRewardsInfo {\n\t\taddress stakingRewards;\n\t\tuint256 rewardAmount;\n\t}\n\n\t// LevelData\n\tstruct LevelData {\n\t\tuint256 allowedForXCoins;\n\t\tuint256 rewardPercentTimes100;\n\t\tuint256 lockedDuration;\n\t\tuint256 allowedReward;\n\t\tuint256 alloted;\n\t}\n\n\taddress public stakingContractAddress;\n\t// rewards info by staking token\n\tmapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\n\n\tmapping(uint256 => LevelData) public levels;\n\n\tconstructor(address _rewardsToken, uint256 _startTime) {\n\t\trewardsToken = IERC20(_rewardsToken);\n\t\tstartTime = _startTime;\n\t\tlevel = 1;\n\t\tcreateLevels();\n\t}\n\n\t// THis fucntion creates the Staking reward.\n\tfunction deploy(address stakingToken, uint256 rewardAmount) public onlyOwner {\n\t\tStakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\n\t\trequire(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\n\n\t\tinfo.stakingRewards = address(new StakingLP(address(this), address(rewardsToken), stakingToken));\n\n\t\tstakingContractAddress = info.stakingRewards;\n\n\t\t// rewardsToken.approveInternal(msg.sender, info.stakingRewards, rewardAmount);\n\t\trewardsToken.transferFrom(msg.sender, info.stakingRewards, rewardAmount);\n\t\tinfo.rewardAmount = rewardAmount;\n\t\tstakingTokens.push(stakingToken);\n\t}\n\n\t// Create Levels\n\t// Or create an array and provide user access to create them.\n\tfunction createLevels() internal {\n\t\t// 1LP will give 200K BYN add 100K BYN in token and 100K BYN in reward\n\t\tlevels[1] = LevelData(100000 ether, 10000, 30, 100000 ether, 0);\n\t\t// levels[2] = LevelData(200000, 4100, 30, 82192, 0);\n\n\t\tlevel = 1;\n\t}\n\n\tmodifier restricted() {\n\t\trequire(msg.sender == stakingContractAddress, 'Sender has to be a staking contract.');\n\t\t_;\n\t}\n\n\tfunction updateTokens(uint256 tokenValue) external restricted {\n\t\tlevels[level].alloted += tokenValue;\n\t\tif (level == 2) {\n\t\t\treturn;\n\t\t}\n\t\tif (levels[level].alloted >= levels[level].allowedForXCoins) {\n\t\t\tlevel += 1;\n\t\t}\n\t}\n\n\tfunction updateLevelCheck() external {\n\t\t// Stop accepting entries in level 1 after one day.\n\t\t// Level 1 offer is only for one day.\n\t\tif (block.timestamp > startTime + 60 * 24 * 60) {\n\t\t\tlevel = 2;\n\t\t}\n\t}\n}\n",
	"sourcePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/LpStakingContract.sol",
	"ast": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/LpStakingContract.sol",
		"exportedSymbols": {
			"Context": [3017],
			"ERC20": [2916],
			"IERC20": [2994],
			"Ownable": [2415],
			"StakingFactoryLP": [768],
			"StakingLP": [538]
		},
		"id": 769,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 769,
				"sourceUnit": 2917,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 769,
				"sourceUnit": 2416,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 5,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 2415,
							"src": "249:7:0"
						},
						"id": 6,
						"nodeType": "InheritanceSpecifier",
						"src": "249:7:0"
					}
				],
				"contractDependencies": [2415, 3017],
				"contractKind": "contract",
				"documentation": {
					"id": 4,
					"nodeType": "StructuredDocumentation",
					"src": "167:59:0",
					"text": "This is a Staking contract created for every token."
				},
				"fullyImplemented": true,
				"id": 538,
				"linearizedBaseContracts": [538, 2415, 3017],
				"name": "StakingLP",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 13,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "260:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 7,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "260:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 12,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 10,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 8,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "277:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 9,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "282:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "277:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 11,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "287:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "277:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 16,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "293:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
							"typeString": "contract StakingFactoryLP"
						},
						"typeName": {
							"id": 15,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 14,
								"name": "StakingFactoryLP",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 768,
								"src": "293:16:0"
							},
							"referencedDeclaration": 768,
							"src": "293:16:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
								"typeString": "contract StakingFactoryLP"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 19,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "361:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$2994",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 18,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 17,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2994,
								"src": "361:6:0"
							},
							"referencedDeclaration": 2994,
							"src": "361:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$2994",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 22,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "400:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$2994",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 21,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 20,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2994,
								"src": "400:6:0"
							},
							"referencedDeclaration": 2994,
							"src": "400:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$2994",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "StakingLP.UserData",
						"id": 49,
						"members": [
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "481:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 23,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "481:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "497:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 25,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "497:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "518:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "518:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "542:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "542:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 32,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "566:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 31,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "566:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 34,
								"mutability": "mutable",
								"name": "level4Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "590:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 33,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "590:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 36,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "619:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 35,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "619:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 38,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "643:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 37,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "643:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 40,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "667:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 39,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "667:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 42,
								"mutability": "mutable",
								"name": "level4Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "691:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 41,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "691:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 44,
								"mutability": "mutable",
								"name": "withdrawable",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "720:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 43,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "720:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 46,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "749:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 45,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "749:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 48,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "767:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 47,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "767:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 538,
						"src": "461:332:0",
						"visibility": "public"
					},
					{
						"canonicalName": "StakingLP.LevelData",
						"id": 60,
						"members": [
							{
								"constant": false,
								"id": 51,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "858:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 50,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "858:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 53,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "886:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 52,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "886:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 55,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "919:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 54,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "919:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 57,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "945:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 56,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "945:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 59,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "970:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 58,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "970:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 538,
						"src": "837:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 65,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "992:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
							"typeString": "mapping(address => struct StakingLP.UserData)"
						},
						"typeName": {
							"id": 64,
							"keyType": {
								"id": 61,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1000:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "992:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
								"typeString": "mapping(address => struct StakingLP.UserData)"
							},
							"valueType": {
								"id": 63,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 62,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 49,
									"src": "1011:8:0"
								},
								"referencedDeclaration": 49,
								"src": "1011:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$49_storage_ptr",
									"typeString": "struct StakingLP.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 92,
							"nodeType": "Block",
							"src": "1115:124:0",
							"statements": [
								{
									"expression": {
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 74,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "1119:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
												"typeString": "contract StakingFactoryLP"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 76,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 67,
													"src": "1146:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 75,
												"name": "StakingFactoryLP",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 768,
												"src": "1129:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactoryLP_$768_$",
													"typeString": "type(contract StakingFactoryLP)"
												}
											},
											"id": 77,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1129:26:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
												"typeString": "contract StakingFactoryLP"
											}
										},
										"src": "1119:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
											"typeString": "contract StakingFactoryLP"
										}
									},
									"id": 79,
									"nodeType": "ExpressionStatement",
									"src": "1119:36:0"
								},
								{
									"expression": {
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 80,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 19,
											"src": "1159:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 82,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "1181:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 81,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2994,
												"src": "1174:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$2994_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 83,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1174:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"src": "1159:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2994",
											"typeString": "contract IERC20"
										}
									},
									"id": 85,
									"nodeType": "ExpressionStatement",
									"src": "1159:36:0"
								},
								{
									"expression": {
										"id": 90,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 86,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 22,
											"src": "1199:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 88,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "1221:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 87,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2994,
												"src": "1214:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$2994_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1214:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"src": "1199:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2994",
											"typeString": "contract IERC20"
										}
									},
									"id": 91,
									"nodeType": "ExpressionStatement",
									"src": "1199:36:0"
								}
							]
						},
						"id": 93,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 72,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 67,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "1045:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 66,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1045:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "1065:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 68,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1065:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "1090:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 70,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1041:73:0"
						},
						"returnParameters": {
							"id": 73,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1115:0:0"
						},
						"scope": 538,
						"src": "1030:209:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 148,
							"nodeType": "Block",
							"src": "1340:355:0",
							"statements": [
								{
									"assignments": [105],
									"declarations": [
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "remaining",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1344:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1344:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 106,
									"nodeType": "VariableDeclarationStatement",
									"src": "1344:17:0"
								},
								{
									"assignments": [108, 110, 112, 114, 116],
									"declarations": [
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "allowedForXCoins",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1366:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1366:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "_rewardPercentTimes100",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1392:30:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "_lockedDuration",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1424:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "_allowedReward",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1449:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 113,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1449:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "alloted",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1473:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 115,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1473:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 121,
									"initialValue": {
										"arguments": [
											{
												"id": 119,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 97,
												"src": "1510:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 117,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "1495:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
													"typeString": "contract StakingFactoryLP"
												}
											},
											"id": 118,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "levels",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 578,
											"src": "1495:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
												"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
											}
										},
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1495:21:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
											"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1365:151:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 124,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 122,
												"name": "alloted",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 116,
												"src": "1525:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "+",
											"rightExpression": {
												"id": 123,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 95,
												"src": "1535:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1525:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"id": 125,
											"name": "allowedForXCoins",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 108,
											"src": "1545:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1525:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 143,
									"nodeType": "IfStatement",
									"src": "1521:141:0",
									"trueBody": {
										"id": 142,
										"nodeType": "Block",
										"src": "1563:99:0",
										"statements": [
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1568:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 128,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1580:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 129,
																		"name": "allowedForXCoins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "1590:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 130,
																		"name": "alloted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "1609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1590:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 132,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1589:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1580:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1568:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1568:49:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1622:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 137,
															"name": "allowedForXCoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1631:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 138,
															"name": "alloted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1631:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1622:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1622:35:0"
											}
										]
									}
								},
								{
									"expression": {
										"components": [
											{
												"id": 144,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 95,
												"src": "1673:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"id": 145,
												"name": "remaining",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 105,
												"src": "1681:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"id": 146,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1672:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
											"typeString": "tuple(uint256,uint256)"
										}
									},
									"functionReturnParameters": 103,
									"id": 147,
									"nodeType": "Return",
									"src": "1665:26:0"
								}
							]
						},
						"id": 149,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "checkUpdateLevel",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 98,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1268:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 94,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1268:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "level",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1284:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1267:31:0"
						},
						"returnParameters": {
							"id": 103,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1322:7:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1322:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1331:7:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1331:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1321:18:0"
						},
						"scope": 538,
						"src": "1242:453:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 242,
							"nodeType": "Block",
							"src": "1764:1100:0",
							"statements": [
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 155,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "1827:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
													"typeString": "contract StakingFactoryLP"
												}
											},
											"id": 157,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateLevelCheck",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 767,
											"src": "1827:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
												"typeString": "function () external"
											}
										},
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1827:26:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 159,
									"nodeType": "ExpressionStatement",
									"src": "1827:26:0"
								},
								{
									"assignments": [161],
									"declarations": [
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "remaining",
											"nodeType": "VariableDeclaration",
											"scope": 242,
											"src": "1879:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1879:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 162,
									"nodeType": "VariableDeclarationStatement",
									"src": "1879:17:0"
								},
								{
									"assignments": [164],
									"declarations": [
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 242,
											"src": "1900:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 163,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1900:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 168,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 165,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "1916:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
													"typeString": "contract StakingFactoryLP"
												}
											},
											"id": 166,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 547,
											"src": "1916:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 167,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1916:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1900:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 171,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 169,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 164,
											"src": "2102:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 170,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2111:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2102:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 232,
									"nodeType": "IfStatement",
									"src": "2098:408:0",
									"trueBody": {
										"id": 231,
										"nodeType": "Block",
										"src": "2114:392:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 172,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2120:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 173,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "2128:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2119:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 176,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 177,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2166:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 175,
															"name": "checkUpdateLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "2141:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2119:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2119:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2203:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2203:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2223:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingLP_$538",
																		"typeString": "contract StakingLP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingLP_$538",
																		"typeString": "contract StakingLP"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2215:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2215:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 181,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "2177:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2994",
																"typeString": "contract IERC20"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2975,
														"src": "2177:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2177:60:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 193,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2242:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																	"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																}
															},
															"id": 196,
															"indexExpression": {
																"expression": {
																	"id": 194,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2248:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2242:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$49_storage",
																"typeString": "struct StakingLP.UserData storage ref"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "2242:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2276:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2276:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2242:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2242:47:0"
											},
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2294:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																	"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"expression": {
																	"id": 204,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2300:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2300:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2294:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$49_storage",
																"typeString": "struct StakingLP.UserData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "2294:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 208,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2322:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2294:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2294:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2444:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "2435:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 213,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "2414:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2414:35:0"
											},
											{
												"expression": {
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2455:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 222,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																	"typeString": "contract StakingFactoryLP"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "level",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 547,
															"src": "2463:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2463:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2455:23:0"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2483:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2492:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2483:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2483:18:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 240,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 233,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
														"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
													}
												},
												"id": 236,
												"indexExpression": {
													"expression": {
														"id": 234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2816:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2816:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "2810:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage",
													"typeString": "struct StakingLP.UserData storage ref"
												}
											},
											"id": 237,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 48,
											"src": "2810:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 238,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "2845:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 239,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "2845:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "2810:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 241,
									"nodeType": "ExpressionStatement",
									"src": "2810:50:0"
								}
							]
						},
						"documentation": {
							"id": 150,
							"nodeType": "StructuredDocumentation",
							"src": "1698:22:0",
							"text": "deposit function "
						},
						"functionSelector": "b6b55f25",
						"id": 243,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 153,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 243,
									"src": "1739:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1739:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1738:16:0"
						},
						"returnParameters": {
							"id": 154,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1764:0:0"
						},
						"scope": 538,
						"src": "1722:1142:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 305,
							"nodeType": "Block",
							"src": "2937:843:0",
							"statements": [
								{
									"assignments": [251],
									"declarations": [
										{
											"constant": false,
											"id": 251,
											"mutability": "mutable",
											"name": "userDetails",
											"nodeType": "VariableDeclaration",
											"scope": 305,
											"src": "2941:27:0",
											"stateVariable": false,
											"storageLocation": "memory",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
												"typeString": "struct StakingLP.UserData"
											},
											"typeName": {
												"id": 250,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 249,
													"name": "UserData",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 49,
													"src": "2941:8:0"
												},
												"referencedDeclaration": 49,
												"src": "2941:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage_ptr",
													"typeString": "struct StakingLP.UserData"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 256,
									"initialValue": {
										"baseExpression": {
											"id": 252,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 65,
											"src": "2971:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
												"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
											}
										},
										"id": 255,
										"indexExpression": {
											"expression": {
												"id": 253,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2977:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 254,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2977:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2971:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$49_storage",
											"typeString": "struct StakingLP.UserData storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "2941:47:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 257,
												"name": "userDetails",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 251,
												"src": "3001:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
													"typeString": "struct StakingLP.UserData memory"
												}
											},
											"id": 258,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "3001:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 259,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3029:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "3001:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 302,
									"nodeType": "IfStatement",
									"src": "2997:367:0",
									"trueBody": {
										"id": 301,
										"nodeType": "Block",
										"src": "3032:332:0",
										"statements": [
											{
												"assignments": [262, 264, 266, 268, 270],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "allowedForXCoins",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3038:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "_rewardPercentTimes100",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3064:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "_lockedDuration",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3096:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "_allowedReward",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3121:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "alloted",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3145:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 271,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "3168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "levels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "3168:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3037:148:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 276,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3194:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3194:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 278,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3212:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "3212:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3212:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "_lockedDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "3234:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 282,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3252:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3234:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3212:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3194:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "3190:170:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "3260:100:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 286,
																		"name": "userDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "3266:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
																			"typeString": "struct StakingLP.UserData memory"
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "3266:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 289,
																							"name": "_rewardPercentTimes100",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 264,
																							"src": "3295:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 290,
																								"name": "userDetails",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 251,
																								"src": "3320:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
																									"typeString": "struct StakingLP.UserData memory"
																								}
																							},
																							"id": 291,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 28,
																							"src": "3320:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3295:49:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 293,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3294:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3293:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3349:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "3293:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3266:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "3266:88:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"id": 303,
										"name": "userDetails",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 251,
										"src": "3765:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
											"typeString": "struct StakingLP.UserData memory"
										}
									},
									"functionReturnParameters": 248,
									"id": 304,
									"nodeType": "Return",
									"src": "3758:18:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 306,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 244,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2891:2:0"
						},
						"returnParameters": {
							"id": 248,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 247,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2915:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
										"typeString": "struct StakingLP.UserData"
									},
									"typeName": {
										"id": 246,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 245,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 49,
											"src": "2915:8:0"
										},
										"referencedDeclaration": 49,
										"src": "2915:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$49_storage_ptr",
											"typeString": "struct StakingLP.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2914:22:0"
						},
						"scope": 538,
						"src": "2867:913:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 406,
							"nodeType": "Block",
							"src": "3839:1417:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 313,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 311,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 308,
												"src": "3847:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "31",
												"id": 312,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3856:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"src": "3847:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 320,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
															"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
														}
													},
													"id": 317,
													"indexExpression": {
														"expression": {
															"id": 315,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3867:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3861:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$49_storage",
														"typeString": "struct StakingLP.UserData storage ref"
													}
												},
												"id": 318,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "level1Tokens",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 28,
												"src": "3861:30:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"hexValue": "30",
												"id": 319,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3895:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "3861:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"src": "3847:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 400,
									"nodeType": "IfStatement",
									"src": "3843:664:0",
									"trueBody": {
										"id": 399,
										"nodeType": "Block",
										"src": "3898:609:0",
										"statements": [
											{
												"assignments": [323, 325, 327, 329, 331],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "allowedForXCoins",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3904:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "_rewardPercentTimes100",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3930:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "_lockedDuration",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3962:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "_allowedReward",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3987:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "alloted",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "4011:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4049:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 332,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "4034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "levels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "4034:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3903:148:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 337,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4061:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 339,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4079:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "4079:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4079:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "_lockedDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4101:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 343,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4119:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4101:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4079:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4061:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "4057:446:0",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "4127:376:0",
													"statements": [
														{
															"assignments": [348],
															"declarations": [
																{
																	"constant": false,
																	"id": 348,
																	"mutability": "mutable",
																	"name": "rewardValue",
																	"nodeType": "VariableDeclaration",
																	"scope": 397,
																	"src": "4133:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 347,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 367,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 349,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "4155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 352,
																		"indexExpression": {
																			"expression": {
																				"id": 350,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4161:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4161:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4155:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "4155:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 360,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 354,
																									"name": "_rewardPercentTimes100",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 325,
																									"src": "4191:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 355,
																											"name": "users",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 65,
																											"src": "4216:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																												"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																											}
																										},
																										"id": 358,
																										"indexExpression": {
																											"expression": {
																												"id": 356,
																												"name": "msg",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967281,
																												"src": "4222:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_message",
																													"typeString": "msg"
																												}
																											},
																											"id": 357,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sender",
																											"nodeType": "MemberAccess",
																											"src": "4222:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "4216:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserData_$49_storage",
																											"typeString": "struct StakingLP.UserData storage ref"
																										}
																									},
																									"id": 359,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "level1Tokens",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 28,
																									"src": "4216:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4191:55:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 361,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "4190:57:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 362,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4189:59:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4251:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "4189:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 365,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4188:69:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4155:102:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4133:124:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 373,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4374:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingLP_$538",
																					"typeString": "contract StakingLP"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingLP_$538",
																					"typeString": "contract StakingLP"
																				}
																			],
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4366:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 371,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4366:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4366:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 375,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4381:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4381:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 377,
																		"name": "rewardValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "4393:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 368,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4340:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2994",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2975,
																	"src": "4340:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4340:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "ExpressionStatement",
															"src": "4340:65:0"
														},
														{
															"expression": {
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 380,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "4411:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 383,
																		"indexExpression": {
																			"expression": {
																				"id": 381,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4417:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4417:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4411:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "4411:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4444:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4411:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"nodeType": "ExpressionStatement",
															"src": "4411:34:0"
														},
														{
															"expression": {
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 388,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "4451:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 391,
																		"indexExpression": {
																			"expression": {
																				"id": 389,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4457:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4457:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4451:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "4451:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4451:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "4451:34:0"
														},
														{
															"functionReturnParameters": 310,
															"id": 396,
															"nodeType": "Return",
															"src": "4491:7:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"arguments": [
											{
												"hexValue": "66616c7365",
												"id": 402,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "bool",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5227:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"value": "false"
											},
											{
												"hexValue": "43616e6e6f74207769746864726177",
												"id": 403,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5234:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_1d92e5c808f56e7ff3c25d1dea15d482ad22ae77a11bce07c16817793f227f21",
													"typeString": "literal_string \"Cannot withdraw\""
												},
												"value": "Cannot withdraw"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_1d92e5c808f56e7ff3c25d1dea15d482ad22ae77a11bce07c16817793f227f21",
													"typeString": "literal_string \"Cannot withdraw\""
												}
											],
											"id": 401,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "5219:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 404,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5219:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 405,
									"nodeType": "ExpressionStatement",
									"src": "5219:33:0"
								}
							]
						},
						"functionSelector": "2e1a7d4d",
						"id": 407,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "withdraw",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 309,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 308,
									"mutability": "mutable",
									"name": "level",
									"nodeType": "VariableDeclaration",
									"scope": 407,
									"src": "3815:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 307,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3815:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3814:15:0"
						},
						"returnParameters": {
							"id": 310,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3839:0:0"
						},
						"scope": 538,
						"src": "3797:1459:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 536,
							"nodeType": "Block",
							"src": "5310:1448:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 415,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 413,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "5322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"hexValue": "30",
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5332:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"src": "5322:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											],
											"id": 412,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "5314:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
												"typeString": "function (bool) pure"
											}
										},
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5314:20:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 417,
									"nodeType": "ExpressionStatement",
									"src": "5314:20:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 424,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 418,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "5343:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
														"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
													}
												},
												"id": 421,
												"indexExpression": {
													"expression": {
														"id": 419,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5349:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5349:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "5343:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage",
													"typeString": "struct StakingLP.UserData storage ref"
												}
											},
											"id": 422,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "5343:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 423,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5377:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "5343:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 498,
									"nodeType": "IfStatement",
									"src": "5339:541:0",
									"trueBody": {
										"id": 497,
										"nodeType": "Block",
										"src": "5380:500:0",
										"statements": [
											{
												"assignments": [426, 428, 430, 432, 434],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "allowedForXCoins",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5386:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "_rewardPercentTimes100",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5412:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "_lockedDuration",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5444:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "_allowedReward",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5469:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "alloted",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5493:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5531:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 435,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "5516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "levels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "5516:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5516:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5385:148:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 440,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5543:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 442,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "5561:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5561:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "_lockedDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "5583:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 446,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "5601:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5583:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5561:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5543:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "5539:337:0",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "5609:267:0",
													"statements": [
														{
															"assignments": [451],
															"declarations": [
																{
																	"constant": false,
																	"id": 451,
																	"mutability": "mutable",
																	"name": "rewardValue",
																	"nodeType": "VariableDeclaration",
																	"scope": 495,
																	"src": "5615:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 450,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5615:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 470,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 452,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5637:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 455,
																		"indexExpression": {
																			"expression": {
																				"id": 453,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5643:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5643:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5637:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "5637:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 463,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 457,
																									"name": "_rewardPercentTimes100",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 428,
																									"src": "5673:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 458,
																											"name": "users",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 65,
																											"src": "5698:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																												"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																											}
																										},
																										"id": 461,
																										"indexExpression": {
																											"expression": {
																												"id": 459,
																												"name": "msg",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967281,
																												"src": "5704:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_message",
																													"typeString": "msg"
																												}
																											},
																											"id": 460,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sender",
																											"nodeType": "MemberAccess",
																											"src": "5704:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "5698:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserData_$49_storage",
																											"typeString": "struct StakingLP.UserData storage ref"
																										}
																									},
																									"id": 462,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "level1Tokens",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 28,
																									"src": "5698:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5673:55:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 464,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5672:57:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 465,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5671:59:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5733:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "5671:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5670:69:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5637:102:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5615:124:0"
														},
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 471,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5745:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 474,
																		"indexExpression": {
																			"expression": {
																				"id": 472,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5751:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5751:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5745:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "withdrawable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "5745:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 476,
																	"name": "rewardValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5745:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "5745:45:0"
														},
														{
															"expression": {
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 479,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5796:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 482,
																		"indexExpression": {
																			"expression": {
																				"id": 480,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5802:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5802:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5796:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "5796:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5829:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5796:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "5796:34:0"
														},
														{
															"expression": {
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 487,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5836:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 490,
																		"indexExpression": {
																			"expression": {
																				"id": 488,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5842:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5842:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5836:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "5836:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5836:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "5836:34:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 506,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 500,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "6465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "<=",
												"rightExpression": {
													"expression": {
														"baseExpression": {
															"id": 501,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "6475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
															}
														},
														"id": 504,
														"indexExpression": {
															"expression": {
																"id": 502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6481:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6481:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6475:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserData_$49_storage",
															"typeString": "struct StakingLP.UserData storage ref"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "withdrawable",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 44,
													"src": "6475:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "6465:40:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "52657175657374656420616d6f756e74206d6f7265207468616e207265776172642e",
												"id": 507,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6507:36:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_868586f1557d7120fde95d747b94f57a322c8f26b1f39489a8b66b19c300ca5f",
													"typeString": "literal_string \"Requested amount more than reward.\""
												},
												"value": "Requested amount more than reward."
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_868586f1557d7120fde95d747b94f57a322c8f26b1f39489a8b66b19c300ca5f",
													"typeString": "literal_string \"Requested amount more than reward.\""
												}
											],
											"id": 499,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6457:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 508,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6457:87:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 509,
									"nodeType": "ExpressionStatement",
									"src": "6457:87:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"id": 515,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967268,
														"src": "6652:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingLP_$538",
															"typeString": "contract StakingLP"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_contract$_StakingLP_$538",
															"typeString": "contract StakingLP"
														}
													],
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "6644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 513,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6644:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 516,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "6644:13:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"expression": {
													"id": 517,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "6659:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 518,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "6659:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 519,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 409,
												"src": "6671:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 510,
												"name": "rewardsToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 19,
												"src": "6618:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2994",
													"typeString": "contract IERC20"
												}
											},
											"id": 512,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "transferFrom",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2975,
											"src": "6618:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,address,uint256) external returns (bool)"
											}
										},
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6618:60:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 521,
									"nodeType": "ExpressionStatement",
									"src": "6618:60:0"
								},
								{
									"expression": {
										"id": 534,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 522,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "6682:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
														"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
													}
												},
												"id": 525,
												"indexExpression": {
													"expression": {
														"id": 523,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6688:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6688:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "6682:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage",
													"typeString": "struct StakingLP.UserData storage ref"
												}
											},
											"id": 526,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "withdrawable",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 44,
											"src": "6682:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 533,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"expression": {
													"baseExpression": {
														"id": 527,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "6715:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
															"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
														}
													},
													"id": 530,
													"indexExpression": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6721:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6721:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6715:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$49_storage",
														"typeString": "struct StakingLP.UserData storage ref"
													}
												},
												"id": 531,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "withdrawable",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 44,
												"src": "6715:30:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 532,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 409,
												"src": "6748:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "6715:39:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6682:72:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 535,
									"nodeType": "ExpressionStatement",
									"src": "6682:72:0"
								}
							]
						},
						"functionSelector": "5521e9bf",
						"id": 537,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "withdrawByAmount",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 410,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "5285:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5285:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5284:16:0"
						},
						"returnParameters": {
							"id": 411,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "5310:0:0"
						},
						"scope": 538,
						"src": "5259:1499:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					}
				],
				"scope": 769,
				"src": "227:6533:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 539,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 2415,
							"src": "6791:7:0"
						},
						"id": 540,
						"nodeType": "InheritanceSpecifier",
						"src": "6791:7:0"
					}
				],
				"contractDependencies": [538, 2415, 3017],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 768,
				"linearizedBaseContracts": [768, 2415, 3017],
				"name": "StakingFactoryLP",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 543,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6802:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$2994",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 542,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 541,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2994,
								"src": "6802:6:0"
							},
							"referencedDeclaration": 2994,
							"src": "6802:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$2994",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 545,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6824:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 544,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "6824:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 547,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6851:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 546,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "6851:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 550,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6874:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 548,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6874:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 549,
							"nodeType": "ArrayTypeName",
							"src": "6874:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactoryLP.StakingRewardsInfo",
						"id": 555,
						"members": [
							{
								"constant": false,
								"id": 552,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 555,
								"src": "6938:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 551,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "6938:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 554,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 555,
								"src": "6964:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 553,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "6964:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 768,
						"src": "6908:80:0",
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactoryLP.LevelData",
						"id": 566,
						"members": [
							{
								"constant": false,
								"id": 557,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7026:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 556,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7026:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 559,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7054:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 558,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7054:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 561,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7087:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 560,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7087:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 563,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7113:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 562,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7113:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 565,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7138:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 564,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7138:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 768,
						"src": "7005:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "3535f48b",
						"id": 568,
						"mutability": "mutable",
						"name": "stakingContractAddress",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "7160:37:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 567,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "7160:7:0",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 573,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "7234:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$555_storage_$",
							"typeString": "mapping(address => struct StakingFactoryLP.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 572,
							"keyType": {
								"id": 569,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7242:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "7234:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$555_storage_$",
								"typeString": "mapping(address => struct StakingFactoryLP.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 571,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 570,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 555,
									"src": "7253:18:0"
								},
								"referencedDeclaration": 555,
								"src": "7253:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
									"typeString": "struct StakingFactoryLP.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "b2596a67",
						"id": 578,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "7316:43:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
							"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData)"
						},
						"typeName": {
							"id": 577,
							"keyType": {
								"id": 574,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7324:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"nodeType": "Mapping",
							"src": "7316:29:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
								"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData)"
							},
							"valueType": {
								"id": 576,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 575,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 566,
									"src": "7335:9:0"
								},
								"referencedDeclaration": 566,
								"src": "7335:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$566_storage_ptr",
									"typeString": "struct StakingFactoryLP.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 602,
							"nodeType": "Block",
							"src": "7418:101:0",
							"statements": [
								{
									"expression": {
										"id": 589,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 585,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 543,
											"src": "7422:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 587,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 580,
													"src": "7444:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 586,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2994,
												"src": "7437:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$2994_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 588,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "7437:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"src": "7422:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2994",
											"typeString": "contract IERC20"
										}
									},
									"id": 590,
									"nodeType": "ExpressionStatement",
									"src": "7422:36:0"
								},
								{
									"expression": {
										"id": 593,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 591,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 545,
											"src": "7462:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 592,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 582,
											"src": "7474:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7462:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 594,
									"nodeType": "ExpressionStatement",
									"src": "7462:22:0"
								},
								{
									"expression": {
										"id": 597,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 595,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 547,
											"src": "7488:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 596,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7496:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "7488:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 598,
									"nodeType": "ExpressionStatement",
									"src": "7488:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 599,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 699,
											"src": "7501:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 600,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7501:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 601,
									"nodeType": "ExpressionStatement",
									"src": "7501:14:0"
								}
							]
						},
						"id": 603,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 583,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 580,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7375:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 579,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7375:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 582,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7398:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7398:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7374:43:0"
						},
						"returnParameters": {
							"id": 584,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7418:0:0"
						},
						"scope": 768,
						"src": "7363:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 678,
							"nodeType": "Block",
							"src": "7645:566:0",
							"statements": [
								{
									"assignments": [614],
									"declarations": [
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 678,
											"src": "7649:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
												"typeString": "struct StakingFactoryLP.StakingRewardsInfo"
											},
											"typeName": {
												"id": 613,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 612,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 555,
													"src": "7649:18:0"
												},
												"referencedDeclaration": 555,
												"src": "7649:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 618,
									"initialValue": {
										"baseExpression": {
											"id": 615,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 573,
											"src": "7683:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$555_storage_$",
												"typeString": "mapping(address => struct StakingFactoryLP.StakingRewardsInfo storage ref)"
											}
										},
										"id": 617,
										"indexExpression": {
											"id": 616,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 605,
											"src": "7716:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "7683:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage",
											"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "7649:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 626,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 620,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "7741:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
															"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 552,
													"src": "7741:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7772:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7764:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7764:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "7741:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 627,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7776:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 619,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "7733:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7733:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 629,
									"nodeType": "ExpressionStatement",
									"src": "7733:93:0"
								},
								{
									"expression": {
										"id": 649,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 630,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 614,
												"src": "7831:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
												}
											},
											"id": 632,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 552,
											"src": "7831:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 640,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7883:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 638,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7875:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7875:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 644,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "7898:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2994",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2994",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7890:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 642,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7890:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7890:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7913:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7861:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StakingLP_$538_$",
															"typeString": "function (address,address,address) returns (contract StakingLP)"
														},
														"typeName": {
															"id": 636,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 635,
																"name": "StakingLP",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 538,
																"src": "7865:9:0"
															},
															"referencedDeclaration": 538,
															"src": "7865:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingLP_$538",
																"typeString": "contract StakingLP"
															}
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7861:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StakingLP_$538",
														"typeString": "contract StakingLP"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_StakingLP_$538",
														"typeString": "contract StakingLP"
													}
												],
												"id": 634,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "7853:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7853:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 648,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "7853:74:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "7831:96:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 650,
									"nodeType": "ExpressionStatement",
									"src": "7831:96:0"
								},
								{
									"expression": {
										"id": 654,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 651,
											"name": "stakingContractAddress",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 568,
											"src": "7932:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 652,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 614,
												"src": "7957:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
												}
											},
											"id": 653,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 552,
											"src": "7957:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "7932:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 655,
									"nodeType": "ExpressionStatement",
									"src": "7932:44:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 659,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "8089:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 660,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "8089:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"expression": {
													"id": 661,
													"name": "info",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "8101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
														"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
													}
												},
												"id": 662,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "stakingRewards",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 552,
												"src": "8101:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 663,
												"name": "rewardAmount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 607,
												"src": "8122:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 656,
												"name": "rewardsToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 543,
												"src": "8063:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2994",
													"typeString": "contract IERC20"
												}
											},
											"id": 658,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "transferFrom",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2975,
											"src": "8063:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,address,uint256) external returns (bool)"
											}
										},
										"id": 664,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8063:72:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 665,
									"nodeType": "ExpressionStatement",
									"src": "8063:72:0"
								},
								{
									"expression": {
										"id": 670,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 666,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 614,
												"src": "8139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
												}
											},
											"id": 668,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 554,
											"src": "8139:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 669,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 607,
											"src": "8159:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8139:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 671,
									"nodeType": "ExpressionStatement",
									"src": "8139:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 675,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 605,
												"src": "8194:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 672,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 550,
												"src": "8175:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 674,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "8175:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 676,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8175:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 677,
									"nodeType": "ExpressionStatement",
									"src": "8175:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 679,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 610,
								"modifierName": {
									"id": 609,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2364,
									"src": "7635:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "7635:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 608,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 605,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "7584:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 604,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7584:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 607,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "7606:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 606,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7606:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7583:44:0"
						},
						"returnParameters": {
							"id": 611,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7645:0:0"
						},
						"scope": 768,
						"src": "7568:643:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 698,
							"nodeType": "Block",
							"src": "8328:214:0",
							"statements": [
								{
									"expression": {
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 682,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 578,
												"src": "8405:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
												}
											},
											"id": 684,
											"indexExpression": {
												"hexValue": "31",
												"id": 683,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8412:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "8405:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$566_storage",
												"typeString": "struct StakingFactoryLP.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "313030303030",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8427:12:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													"value": "100000"
												},
												{
													"hexValue": "3130303030",
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8441:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												{
													"hexValue": "3330",
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8448:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "313030303030",
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8452:12:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													"value": "100000"
												},
												{
													"hexValue": "30",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8466:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													{
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 685,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 566,
												"src": "8417:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$566_storage_ptr_$",
													"typeString": "type(struct StakingFactoryLP.LevelData storage pointer)"
												}
											},
											"id": 691,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "8417:51:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$566_memory_ptr",
												"typeString": "struct StakingFactoryLP.LevelData memory"
											}
										},
										"src": "8405:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$566_storage",
											"typeString": "struct StakingFactoryLP.LevelData storage ref"
										}
									},
									"id": 693,
									"nodeType": "ExpressionStatement",
									"src": "8405:63:0"
								},
								{
									"expression": {
										"id": 696,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 694,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 547,
											"src": "8529:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 695,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8537:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "8529:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 697,
									"nodeType": "ExpressionStatement",
									"src": "8529:9:0"
								}
							]
						},
						"id": 699,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 680,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8316:2:0"
						},
						"returnParameters": {
							"id": 681,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8328:0:0"
						},
						"scope": 768,
						"src": "8295:247:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 710,
							"nodeType": "Block",
							"src": "8567:98:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 705,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 702,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8579:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8579:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"id": 704,
													"name": "stakingContractAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "8593:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "8579:36:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "53656e6465722068617320746f2062652061207374616b696e6720636f6e74726163742e",
												"id": 706,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8617:38:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2",
													"typeString": "literal_string \"Sender has to be a staking contract.\""
												},
												"value": "Sender has to be a staking contract."
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2",
													"typeString": "literal_string \"Sender has to be a staking contract.\""
												}
											],
											"id": 701,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8571:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 707,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8571:85:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 708,
									"nodeType": "ExpressionStatement",
									"src": "8571:85:0"
								},
								{
									"id": 709,
									"nodeType": "PlaceholderStatement",
									"src": "8660:1:0"
								}
							]
						},
						"id": 711,
						"name": "restricted",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 700,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8564:2:0"
						},
						"src": "8545:120:0",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 746,
							"nodeType": "Block",
							"src": "8730:162:0",
							"statements": [
								{
									"expression": {
										"id": 723,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 718,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "8734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
													}
												},
												"id": 720,
												"indexExpression": {
													"id": 719,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "8741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8734:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$566_storage",
													"typeString": "struct StakingFactoryLP.LevelData storage ref"
												}
											},
											"id": 721,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 565,
											"src": "8734:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 722,
											"name": "tokenValue",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 713,
											"src": "8759:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8734:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 724,
									"nodeType": "ExpressionStatement",
									"src": "8734:35:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 727,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 725,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 547,
											"src": "8777:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "32",
											"id": 726,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8786:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "8777:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 730,
									"nodeType": "IfStatement",
									"src": "8773:32:0",
									"trueBody": {
										"id": 729,
										"nodeType": "Block",
										"src": "8789:16:0",
										"statements": [
											{
												"functionReturnParameters": 717,
												"id": 728,
												"nodeType": "Return",
												"src": "8794:7:0"
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 739,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 731,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "8812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
													}
												},
												"id": 733,
												"indexExpression": {
													"id": 732,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "8819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8812:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$566_storage",
													"typeString": "struct StakingFactoryLP.LevelData storage ref"
												}
											},
											"id": 734,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 565,
											"src": "8812:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"expression": {
												"baseExpression": {
													"id": 735,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "8837:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
													}
												},
												"id": 737,
												"indexExpression": {
													"id": 736,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "8844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8837:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$566_storage",
													"typeString": "struct StakingFactoryLP.LevelData storage ref"
												}
											},
											"id": 738,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "allowedForXCoins",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 557,
											"src": "8837:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8812:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 745,
									"nodeType": "IfStatement",
									"src": "8808:81:0",
									"trueBody": {
										"id": 744,
										"nodeType": "Block",
										"src": "8869:20:0",
										"statements": [
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 740,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8874:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8874:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "8874:10:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "7bdecea1",
						"id": 747,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 716,
								"modifierName": {
									"id": 715,
									"name": "restricted",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 711,
									"src": "8719:10:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "8719:10:0"
							}
						],
						"name": "updateTokens",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 714,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 713,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 747,
									"src": "8690:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 712,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8690:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8689:20:0"
						},
						"returnParameters": {
							"id": 717,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8730:0:0"
						},
						"scope": 768,
						"src": "8668:224:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 766,
							"nodeType": "Block",
							"src": "8932:168:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 759,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 750,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "9034:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 751,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "9034:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 752,
												"name": "startTime",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 545,
												"src": "9052:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "+",
											"rightExpression": {
												"commonType": {
													"typeIdentifier": "t_rational_86400_by_1",
													"typeString": "int_const 86400"
												},
												"id": 757,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"commonType": {
														"typeIdentifier": "t_rational_1440_by_1",
														"typeString": "int_const 1440"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3630",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9064:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3234",
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9069:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24_by_1",
															"typeString": "int_const 24"
														},
														"value": "24"
													},
													"src": "9064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1440_by_1",
														"typeString": "int_const 1440"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "3630",
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9074:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												"src": "9064:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_86400_by_1",
													"typeString": "int_const 86400"
												}
											},
											"src": "9052:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "9034:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 765,
									"nodeType": "IfStatement",
									"src": "9030:67:0",
									"trueBody": {
										"id": 764,
										"nodeType": "Block",
										"src": "9078:19:0",
										"statements": [
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 760,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9083:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9091:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9083:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "9083:9:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "f12ca698",
						"id": 767,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateLevelCheck",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 748,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8920:2:0"
						},
						"returnParameters": {
							"id": 749,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8932:0:0"
						},
						"scope": 768,
						"src": "8895:205:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					}
				],
				"scope": 769,
				"src": "6762:2340:0"
			}
		],
		"src": "32:9071:0"
	},
	"legacyAST": {
		"absolutePath": "/media/aniket/home/aniket/Work/nonceblox-work/BF_Staking/contracts/LpStakingContract.sol",
		"exportedSymbols": {
			"Context": [3017],
			"ERC20": [2916],
			"IERC20": [2994],
			"Ownable": [2415],
			"StakingFactoryLP": [768],
			"StakingLP": [538]
		},
		"id": 769,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": ["solidity", "^", "0.8", ".0"],
				"nodeType": "PragmaDirective",
				"src": "32:23:0"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
				"id": 2,
				"nodeType": "ImportDirective",
				"scope": 769,
				"sourceUnit": 2917,
				"src": "57:55:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
				"file": "@openzeppelin/contracts/access/Ownable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 769,
				"sourceUnit": 2416,
				"src": "113:52:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 5,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 2415,
							"src": "249:7:0"
						},
						"id": 6,
						"nodeType": "InheritanceSpecifier",
						"src": "249:7:0"
					}
				],
				"contractDependencies": [2415, 3017],
				"contractKind": "contract",
				"documentation": {
					"id": 4,
					"nodeType": "StructuredDocumentation",
					"src": "167:59:0",
					"text": "This is a Staking contract created for every token."
				},
				"fullyImplemented": true,
				"id": 538,
				"linearizedBaseContracts": [538, 2415, 3017],
				"name": "StakingLP",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 13,
						"mutability": "mutable",
						"name": "oneDay",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "260:29:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 7,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "260:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": {
							"commonType": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							},
							"id": 12,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"lValueRequested": false,
							"leftExpression": {
								"commonType": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								},
								"id": 10,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"leftExpression": {
									"hexValue": "3234",
									"id": 8,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "277:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_24_by_1",
										"typeString": "int_const 24"
									},
									"value": "24"
								},
								"nodeType": "BinaryOperation",
								"operator": "*",
								"rightExpression": {
									"hexValue": "3630",
									"id": 9,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "number",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "282:2:0",
									"typeDescriptions": {
										"typeIdentifier": "t_rational_60_by_1",
										"typeString": "int_const 60"
									},
									"value": "60"
								},
								"src": "277:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1440_by_1",
									"typeString": "int_const 1440"
								}
							},
							"nodeType": "BinaryOperation",
							"operator": "*",
							"rightExpression": {
								"hexValue": "3630",
								"id": 11,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "287:2:0",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_60_by_1",
									"typeString": "int_const 60"
								},
								"value": "60"
							},
							"src": "277:12:0",
							"typeDescriptions": {
								"typeIdentifier": "t_rational_86400_by_1",
								"typeString": "int_const 86400"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 16,
						"mutability": "mutable",
						"name": "factory",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "293:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
							"typeString": "contract StakingFactoryLP"
						},
						"typeName": {
							"id": 15,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 14,
								"name": "StakingFactoryLP",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 768,
								"src": "293:16:0"
							},
							"referencedDeclaration": 768,
							"src": "293:16:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
								"typeString": "contract StakingFactoryLP"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 19,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "361:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$2994",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 18,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 17,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2994,
								"src": "361:6:0"
							},
							"referencedDeclaration": 2994,
							"src": "361:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$2994",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"id": 22,
						"mutability": "mutable",
						"name": "stakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "400:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$2994",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 21,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 20,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2994,
								"src": "400:6:0"
							},
							"referencedDeclaration": 2994,
							"src": "400:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$2994",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"canonicalName": "StakingLP.UserData",
						"id": 49,
						"members": [
							{
								"constant": false,
								"id": 24,
								"mutability": "mutable",
								"name": "allowed",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "481:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 23,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "481:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 26,
								"mutability": "mutable",
								"name": "created",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "497:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bool",
									"typeString": "bool"
								},
								"typeName": {
									"id": 25,
									"name": "bool",
									"nodeType": "ElementaryTypeName",
									"src": "497:4:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 28,
								"mutability": "mutable",
								"name": "level1Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "518:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 27,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "518:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 30,
								"mutability": "mutable",
								"name": "level2Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "542:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 29,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "542:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 32,
								"mutability": "mutable",
								"name": "level3Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "566:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 31,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "566:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 34,
								"mutability": "mutable",
								"name": "level4Tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "590:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 33,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "590:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 36,
								"mutability": "mutable",
								"name": "level1Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "619:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 35,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "619:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 38,
								"mutability": "mutable",
								"name": "level2Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "643:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 37,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "643:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 40,
								"mutability": "mutable",
								"name": "level3Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "667:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 39,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "667:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 42,
								"mutability": "mutable",
								"name": "level4Reward",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "691:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 41,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "691:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 44,
								"mutability": "mutable",
								"name": "withdrawable",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "720:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 43,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "720:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 46,
								"mutability": "mutable",
								"name": "tokens",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "749:14:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 45,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "749:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 48,
								"mutability": "mutable",
								"name": "lastUpdateDate",
								"nodeType": "VariableDeclaration",
								"scope": 49,
								"src": "767:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 47,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "767:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "UserData",
						"nodeType": "StructDefinition",
						"scope": 538,
						"src": "461:332:0",
						"visibility": "public"
					},
					{
						"canonicalName": "StakingLP.LevelData",
						"id": 60,
						"members": [
							{
								"constant": false,
								"id": 51,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "858:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 50,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "858:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 53,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "886:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 52,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "886:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 55,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "919:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 54,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "919:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 57,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "945:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 56,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "945:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 59,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 60,
								"src": "970:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 58,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "970:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 538,
						"src": "837:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"id": 65,
						"mutability": "mutable",
						"name": "users",
						"nodeType": "VariableDeclaration",
						"scope": 538,
						"src": "992:34:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
							"typeString": "mapping(address => struct StakingLP.UserData)"
						},
						"typeName": {
							"id": 64,
							"keyType": {
								"id": 61,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1000:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "992:28:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
								"typeString": "mapping(address => struct StakingLP.UserData)"
							},
							"valueType": {
								"id": 63,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 62,
									"name": "UserData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 49,
									"src": "1011:8:0"
								},
								"referencedDeclaration": 49,
								"src": "1011:8:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_UserData_$49_storage_ptr",
									"typeString": "struct StakingLP.UserData"
								}
							}
						},
						"visibility": "internal"
					},
					{
						"body": {
							"id": 92,
							"nodeType": "Block",
							"src": "1115:124:0",
							"statements": [
								{
									"expression": {
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 74,
											"name": "factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "1119:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
												"typeString": "contract StakingFactoryLP"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 76,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 67,
													"src": "1146:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 75,
												"name": "StakingFactoryLP",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 768,
												"src": "1129:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_StakingFactoryLP_$768_$",
													"typeString": "type(contract StakingFactoryLP)"
												}
											},
											"id": 77,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1129:26:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
												"typeString": "contract StakingFactoryLP"
											}
										},
										"src": "1119:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
											"typeString": "contract StakingFactoryLP"
										}
									},
									"id": 79,
									"nodeType": "ExpressionStatement",
									"src": "1119:36:0"
								},
								{
									"expression": {
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 80,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 19,
											"src": "1159:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 82,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "1181:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 81,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2994,
												"src": "1174:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$2994_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 83,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1174:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"src": "1159:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2994",
											"typeString": "contract IERC20"
										}
									},
									"id": 85,
									"nodeType": "ExpressionStatement",
									"src": "1159:36:0"
								},
								{
									"expression": {
										"id": 90,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 86,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 22,
											"src": "1199:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 88,
													"name": "_stakingToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "1221:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 87,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2994,
												"src": "1214:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$2994_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1214:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"src": "1199:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2994",
											"typeString": "contract IERC20"
										}
									},
									"id": 91,
									"nodeType": "ExpressionStatement",
									"src": "1199:36:0"
								}
							]
						},
						"id": 93,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 72,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 67,
									"mutability": "mutable",
									"name": "_factory",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "1045:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 66,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1045:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "1065:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 68,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1065:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "mutable",
									"name": "_stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "1090:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 70,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1041:73:0"
						},
						"returnParameters": {
							"id": 73,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1115:0:0"
						},
						"scope": 538,
						"src": "1030:209:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 148,
							"nodeType": "Block",
							"src": "1340:355:0",
							"statements": [
								{
									"assignments": [105],
									"declarations": [
										{
											"constant": false,
											"id": 105,
											"mutability": "mutable",
											"name": "remaining",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1344:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1344:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 106,
									"nodeType": "VariableDeclarationStatement",
									"src": "1344:17:0"
								},
								{
									"assignments": [108, 110, 112, 114, 116],
									"declarations": [
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "allowedForXCoins",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1366:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1366:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "_rewardPercentTimes100",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1392:30:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "_lockedDuration",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1424:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "_allowedReward",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1449:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 113,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1449:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "alloted",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "1473:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 115,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1473:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 121,
									"initialValue": {
										"arguments": [
											{
												"id": 119,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 97,
												"src": "1510:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 117,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "1495:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
													"typeString": "contract StakingFactoryLP"
												}
											},
											"id": 118,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "levels",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 578,
											"src": "1495:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
												"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
											}
										},
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1495:21:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
											"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1365:151:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 124,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 122,
												"name": "alloted",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 116,
												"src": "1525:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "+",
											"rightExpression": {
												"id": 123,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 95,
												"src": "1535:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "1525:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"id": 125,
											"name": "allowedForXCoins",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 108,
											"src": "1545:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1525:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 143,
									"nodeType": "IfStatement",
									"src": "1521:141:0",
									"trueBody": {
										"id": 142,
										"nodeType": "Block",
										"src": "1563:99:0",
										"statements": [
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1568:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 128,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1580:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 129,
																		"name": "allowedForXCoins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "1590:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 130,
																		"name": "alloted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "1609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1590:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 132,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1589:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1580:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1568:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1568:49:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1622:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 137,
															"name": "allowedForXCoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1631:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 138,
															"name": "alloted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1631:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1622:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1622:35:0"
											}
										]
									}
								},
								{
									"expression": {
										"components": [
											{
												"id": 144,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 95,
												"src": "1673:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"id": 145,
												"name": "remaining",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 105,
												"src": "1681:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"id": 146,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1672:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
											"typeString": "tuple(uint256,uint256)"
										}
									},
									"functionReturnParameters": 103,
									"id": 147,
									"nodeType": "Return",
									"src": "1665:26:0"
								}
							]
						},
						"id": 149,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "checkUpdateLevel",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 98,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1268:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 94,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1268:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "level",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1284:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1267:31:0"
						},
						"returnParameters": {
							"id": 103,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1322:7:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1322:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1331:7:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1331:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1321:18:0"
						},
						"scope": 538,
						"src": "1242:453:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 242,
							"nodeType": "Block",
							"src": "1764:1100:0",
							"statements": [
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 155,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "1827:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
													"typeString": "contract StakingFactoryLP"
												}
											},
											"id": 157,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "updateLevelCheck",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 767,
											"src": "1827:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
												"typeString": "function () external"
											}
										},
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1827:26:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 159,
									"nodeType": "ExpressionStatement",
									"src": "1827:26:0"
								},
								{
									"assignments": [161],
									"declarations": [
										{
											"constant": false,
											"id": 161,
											"mutability": "mutable",
											"name": "remaining",
											"nodeType": "VariableDeclaration",
											"scope": 242,
											"src": "1879:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1879:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 162,
									"nodeType": "VariableDeclarationStatement",
									"src": "1879:17:0"
								},
								{
									"assignments": [164],
									"declarations": [
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 242,
											"src": "1900:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 163,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1900:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 168,
									"initialValue": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"expression": {
												"id": 165,
												"name": "factory",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "1916:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
													"typeString": "contract StakingFactoryLP"
												}
											},
											"id": 166,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 547,
											"src": "1916:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
												"typeString": "function () view external returns (uint256)"
											}
										},
										"id": 167,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1916:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "1900:31:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 171,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 169,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 164,
											"src": "2102:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "31",
											"id": 170,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2111:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2102:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 232,
									"nodeType": "IfStatement",
									"src": "2098:408:0",
									"trueBody": {
										"id": 231,
										"nodeType": "Block",
										"src": "2114:392:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 172,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2120:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 173,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "2128:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 174,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2119:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 176,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 177,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2166:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 175,
															"name": "checkUpdateLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "2141:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "2119:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2119:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2203:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2203:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2223:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingLP_$538",
																		"typeString": "contract StakingLP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingLP_$538",
																		"typeString": "contract StakingLP"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2215:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2215:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 181,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "2177:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2994",
																"typeString": "contract IERC20"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2975,
														"src": "2177:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2177:60:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 193,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2242:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																	"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																}
															},
															"id": 196,
															"indexExpression": {
																"expression": {
																	"id": 194,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2248:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2242:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$49_storage",
																"typeString": "struct StakingLP.UserData storage ref"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "level1Tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "2242:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2276:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2276:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2242:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2242:47:0"
											},
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2294:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																	"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"expression": {
																	"id": 204,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2300:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2300:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2294:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserData_$49_storage",
																"typeString": "struct StakingLP.UserData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "2294:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 208,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "2322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "2322:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2294:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2294:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "2435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2444:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "2435:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 213,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "updateTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "2414:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2414:35:0"
											},
											{
												"expression": {
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2455:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 222,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																	"typeString": "contract StakingFactoryLP"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "level",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 547,
															"src": "2463:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2463:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2455:23:0"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2483:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2492:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2483:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2483:18:0"
											}
										]
									}
								},
								{
									"expression": {
										"id": 240,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 233,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
														"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
													}
												},
												"id": 236,
												"indexExpression": {
													"expression": {
														"id": 234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2816:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2816:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "2810:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage",
													"typeString": "struct StakingLP.UserData storage ref"
												}
											},
											"id": 237,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "lastUpdateDate",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 48,
											"src": "2810:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 238,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "2845:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 239,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "2845:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "2810:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 241,
									"nodeType": "ExpressionStatement",
									"src": "2810:50:0"
								}
							]
						},
						"documentation": {
							"id": 150,
							"nodeType": "StructuredDocumentation",
							"src": "1698:22:0",
							"text": "deposit function "
						},
						"functionSelector": "b6b55f25",
						"id": 243,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "deposit",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 153,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 243,
									"src": "1739:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1739:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "1738:16:0"
						},
						"returnParameters": {
							"id": 154,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1764:0:0"
						},
						"scope": 538,
						"src": "1722:1142:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 305,
							"nodeType": "Block",
							"src": "2937:843:0",
							"statements": [
								{
									"assignments": [251],
									"declarations": [
										{
											"constant": false,
											"id": 251,
											"mutability": "mutable",
											"name": "userDetails",
											"nodeType": "VariableDeclaration",
											"scope": 305,
											"src": "2941:27:0",
											"stateVariable": false,
											"storageLocation": "memory",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
												"typeString": "struct StakingLP.UserData"
											},
											"typeName": {
												"id": 250,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 249,
													"name": "UserData",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 49,
													"src": "2941:8:0"
												},
												"referencedDeclaration": 49,
												"src": "2941:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage_ptr",
													"typeString": "struct StakingLP.UserData"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 256,
									"initialValue": {
										"baseExpression": {
											"id": 252,
											"name": "users",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 65,
											"src": "2971:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
												"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
											}
										},
										"id": 255,
										"indexExpression": {
											"expression": {
												"id": 253,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "2977:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 254,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "2977:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "2971:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$49_storage",
											"typeString": "struct StakingLP.UserData storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "2941:47:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 257,
												"name": "userDetails",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 251,
												"src": "3001:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
													"typeString": "struct StakingLP.UserData memory"
												}
											},
											"id": 258,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "3001:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 259,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3029:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "3001:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 302,
									"nodeType": "IfStatement",
									"src": "2997:367:0",
									"trueBody": {
										"id": 301,
										"nodeType": "Block",
										"src": "3032:332:0",
										"statements": [
											{
												"assignments": [262, 264, 266, 268, 270],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "allowedForXCoins",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3038:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "_rewardPercentTimes100",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3064:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "_lockedDuration",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3096:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "_allowedReward",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3121:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "alloted",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3145:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3183:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 271,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "3168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "levels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "3168:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3037:148:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 276,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3194:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3194:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 278,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "3212:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "3212:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3212:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "_lockedDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "3234:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 282,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3252:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3234:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3212:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3194:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "3190:170:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "3260:100:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 286,
																		"name": "userDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "3266:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
																			"typeString": "struct StakingLP.UserData memory"
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "3266:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 289,
																							"name": "_rewardPercentTimes100",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 264,
																							"src": "3295:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 290,
																								"name": "userDetails",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 251,
																								"src": "3320:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
																									"typeString": "struct StakingLP.UserData memory"
																								}
																							},
																							"id": 291,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "level1Tokens",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 28,
																							"src": "3320:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3295:49:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 293,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3294:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3293:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3130303030",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3349:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"src": "3293:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3266:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "3266:88:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"id": 303,
										"name": "userDetails",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 251,
										"src": "3765:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
											"typeString": "struct StakingLP.UserData memory"
										}
									},
									"functionReturnParameters": 248,
									"id": 304,
									"nodeType": "Return",
									"src": "3758:18:0"
								}
							]
						},
						"functionSelector": "725cedd3",
						"id": 306,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "calculateReward",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 244,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2891:2:0"
						},
						"returnParameters": {
							"id": 248,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 247,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2915:20:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UserData_$49_memory_ptr",
										"typeString": "struct StakingLP.UserData"
									},
									"typeName": {
										"id": 246,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 245,
											"name": "UserData",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 49,
											"src": "2915:8:0"
										},
										"referencedDeclaration": 49,
										"src": "2915:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserData_$49_storage_ptr",
											"typeString": "struct StakingLP.UserData"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "2914:22:0"
						},
						"scope": 538,
						"src": "2867:913:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 406,
							"nodeType": "Block",
							"src": "3839:1417:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 313,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 311,
												"name": "level",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 308,
												"src": "3847:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "31",
												"id": 312,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3856:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"src": "3847:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "&&",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 320,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
															"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
														}
													},
													"id": 317,
													"indexExpression": {
														"expression": {
															"id": 315,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3867:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3861:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$49_storage",
														"typeString": "struct StakingLP.UserData storage ref"
													}
												},
												"id": 318,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "level1Tokens",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 28,
												"src": "3861:30:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"hexValue": "30",
												"id": 319,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3895:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "3861:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"src": "3847:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 400,
									"nodeType": "IfStatement",
									"src": "3843:664:0",
									"trueBody": {
										"id": 399,
										"nodeType": "Block",
										"src": "3898:609:0",
										"statements": [
											{
												"assignments": [323, 325, 327, 329, 331],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "allowedForXCoins",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3904:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "_rewardPercentTimes100",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3930:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "_lockedDuration",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3962:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "_allowedReward",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3987:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "alloted",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "4011:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4049:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 332,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "4034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "levels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "4034:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3903:148:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 337,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4061:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 339,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4079:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "4079:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4079:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "_lockedDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4101:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 343,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4119:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4101:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4079:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4061:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "4057:446:0",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "4127:376:0",
													"statements": [
														{
															"assignments": [348],
															"declarations": [
																{
																	"constant": false,
																	"id": 348,
																	"mutability": "mutable",
																	"name": "rewardValue",
																	"nodeType": "VariableDeclaration",
																	"scope": 397,
																	"src": "4133:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 347,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 367,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 349,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "4155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 352,
																		"indexExpression": {
																			"expression": {
																				"id": 350,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4161:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4161:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4155:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "4155:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 360,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 354,
																									"name": "_rewardPercentTimes100",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 325,
																									"src": "4191:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 355,
																											"name": "users",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 65,
																											"src": "4216:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																												"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																											}
																										},
																										"id": 358,
																										"indexExpression": {
																											"expression": {
																												"id": 356,
																												"name": "msg",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967281,
																												"src": "4222:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_message",
																													"typeString": "msg"
																												}
																											},
																											"id": 357,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sender",
																											"nodeType": "MemberAccess",
																											"src": "4222:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "4216:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserData_$49_storage",
																											"typeString": "struct StakingLP.UserData storage ref"
																										}
																									},
																									"id": 359,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "level1Tokens",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 28,
																									"src": "4216:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4191:55:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 361,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "4190:57:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 362,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4189:59:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4251:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "4189:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 365,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4188:69:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4155:102:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4133:124:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 373,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4374:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingLP_$538",
																					"typeString": "contract StakingLP"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingLP_$538",
																					"typeString": "contract StakingLP"
																				}
																			],
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4366:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 371,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4366:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4366:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 375,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4381:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4381:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 377,
																		"name": "rewardValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "4393:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 368,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4340:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2994",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2975,
																	"src": "4340:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4340:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "ExpressionStatement",
															"src": "4340:65:0"
														},
														{
															"expression": {
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 380,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "4411:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 383,
																		"indexExpression": {
																			"expression": {
																				"id": 381,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4417:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4417:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4411:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "4411:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4444:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4411:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"nodeType": "ExpressionStatement",
															"src": "4411:34:0"
														},
														{
															"expression": {
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 388,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "4451:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 391,
																		"indexExpression": {
																			"expression": {
																				"id": 389,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4457:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4457:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4451:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "4451:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4451:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "4451:34:0"
														},
														{
															"functionReturnParameters": 310,
															"id": 396,
															"nodeType": "Return",
															"src": "4491:7:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"arguments": [
											{
												"hexValue": "66616c7365",
												"id": 402,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "bool",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5227:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"value": "false"
											},
											{
												"hexValue": "43616e6e6f74207769746864726177",
												"id": 403,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5234:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_1d92e5c808f56e7ff3c25d1dea15d482ad22ae77a11bce07c16817793f227f21",
													"typeString": "literal_string \"Cannot withdraw\""
												},
												"value": "Cannot withdraw"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_1d92e5c808f56e7ff3c25d1dea15d482ad22ae77a11bce07c16817793f227f21",
													"typeString": "literal_string \"Cannot withdraw\""
												}
											],
											"id": 401,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "5219:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 404,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5219:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 405,
									"nodeType": "ExpressionStatement",
									"src": "5219:33:0"
								}
							]
						},
						"functionSelector": "2e1a7d4d",
						"id": 407,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "withdraw",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 309,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 308,
									"mutability": "mutable",
									"name": "level",
									"nodeType": "VariableDeclaration",
									"scope": 407,
									"src": "3815:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 307,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3815:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "3814:15:0"
						},
						"returnParameters": {
							"id": 310,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3839:0:0"
						},
						"scope": 538,
						"src": "3797:1459:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 536,
							"nodeType": "Block",
							"src": "5310:1448:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 415,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 413,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "5322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "!=",
												"rightExpression": {
													"hexValue": "30",
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5332:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"src": "5322:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											],
											"id": 412,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "5314:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
												"typeString": "function (bool) pure"
											}
										},
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5314:20:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 417,
									"nodeType": "ExpressionStatement",
									"src": "5314:20:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 424,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 418,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "5343:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
														"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
													}
												},
												"id": 421,
												"indexExpression": {
													"expression": {
														"id": 419,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5349:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5349:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "5343:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage",
													"typeString": "struct StakingLP.UserData storage ref"
												}
											},
											"id": 422,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "level1Tokens",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 28,
											"src": "5343:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "!=",
										"rightExpression": {
											"hexValue": "30",
											"id": 423,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5377:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"src": "5343:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 498,
									"nodeType": "IfStatement",
									"src": "5339:541:0",
									"trueBody": {
										"id": 497,
										"nodeType": "Block",
										"src": "5380:500:0",
										"statements": [
											{
												"assignments": [426, 428, 430, 432, 434],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "allowedForXCoins",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5386:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "_rewardPercentTimes100",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5412:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "_lockedDuration",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5444:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "_allowedReward",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5469:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "alloted",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "5493:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5531:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 435,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "5516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																"typeString": "contract StakingFactoryLP"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "levels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "5516:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5516:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5385:148:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 440,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5543:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 442,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 545,
																"src": "5561:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5561:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "_lockedDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "5583:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 446,
																"name": "oneDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "5601:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5583:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5561:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5543:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "5539:337:0",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "5609:267:0",
													"statements": [
														{
															"assignments": [451],
															"declarations": [
																{
																	"constant": false,
																	"id": 451,
																	"mutability": "mutable",
																	"name": "rewardValue",
																	"nodeType": "VariableDeclaration",
																	"scope": 495,
																	"src": "5615:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 450,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5615:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 470,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 452,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5637:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 455,
																		"indexExpression": {
																			"expression": {
																				"id": 453,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5643:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5643:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5637:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "5637:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 463,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 457,
																									"name": "_rewardPercentTimes100",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 428,
																									"src": "5673:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"expression": {
																										"baseExpression": {
																											"id": 458,
																											"name": "users",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 65,
																											"src": "5698:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																												"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																											}
																										},
																										"id": 461,
																										"indexExpression": {
																											"expression": {
																												"id": 459,
																												"name": "msg",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967281,
																												"src": "5704:3:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_message",
																													"typeString": "msg"
																												}
																											},
																											"id": 460,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sender",
																											"nodeType": "MemberAccess",
																											"src": "5704:10:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "5698:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserData_$49_storage",
																											"typeString": "struct StakingLP.UserData storage ref"
																										}
																									},
																									"id": 462,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "level1Tokens",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 28,
																									"src": "5698:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5673:55:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 464,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5672:57:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 465,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5671:59:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5733:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "5671:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5670:69:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5637:102:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5615:124:0"
														},
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 471,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5745:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 474,
																		"indexExpression": {
																			"expression": {
																				"id": 472,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5751:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5751:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5745:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "withdrawable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "5745:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 476,
																	"name": "rewardValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5745:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "5745:45:0"
														},
														{
															"expression": {
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 479,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5796:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 482,
																		"indexExpression": {
																			"expression": {
																				"id": 480,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5802:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5802:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5796:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 28,
																	"src": "5796:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5829:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5796:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "5796:34:0"
														},
														{
															"expression": {
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 487,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 65,
																			"src": "5836:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																				"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
																			}
																		},
																		"id": 490,
																		"indexExpression": {
																			"expression": {
																				"id": 488,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5842:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5842:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5836:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserData_$49_storage",
																			"typeString": "struct StakingLP.UserData storage ref"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "level1Reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 36,
																	"src": "5836:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5836:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "5836:34:0"
														}
													]
												}
											}
										]
									}
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 506,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 500,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "6465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "<=",
												"rightExpression": {
													"expression": {
														"baseExpression": {
															"id": 501,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "6475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
																"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
															}
														},
														"id": 504,
														"indexExpression": {
															"expression": {
																"id": 502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6481:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6481:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6475:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserData_$49_storage",
															"typeString": "struct StakingLP.UserData storage ref"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "withdrawable",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 44,
													"src": "6475:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "6465:40:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "52657175657374656420616d6f756e74206d6f7265207468616e207265776172642e",
												"id": 507,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6507:36:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_868586f1557d7120fde95d747b94f57a322c8f26b1f39489a8b66b19c300ca5f",
													"typeString": "literal_string \"Requested amount more than reward.\""
												},
												"value": "Requested amount more than reward."
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_868586f1557d7120fde95d747b94f57a322c8f26b1f39489a8b66b19c300ca5f",
													"typeString": "literal_string \"Requested amount more than reward.\""
												}
											],
											"id": 499,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "6457:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 508,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6457:87:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 509,
									"nodeType": "ExpressionStatement",
									"src": "6457:87:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"arguments": [
													{
														"id": 515,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967268,
														"src": "6652:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_StakingLP_$538",
															"typeString": "contract StakingLP"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_contract$_StakingLP_$538",
															"typeString": "contract StakingLP"
														}
													],
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "6644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 513,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6644:7:0",
														"typeDescriptions": {}
													}
												},
												"id": 516,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "6644:13:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"expression": {
													"id": 517,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "6659:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 518,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "6659:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 519,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 409,
												"src": "6671:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 510,
												"name": "rewardsToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 19,
												"src": "6618:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2994",
													"typeString": "contract IERC20"
												}
											},
											"id": 512,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "transferFrom",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2975,
											"src": "6618:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,address,uint256) external returns (bool)"
											}
										},
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6618:60:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 521,
									"nodeType": "ExpressionStatement",
									"src": "6618:60:0"
								},
								{
									"expression": {
										"id": 534,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 522,
													"name": "users",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "6682:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
														"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
													}
												},
												"id": 525,
												"indexExpression": {
													"expression": {
														"id": 523,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6688:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6688:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "6682:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$49_storage",
													"typeString": "struct StakingLP.UserData storage ref"
												}
											},
											"id": 526,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "withdrawable",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 44,
											"src": "6682:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 533,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"expression": {
													"baseExpression": {
														"id": 527,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "6715:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$49_storage_$",
															"typeString": "mapping(address => struct StakingLP.UserData storage ref)"
														}
													},
													"id": 530,
													"indexExpression": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6721:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6721:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6715:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserData_$49_storage",
														"typeString": "struct StakingLP.UserData storage ref"
													}
												},
												"id": 531,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "withdrawable",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 44,
												"src": "6715:30:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "-",
											"rightExpression": {
												"id": 532,
												"name": "amount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 409,
												"src": "6748:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "6715:39:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6682:72:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 535,
									"nodeType": "ExpressionStatement",
									"src": "6682:72:0"
								}
							]
						},
						"functionSelector": "5521e9bf",
						"id": 537,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "withdrawByAmount",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 410,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "5285:14:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5285:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "5284:16:0"
						},
						"returnParameters": {
							"id": 411,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "5310:0:0"
						},
						"scope": 538,
						"src": "5259:1499:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					}
				],
				"scope": 769,
				"src": "227:6533:0"
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"baseName": {
							"id": 539,
							"name": "Ownable",
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 2415,
							"src": "6791:7:0"
						},
						"id": 540,
						"nodeType": "InheritanceSpecifier",
						"src": "6791:7:0"
					}
				],
				"contractDependencies": [538, 2415, 3017],
				"contractKind": "contract",
				"fullyImplemented": true,
				"id": 768,
				"linearizedBaseContracts": [768, 2415, 3017],
				"name": "StakingFactoryLP",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"constant": false,
						"id": 543,
						"mutability": "mutable",
						"name": "rewardsToken",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6802:19:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_contract$_IERC20_$2994",
							"typeString": "contract IERC20"
						},
						"typeName": {
							"id": 542,
							"nodeType": "UserDefinedTypeName",
							"pathNode": {
								"id": 541,
								"name": "IERC20",
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 2994,
								"src": "6802:6:0"
							},
							"referencedDeclaration": 2994,
							"src": "6802:6:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_IERC20_$2994",
								"typeString": "contract IERC20"
							}
						},
						"visibility": "internal"
					},
					{
						"constant": false,
						"functionSelector": "78e97925",
						"id": 545,
						"mutability": "mutable",
						"name": "startTime",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6824:24:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 544,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "6824:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6fd5ae15",
						"id": 547,
						"mutability": "mutable",
						"name": "level",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6851:20:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 546,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "6851:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "344e5e34",
						"id": 550,
						"mutability": "mutable",
						"name": "stakingTokens",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "6874:30:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_array$_t_address_$dyn_storage",
							"typeString": "address[]"
						},
						"typeName": {
							"baseType": {
								"id": 548,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "6874:7:0",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"id": 549,
							"nodeType": "ArrayTypeName",
							"src": "6874:9:0",
							"typeDescriptions": {
								"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
								"typeString": "address[]"
							}
						},
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactoryLP.StakingRewardsInfo",
						"id": 555,
						"members": [
							{
								"constant": false,
								"id": 552,
								"mutability": "mutable",
								"name": "stakingRewards",
								"nodeType": "VariableDeclaration",
								"scope": 555,
								"src": "6938:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"typeName": {
									"id": 551,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "6938:7:0",
									"stateMutability": "nonpayable",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 554,
								"mutability": "mutable",
								"name": "rewardAmount",
								"nodeType": "VariableDeclaration",
								"scope": 555,
								"src": "6964:20:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 553,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "6964:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "StakingRewardsInfo",
						"nodeType": "StructDefinition",
						"scope": 768,
						"src": "6908:80:0",
						"visibility": "public"
					},
					{
						"canonicalName": "StakingFactoryLP.LevelData",
						"id": 566,
						"members": [
							{
								"constant": false,
								"id": 557,
								"mutability": "mutable",
								"name": "allowedForXCoins",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7026:24:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 556,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7026:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 559,
								"mutability": "mutable",
								"name": "rewardPercentTimes100",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7054:29:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 558,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7054:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 561,
								"mutability": "mutable",
								"name": "lockedDuration",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7087:22:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 560,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7087:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 563,
								"mutability": "mutable",
								"name": "allowedReward",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7113:21:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 562,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7113:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 565,
								"mutability": "mutable",
								"name": "alloted",
								"nodeType": "VariableDeclaration",
								"scope": 566,
								"src": "7138:15:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 564,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "7138:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"visibility": "internal"
							}
						],
						"name": "LevelData",
						"nodeType": "StructDefinition",
						"scope": 768,
						"src": "7005:152:0",
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "3535f48b",
						"id": 568,
						"mutability": "mutable",
						"name": "stakingContractAddress",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "7160:37:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_address",
							"typeString": "address"
						},
						"typeName": {
							"id": 567,
							"name": "address",
							"nodeType": "ElementaryTypeName",
							"src": "7160:7:0",
							"stateMutability": "nonpayable",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "6cf8caf8",
						"id": 573,
						"mutability": "mutable",
						"name": "stakingRewardsInfoByStakingToken",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "7234:78:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$555_storage_$",
							"typeString": "mapping(address => struct StakingFactoryLP.StakingRewardsInfo)"
						},
						"typeName": {
							"id": 572,
							"keyType": {
								"id": 569,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "7242:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "7234:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$555_storage_$",
								"typeString": "mapping(address => struct StakingFactoryLP.StakingRewardsInfo)"
							},
							"valueType": {
								"id": 571,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 570,
									"name": "StakingRewardsInfo",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 555,
									"src": "7253:18:0"
								},
								"referencedDeclaration": 555,
								"src": "7253:18:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
									"typeString": "struct StakingFactoryLP.StakingRewardsInfo"
								}
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "b2596a67",
						"id": 578,
						"mutability": "mutable",
						"name": "levels",
						"nodeType": "VariableDeclaration",
						"scope": 768,
						"src": "7316:43:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
							"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData)"
						},
						"typeName": {
							"id": 577,
							"keyType": {
								"id": 574,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7324:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"nodeType": "Mapping",
							"src": "7316:29:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
								"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData)"
							},
							"valueType": {
								"id": 576,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 575,
									"name": "LevelData",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 566,
									"src": "7335:9:0"
								},
								"referencedDeclaration": 566,
								"src": "7335:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_struct$_LevelData_$566_storage_ptr",
									"typeString": "struct StakingFactoryLP.LevelData"
								}
							}
						},
						"visibility": "public"
					},
					{
						"body": {
							"id": 602,
							"nodeType": "Block",
							"src": "7418:101:0",
							"statements": [
								{
									"expression": {
										"id": 589,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 585,
											"name": "rewardsToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 543,
											"src": "7422:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"id": 587,
													"name": "_rewardsToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 580,
													"src": "7444:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 586,
												"name": "IERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2994,
												"src": "7437:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC20_$2994_$",
													"typeString": "type(contract IERC20)"
												}
											},
											"id": 588,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "7437:21:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$2994",
												"typeString": "contract IERC20"
											}
										},
										"src": "7422:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2994",
											"typeString": "contract IERC20"
										}
									},
									"id": 590,
									"nodeType": "ExpressionStatement",
									"src": "7422:36:0"
								},
								{
									"expression": {
										"id": 593,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 591,
											"name": "startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 545,
											"src": "7462:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 592,
											"name": "_startTime",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 582,
											"src": "7474:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "7462:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 594,
									"nodeType": "ExpressionStatement",
									"src": "7462:22:0"
								},
								{
									"expression": {
										"id": 597,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 595,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 547,
											"src": "7488:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 596,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7496:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "7488:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 598,
									"nodeType": "ExpressionStatement",
									"src": "7488:9:0"
								},
								{
									"expression": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 599,
											"name": "createLevels",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 699,
											"src": "7501:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 600,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7501:14:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 601,
									"nodeType": "ExpressionStatement",
									"src": "7501:14:0"
								}
							]
						},
						"id": 603,
						"implemented": true,
						"kind": "constructor",
						"modifiers": [],
						"name": "",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 583,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 580,
									"mutability": "mutable",
									"name": "_rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7375:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 579,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7375:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 582,
									"mutability": "mutable",
									"name": "_startTime",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7398:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7398:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7374:43:0"
						},
						"returnParameters": {
							"id": 584,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7418:0:0"
						},
						"scope": 768,
						"src": "7363:156:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 678,
							"nodeType": "Block",
							"src": "7645:566:0",
							"statements": [
								{
									"assignments": [614],
									"declarations": [
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "info",
											"nodeType": "VariableDeclaration",
											"scope": 678,
											"src": "7649:31:0",
											"stateVariable": false,
											"storageLocation": "storage",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
												"typeString": "struct StakingFactoryLP.StakingRewardsInfo"
											},
											"typeName": {
												"id": 613,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 612,
													"name": "StakingRewardsInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 555,
													"src": "7649:18:0"
												},
												"referencedDeclaration": 555,
												"src": "7649:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"id": 618,
									"initialValue": {
										"baseExpression": {
											"id": 615,
											"name": "stakingRewardsInfoByStakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 573,
											"src": "7683:32:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$555_storage_$",
												"typeString": "mapping(address => struct StakingFactoryLP.StakingRewardsInfo storage ref)"
											}
										},
										"id": 617,
										"indexExpression": {
											"id": 616,
											"name": "stakingToken",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 605,
											"src": "7716:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"isConstant": false,
										"isLValue": true,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "IndexAccess",
										"src": "7683:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage",
											"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage ref"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "7649:80:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 626,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 620,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "7741:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
															"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakingRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 552,
													"src": "7741:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7772:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7764:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7764:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "7741:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
												"id": 627,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7776:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												},
												"value": "StakingRewardsFactory::deploy: already deployed"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
													"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
												}
											],
											"id": 619,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "7733:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "7733:93:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 629,
									"nodeType": "ExpressionStatement",
									"src": "7733:93:0"
								},
								{
									"expression": {
										"id": 649,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 630,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 614,
												"src": "7831:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
												}
											},
											"id": 632,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 552,
											"src": "7831:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 640,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7883:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingFactoryLP_$768",
																		"typeString": "contract StakingFactoryLP"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 638,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7875:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7875:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 644,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "7898:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2994",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2994",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7890:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 642,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7890:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7890:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7913:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7861:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StakingLP_$538_$",
															"typeString": "function (address,address,address) returns (contract StakingLP)"
														},
														"typeName": {
															"id": 636,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 635,
																"name": "StakingLP",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 538,
																"src": "7865:9:0"
															},
															"referencedDeclaration": 538,
															"src": "7865:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingLP_$538",
																"typeString": "contract StakingLP"
															}
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7861:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_StakingLP_$538",
														"typeString": "contract StakingLP"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_StakingLP_$538",
														"typeString": "contract StakingLP"
													}
												],
												"id": 634,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "7853:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7853:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 648,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "7853:74:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "7831:96:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 650,
									"nodeType": "ExpressionStatement",
									"src": "7831:96:0"
								},
								{
									"expression": {
										"id": 654,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 651,
											"name": "stakingContractAddress",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 568,
											"src": "7932:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"expression": {
												"id": 652,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 614,
												"src": "7957:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
												}
											},
											"id": 653,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "stakingRewards",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 552,
											"src": "7957:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"src": "7932:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"id": 655,
									"nodeType": "ExpressionStatement",
									"src": "7932:44:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"expression": {
													"id": 659,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "8089:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 660,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "8089:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"expression": {
													"id": 661,
													"name": "info",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "8101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
														"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
													}
												},
												"id": 662,
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "stakingRewards",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 552,
												"src": "8101:19:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 663,
												"name": "rewardAmount",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 607,
												"src": "8122:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"expression": {
												"id": 656,
												"name": "rewardsToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 543,
												"src": "8063:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2994",
													"typeString": "contract IERC20"
												}
											},
											"id": 658,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "transferFrom",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2975,
											"src": "8063:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
												"typeString": "function (address,address,uint256) external returns (bool)"
											}
										},
										"id": 664,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8063:72:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 665,
									"nodeType": "ExpressionStatement",
									"src": "8063:72:0"
								},
								{
									"expression": {
										"id": 670,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"id": 666,
												"name": "info",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 614,
												"src": "8139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingRewardsInfo_$555_storage_ptr",
													"typeString": "struct StakingFactoryLP.StakingRewardsInfo storage pointer"
												}
											},
											"id": 668,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "rewardAmount",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 554,
											"src": "8139:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"id": 669,
											"name": "rewardAmount",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 607,
											"src": "8159:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8139:32:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 671,
									"nodeType": "ExpressionStatement",
									"src": "8139:32:0"
								},
								{
									"expression": {
										"arguments": [
											{
												"id": 675,
												"name": "stakingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 605,
												"src": "8194:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"expression": {
												"id": 672,
												"name": "stakingTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 550,
												"src": "8175:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage",
													"typeString": "address[] storage ref"
												}
											},
											"id": 674,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "push",
											"nodeType": "MemberAccess",
											"src": "8175:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
												"typeString": "function (address)"
											}
										},
										"id": 676,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8175:32:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 677,
									"nodeType": "ExpressionStatement",
									"src": "8175:32:0"
								}
							]
						},
						"functionSelector": "4956eaf0",
						"id": 679,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 610,
								"modifierName": {
									"id": 609,
									"name": "onlyOwner",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2364,
									"src": "7635:9:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "7635:9:0"
							}
						],
						"name": "deploy",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 608,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 605,
									"mutability": "mutable",
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "7584:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 604,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7584:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 607,
									"mutability": "mutable",
									"name": "rewardAmount",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "7606:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 606,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7606:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "7583:44:0"
						},
						"returnParameters": {
							"id": 611,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "7645:0:0"
						},
						"scope": 768,
						"src": "7568:643:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 698,
							"nodeType": "Block",
							"src": "8328:214:0",
							"statements": [
								{
									"expression": {
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"baseExpression": {
												"id": 682,
												"name": "levels",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 578,
												"src": "8405:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
													"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
												}
											},
											"id": 684,
											"indexExpression": {
												"hexValue": "31",
												"id": 683,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8412:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"nodeType": "IndexAccess",
											"src": "8405:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$566_storage",
												"typeString": "struct StakingFactoryLP.LevelData storage ref"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"arguments": [
												{
													"hexValue": "313030303030",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8427:12:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													"value": "100000"
												},
												{
													"hexValue": "3130303030",
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8441:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												{
													"hexValue": "3330",
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8448:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													"value": "30"
												},
												{
													"hexValue": "313030303030",
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8452:12:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													"value": "100000"
												},
												{
													"hexValue": "30",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8466:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													{
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													{
														"typeIdentifier": "t_rational_30_by_1",
														"typeString": "int_const 30"
													},
													{
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 685,
												"name": "LevelData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 566,
												"src": "8417:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_LevelData_$566_storage_ptr_$",
													"typeString": "type(struct StakingFactoryLP.LevelData storage pointer)"
												}
											},
											"id": 691,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "8417:51:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LevelData_$566_memory_ptr",
												"typeString": "struct StakingFactoryLP.LevelData memory"
											}
										},
										"src": "8405:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_LevelData_$566_storage",
											"typeString": "struct StakingFactoryLP.LevelData storage ref"
										}
									},
									"id": 693,
									"nodeType": "ExpressionStatement",
									"src": "8405:63:0"
								},
								{
									"expression": {
										"id": 696,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"id": 694,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 547,
											"src": "8529:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"hexValue": "31",
											"id": 695,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8537:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "8529:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 697,
									"nodeType": "ExpressionStatement",
									"src": "8529:9:0"
								}
							]
						},
						"id": 699,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "createLevels",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 680,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8316:2:0"
						},
						"returnParameters": {
							"id": 681,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8328:0:0"
						},
						"scope": 768,
						"src": "8295:247:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 710,
							"nodeType": "Block",
							"src": "8567:98:0",
							"statements": [
								{
									"expression": {
										"arguments": [
											{
												"commonType": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"id": 705,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"expression": {
														"id": 702,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8579:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8579:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"id": 704,
													"name": "stakingContractAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "8593:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"src": "8579:36:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"hexValue": "53656e6465722068617320746f2062652061207374616b696e6720636f6e74726163742e",
												"id": 706,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8617:38:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2",
													"typeString": "literal_string \"Sender has to be a staking contract.\""
												},
												"value": "Sender has to be a staking contract."
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_73d2da8341fc9b2e4e51196296746ab5f880cc8219ff42b4f978768f17eddba2",
													"typeString": "literal_string \"Sender has to be a staking contract.\""
												}
											],
											"id": 701,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [4294967278, 4294967278],
											"referencedDeclaration": 4294967278,
											"src": "8571:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 707,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "8571:85:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 708,
									"nodeType": "ExpressionStatement",
									"src": "8571:85:0"
								},
								{
									"id": 709,
									"nodeType": "PlaceholderStatement",
									"src": "8660:1:0"
								}
							]
						},
						"id": 711,
						"name": "restricted",
						"nodeType": "ModifierDefinition",
						"parameters": {
							"id": 700,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8564:2:0"
						},
						"src": "8545:120:0",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 746,
							"nodeType": "Block",
							"src": "8730:162:0",
							"statements": [
								{
									"expression": {
										"id": 723,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"expression": {
												"baseExpression": {
													"id": 718,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "8734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
													}
												},
												"id": 720,
												"indexExpression": {
													"id": 719,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "8741:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8734:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$566_storage",
													"typeString": "struct StakingFactoryLP.LevelData storage ref"
												}
											},
											"id": 721,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": true,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 565,
											"src": "8734:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "+=",
										"rightHandSide": {
											"id": 722,
											"name": "tokenValue",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 713,
											"src": "8759:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8734:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 724,
									"nodeType": "ExpressionStatement",
									"src": "8734:35:0"
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 727,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"id": 725,
											"name": "level",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 547,
											"src": "8777:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"hexValue": "32",
											"id": 726,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8786:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"src": "8777:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 730,
									"nodeType": "IfStatement",
									"src": "8773:32:0",
									"trueBody": {
										"id": 729,
										"nodeType": "Block",
										"src": "8789:16:0",
										"statements": [
											{
												"functionReturnParameters": 717,
												"id": 728,
												"nodeType": "Return",
												"src": "8794:7:0"
											}
										]
									}
								},
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 739,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"baseExpression": {
													"id": 731,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "8812:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
													}
												},
												"id": 733,
												"indexExpression": {
													"id": 732,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "8819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8812:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$566_storage",
													"typeString": "struct StakingFactoryLP.LevelData storage ref"
												}
											},
											"id": 734,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "alloted",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 565,
											"src": "8812:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">=",
										"rightExpression": {
											"expression": {
												"baseExpression": {
													"id": 735,
													"name": "levels",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 578,
													"src": "8837:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LevelData_$566_storage_$",
														"typeString": "mapping(uint256 => struct StakingFactoryLP.LevelData storage ref)"
													}
												},
												"id": 737,
												"indexExpression": {
													"id": 736,
													"name": "level",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "8844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"isConstant": false,
												"isLValue": true,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "IndexAccess",
												"src": "8837:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LevelData_$566_storage",
													"typeString": "struct StakingFactoryLP.LevelData storage ref"
												}
											},
											"id": 738,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "allowedForXCoins",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 557,
											"src": "8837:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "8812:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 745,
									"nodeType": "IfStatement",
									"src": "8808:81:0",
									"trueBody": {
										"id": 744,
										"nodeType": "Block",
										"src": "8869:20:0",
										"statements": [
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 740,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8874:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8874:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "8874:10:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "7bdecea1",
						"id": 747,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"id": 716,
								"modifierName": {
									"id": 715,
									"name": "restricted",
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 711,
									"src": "8719:10:0"
								},
								"nodeType": "ModifierInvocation",
								"src": "8719:10:0"
							}
						],
						"name": "updateTokens",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 714,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 713,
									"mutability": "mutable",
									"name": "tokenValue",
									"nodeType": "VariableDeclaration",
									"scope": 747,
									"src": "8690:18:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 712,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8690:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "8689:20:0"
						},
						"returnParameters": {
							"id": 717,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8730:0:0"
						},
						"scope": 768,
						"src": "8668:224:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 766,
							"nodeType": "Block",
							"src": "8932:168:0",
							"statements": [
								{
									"condition": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 759,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"expression": {
												"id": 750,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967292,
												"src": "9034:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 751,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "timestamp",
											"nodeType": "MemberAccess",
											"src": "9034:15:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": ">",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 752,
												"name": "startTime",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 545,
												"src": "9052:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "+",
											"rightExpression": {
												"commonType": {
													"typeIdentifier": "t_rational_86400_by_1",
													"typeString": "int_const 86400"
												},
												"id": 757,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"commonType": {
														"typeIdentifier": "t_rational_1440_by_1",
														"typeString": "int_const 1440"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3630",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9064:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3234",
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9069:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24_by_1",
															"typeString": "int_const 24"
														},
														"value": "24"
													},
													"src": "9064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1440_by_1",
														"typeString": "int_const 1440"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "3630",
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9074:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												"src": "9064:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_86400_by_1",
													"typeString": "int_const 86400"
												}
											},
											"src": "9052:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "9034:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 765,
									"nodeType": "IfStatement",
									"src": "9030:67:0",
									"trueBody": {
										"id": 764,
										"nodeType": "Block",
										"src": "9078:19:0",
										"statements": [
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 760,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9083:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9091:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9083:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "9083:9:0"
											}
										]
									}
								}
							]
						},
						"functionSelector": "f12ca698",
						"id": 767,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "updateLevelCheck",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 748,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8920:2:0"
						},
						"returnParameters": {
							"id": 749,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "8932:0:0"
						},
						"scope": 768,
						"src": "8895:205:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					}
				],
				"scope": 769,
				"src": "6762:2340:0"
			}
		],
		"src": "32:9071:0"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.1+commit.df193b15.Emscripten.clang"
	},
	"networks": {
		"3": {
			"events": {
				"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
					"anonymous": false,
					"inputs": [
						{
							"indexed": true,
							"internalType": "address",
							"name": "previousOwner",
							"type": "address"
						},
						{
							"indexed": true,
							"internalType": "address",
							"name": "newOwner",
							"type": "address"
						}
					],
					"name": "OwnershipTransferred",
					"type": "event"
				}
			},
			"links": {},
			"address": "0x0f39919bf1AC2318E02B12704c0E7698D419EAB1",
			"transactionHash": "0x87fc2eab56b67dd4085af60cd302fd1211f1f59d0037971e4ebd8eaebcbae3e2"
		}
	},
	"schemaVersion": "3.3.4",
	"updatedAt": "2021-04-08T17:48:30.717Z",
	"networkType": "ethereum",
	"devdoc": {
		"kind": "dev",
		"methods": {
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
